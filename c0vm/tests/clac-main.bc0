C0 C0 FF EE       # magic number
00 13             # version 9, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

4C E2             # string pool total size
# string pool
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 31 34 2D 34 35 2E 33 39 00  # "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 31 34 2D 35 37 2E 36 32 00  # "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 31 35 2D 36 32 2E 34 37 00  # "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 32 30 2E 31 30 2D 32 30 2E 34 34 00  # "lib/queue_of_string.c0:20.10-20.44"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 33 34 2E 38 2D 33 34 2E 34 33 00  # "lib/queue_of_string.c0:34.8-34.43"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 33 38 2E 31 33 2D 33 38 2E 32 34 00  # "lib/queue_of_string.c0:38.13-38.24"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 33 38 2E 34 2D 33 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:38.4-38.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 34 34 2E 31 33 2D 34 34 2E 32 34 00  # "lib/queue_of_string.c0:44.13-44.24"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 34 34 2E 34 2D 34 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:44.4-44.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 30 2E 31 32 2D 35 30 2E 32 39 00  # "lib/queue_of_string.c0:50.12-50.29"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 30 2E 34 2D 35 30 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:50.4-50.30: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 31 2E 31 32 2D 35 31 2E 33 32 00  # "lib/queue_of_string.c0:51.12-51.32"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 31 2E 34 2D 35 31 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:51.4-51.33: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 32 2E 31 33 2D 36 32 2E 32 34 00  # "lib/queue_of_string.c0:62.13-62.24"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 32 2E 34 2D 36 32 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:62.4-62.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 33 2E 31 32 2D 36 33 2E 32 33 00  # "lib/queue_of_string.c0:63.12-63.23"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 33 2E 34 2D 36 33 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:63.4-63.24: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 33 2E 31 32 2D 36 33 2E 32 33 00  # "lib/queue_of_string.c0:63.12-63.23"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 33 2E 34 2D 36 33 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:63.4-63.24: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 33 2E 31 33 2D 37 33 2E 32 34 00  # "lib/queue_of_string.c0:73.13-73.24"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 33 2E 34 2D 37 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:73.4-73.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 34 2E 31 34 2D 37 34 2E 32 38 00  # "lib/queue_of_string.c0:74.14-74.28"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 34 2E 34 2D 37 34 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:74.4-74.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 35 2E 31 32 2D 37 35 2E 32 33 00  # "lib/queue_of_string.c0:75.12-75.23"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 35 2E 34 2D 37 35 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:75.4-75.24: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 33 2E 31 33 2D 38 33 2E 32 34 00  # "lib/queue_of_string.c0:83.13-83.24"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 33 2E 34 2D 38 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:83.4-83.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 34 2E 31 32 2D 38 34 2E 32 33 00  # "lib/queue_of_string.c0:84.12-84.23"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 34 2E 34 2D 38 34 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:84.4-84.24: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 35 2E 31 32 2D 38 35 2E 32 39 00  # "lib/queue_of_string.c0:85.12-85.29"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 35 2E 34 2D 38 35 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:85.4-85.30: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 36 2E 31 32 2D 38 36 2E 33 39 00  # "lib/queue_of_string.c0:86.12-86.39"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 38 36 2E 34 2D 38 36 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:86.4-86.40: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 34 2E 36 2D 31 30 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:104.6-104.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 33 2E 31 2D 31 30 34 2E 33 30 00  # "lib/queue_of_string.c0:103.1-104.30"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 37 2E 36 2D 31 30 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:107.6-107.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 36 2E 31 2D 31 30 37 2E 33 30 00  # "lib/queue_of_string.c0:106.1-107.30"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 39 2E 31 2D 31 31 31 2E 34 30 00  # "lib/queue_of_string.c0:109.1-111.40"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 30 2E 36 2D 31 31 30 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:110.6-110.30: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 31 2E 31 34 2D 31 31 31 2E 33 34 00  # "lib/queue_of_string.c0:111.14-111.34"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 31 2E 36 2D 31 31 31 2E 33 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:111.6-111.35: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 34 2E 36 2D 31 31 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:114.6-114.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 33 2E 31 2D 31 31 34 2E 33 30 00  # "lib/queue_of_string.c0:113.1-114.30"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 37 2E 36 2D 31 31 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:117.6-117.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 38 2E 31 36 2D 31 31 38 2E 33 30 00  # "lib/queue_of_string.c0:118.16-118.30"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 38 2E 36 2D 31 31 38 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0:118.6-118.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 31 36 2E 31 2D 31 31 38 2E 33 37 00  # "lib/queue_of_string.c0:116.1-118.37"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 32 32 2E 31 2D 31 32 34 2E 34 38 00  # "lib/queue_of_string.c0:122.1-124.48"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 32 33 2E 36 2D 31 32 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:123.6-123.30: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 32 34 2E 31 34 2D 31 32 34 2E 34 31 00  # "lib/queue_of_string.c0:124.14-124.41"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 32 34 2E 36 2D 31 32 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0:124.6-124.42: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 32 34 2E 33 32 2D 32 34 2E 37 30 00  # "lib/dict.c0:24.32-24.70"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 33 34 2E 32 31 2D 33 34 2E 35 36 00  # "lib/dict.c0:34.21-34.56"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 33 34 2E 36 2D 33 34 2E 35 37 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:34.6-34.57: @loop_invariant annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 35 35 2E 32 33 2D 35 35 2E 35 37 00  # "lib/dict.c0:55.23-55.57"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 36 30 2E 31 32 2D 36 30 2E 32 38 00  # "lib/dict.c0:60.12-60.28"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 36 30 2E 34 2D 36 30 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:60.4-60.29: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 36 38 2E 31 33 2D 36 38 2E 32 33 00  # "lib/dict.c0:68.13-68.23"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 36 38 2E 34 2D 36 38 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:68.4-68.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 37 31 2E 32 31 2D 37 31 2E 34 34 00  # "lib/dict.c0:71.21-71.44"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 37 31 2E 36 2D 37 31 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:71.6-71.45: @loop_invariant annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 32 2E 31 33 2D 38 32 2E 32 33 00  # "lib/dict.c0:82.13-82.23"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 32 2E 34 2D 38 32 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:82.4-82.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 33 2E 34 2D 38 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:83.4-83.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 38 2E 32 31 2D 38 38 2E 34 34 00  # "lib/dict.c0:88.21-88.44"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 38 2E 36 2D 38 38 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:88.6-88.45: @loop_invariant annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 31 32 2D 38 34 2E 32 32 00  # "lib/dict.c0:84.12-84.22"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 34 2D 38 34 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:84.4-84.23: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 31 32 2D 38 35 2E 33 32 00  # "lib/dict.c0:85.12-85.32"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 34 2D 38 35 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:85.4-85.41: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 31 32 2D 38 34 2E 32 32 00  # "lib/dict.c0:84.12-84.22"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 34 2D 38 34 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:84.4-84.23: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 31 32 2D 38 35 2E 33 32 00  # "lib/dict.c0:85.12-85.32"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 34 2D 38 35 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:85.4-85.41: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 31 32 2D 38 34 2E 32 32 00  # "lib/dict.c0:84.12-84.22"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 34 2E 34 2D 38 34 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:84.4-84.23: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 31 32 2D 38 35 2E 33 32 00  # "lib/dict.c0:85.12-85.32"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 38 35 2E 34 2D 38 35 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:85.4-85.41: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 31 32 2E 31 2D 31 31 33 2E 33 35 00  # "lib/dict.c0:112.1-113.35"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 31 33 2E 36 2D 31 31 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0:113.6-113.30: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 31 37 2E 36 2D 31 31 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:117.6-117.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 31 36 2E 31 2D 31 31 37 2E 33 30 00  # "lib/dict.c0:116.1-117.30"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 32 30 2E 36 2D 31 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:120.6-120.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 32 31 2E 36 2D 31 32 31 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0:121.6-121.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 31 31 39 2E 31 2D 31 32 31 2E 33 32 00  # "lib/dict.c0:119.1-121.32"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 31 39 2E 31 30 2D 31 39 2E 34 34 00  # "lib/stack_of_int.c0:19.10-19.44"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 33 32 2E 38 2D 33 32 2E 34 33 00  # "lib/stack_of_int.c0:32.8-32.43"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 33 36 2E 31 33 2D 33 36 2E 32 34 00  # "lib/stack_of_int.c0:36.13-36.24"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 33 36 2E 34 2D 33 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:36.4-36.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 34 32 2E 31 32 2D 34 32 2E 32 39 00  # "lib/stack_of_int.c0:42.12-42.29"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 34 32 2E 34 2D 34 32 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:42.4-42.30: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 34 33 2E 31 32 2D 34 33 2E 33 32 00  # "lib/stack_of_int.c0:43.12-43.32"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 34 33 2E 34 2D 34 33 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:43.4-43.33: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 35 33 2E 31 33 2D 35 33 2E 32 34 00  # "lib/stack_of_int.c0:53.13-53.24"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 35 33 2E 34 2D 35 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:53.4-53.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 35 34 2E 31 32 2D 35 34 2E 32 33 00  # "lib/stack_of_int.c0:54.12-54.23"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 35 34 2E 34 2D 35 34 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:54.4-54.24: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 33 2E 31 33 2D 36 33 2E 32 34 00  # "lib/stack_of_int.c0:63.13-63.24"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 33 2E 34 2D 36 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:63.4-63.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 34 2E 31 34 2D 36 34 2E 32 38 00  # "lib/stack_of_int.c0:64.14-64.28"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 34 2E 34 2D 36 34 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:64.4-64.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 35 2E 31 32 2D 36 35 2E 32 33 00  # "lib/stack_of_int.c0:65.12-65.23"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 36 35 2E 34 2D 36 35 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:65.4-65.24: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 31 2E 36 2D 38 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:81.6-81.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 30 2E 31 2D 38 31 2E 33 30 00  # "lib/stack_of_int.c0:80.1-81.30"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 33 2E 31 2D 38 35 2E 34 30 00  # "lib/stack_of_int.c0:83.1-85.40"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 34 2E 36 2D 38 34 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:84.6-84.30: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 35 2E 31 34 2D 38 35 2E 33 34 00  # "lib/stack_of_int.c0:85.14-85.34"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 35 2E 36 2D 38 35 2E 33 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0:85.6-85.35: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 38 2E 36 2D 38 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:88.6-88.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 38 37 2E 31 2D 38 38 2E 33 30 00  # "lib/stack_of_int.c0:87.1-88.30"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 39 31 2E 36 2D 39 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:91.6-91.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 39 32 2E 31 36 2D 39 32 2E 33 30 00  # "lib/stack_of_int.c0:92.16-92.30"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 39 32 2E 36 2D 39 32 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0:92.6-92.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 39 30 2E 31 2D 39 32 2E 33 36 00  # "lib/stack_of_int.c0:90.1-92.36"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 32 37 2E 33 33 2D 32 37 2E 36 37 00  # "lib/stack_of_queue_of_string.c0:27.33-27.67"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 34 30 2E 38 2D 34 30 2E 34 33 00  # "lib/stack_of_queue_of_string.c0:40.8-40.43"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 34 34 2E 31 33 2D 34 34 2E 32 35 00  # "lib/stack_of_queue_of_string.c0:44.13-44.25"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 34 34 2E 34 2D 34 34 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:44.4-44.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 30 2E 31 32 2D 35 30 2E 33 30 00  # "lib/stack_of_queue_of_string.c0:50.12-50.30"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 30 2E 34 2D 35 30 2E 33 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:50.4-50.31: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 31 2E 31 32 2D 35 31 2E 33 33 00  # "lib/stack_of_queue_of_string.c0:51.12-51.33"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 35 31 2E 34 2D 35 31 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:51.4-51.34: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 31 2E 31 33 2D 36 31 2E 32 35 00  # "lib/stack_of_queue_of_string.c0:61.13-61.25"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 31 2E 34 2D 36 31 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:61.4-61.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 33 2E 34 2D 36 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:63.4-63.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 32 2E 31 32 2D 36 32 2E 32 34 00  # "lib/stack_of_queue_of_string.c0:62.12-62.24"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 36 32 2E 34 2D 36 32 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:62.4-62.25: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 32 2E 31 33 2D 37 32 2E 32 35 00  # "lib/stack_of_queue_of_string.c0:72.13-72.25"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 32 2E 34 2D 37 32 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:72.4-72.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 33 2E 31 34 2D 37 33 2E 32 39 00  # "lib/stack_of_queue_of_string.c0:73.14-73.29"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 33 2E 34 2D 37 33 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:73.4-73.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 34 2E 31 32 2D 37 34 2E 32 34 00  # "lib/stack_of_queue_of_string.c0:74.12-74.24"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 34 2E 34 2D 37 34 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:74.4-74.25: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 37 35 2E 34 2D 37 35 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:75.4-75.28: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 31 2E 36 2D 39 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:91.6-91.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 30 2E 31 2D 39 31 2E 33 30 00  # "lib/stack_of_queue_of_string.c0:90.1-91.30"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 33 2E 31 2D 39 35 2E 34 31 00  # "lib/stack_of_queue_of_string.c0:93.1-95.41"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 34 2E 36 2D 39 34 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:94.6-94.30: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 35 2E 31 34 2D 39 35 2E 33 35 00  # "lib/stack_of_queue_of_string.c0:95.14-95.35"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 35 2E 36 2D 39 35 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:95.6-95.36: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 38 2E 36 2D 39 38 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:98.6-98.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 39 37 2E 31 2D 39 38 2E 34 33 00  # "lib/stack_of_queue_of_string.c0:97.1-98.43"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 31 2E 36 2D 31 30 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:101.6-101.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 32 2E 31 36 2D 31 30 32 2E 33 31 00  # "lib/stack_of_queue_of_string.c0:102.16-102.31"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 32 2E 36 2D 31 30 32 2E 33 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0:102.6-102.32: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 30 2E 31 2D 31 30 33 2E 33 35 00  # "lib/stack_of_queue_of_string.c0:100.1-103.35"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 31 30 33 2E 36 2D 31 30 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0:103.6-103.30: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 31 35 2E 33 34 2D 31 35 2E 35 34 00  # "/afs/andrew/course/15/122/lib/file.h0:15.34-15.54"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0:15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 31 2E 31 36 2D 32 31 2E 33 30 00  # "/afs/andrew/course/15/122/lib/file.h0:21.16-21.30"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 32 2E 31 34 2D 32 32 2E 32 38 00  # "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0:22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 32 2E 31 34 2D 32 32 2E 32 38 00  # "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0:22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 37 2E 31 36 2D 32 37 2E 33 30 00  # "/afs/andrew/course/15/122/lib/file.h0:27.16-27.30"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 33 35 2E 31 36 2D 33 35 2E 33 30 00  # "/afs/andrew/course/15/122/lib/file.h0:35.16-35.30"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 33 36 2E 31 36 2D 33 36 2E 32 37 00  # "/afs/andrew/course/15/122/lib/file.h0:36.16-36.27"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0:36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 31 2E 36 2D 32 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:21.6-21.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 32 2E 36 2D 32 32 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:22.6-22.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 30 2E 31 2D 32 32 2E 32 38 00  # "lib/tokenize.c0:20.1-22.28"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 35 2E 31 2D 32 36 2E 33 30 00  # "lib/tokenize.c0:25.1-26.30"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 33 30 2E 36 2D 33 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:30.6-30.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 32 39 2E 31 2D 33 30 2E 33 30 00  # "lib/tokenize.c0:29.1-30.30"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 34 33 2E 34 2D 34 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:43.4-43.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 34 38 2E 38 2D 34 38 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0:48.8-48.46: @loop_invariant annotation failed"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 32 2E 31 32 2D 35 32 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0:52.12-52.48: @loop_invariant annotation failed"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 31 2E 33 39 2D 35 31 2E 35 38 00  # "lib/tokenize.c0:51.39-51.58"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 31 2E 32 35 2D 35 31 2E 35 39 00  # "lib/tokenize.c0:51.25-51.59"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 37 2E 31 32 2D 35 37 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0:57.12-57.48: @loop_invariant annotation failed"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 36 2E 34 30 2D 35 36 2E 35 39 00  # "lib/tokenize.c0:56.40-56.59"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 36 2E 32 36 2D 35 36 2E 36 30 00  # "lib/tokenize.c0:56.26-56.60"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 39 2E 32 37 2D 35 39 2E 34 38 00  # "lib/tokenize.c0:59.27-59.48"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 35 39 2E 32 30 2D 35 39 2E 34 39 00  # "lib/tokenize.c0:59.20-59.49"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 36 38 2E 34 2D 36 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:68.4-68.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 36 39 2E 34 2D 36 39 2E 32 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:69.4-69.20: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 37 31 2E 31 37 2D 37 31 2E 32 37 00  # "lib/tokenize.c0:71.17-71.27"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 37 32 2E 33 2D 37 32 2E 32 34 00  # "lib/tokenize.c0:72.3-72.24"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 37 38 2E 34 2D 37 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0:78.4-78.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 38 30 2E 31 37 2D 38 30 2E 33 32 00  # "lib/tokenize.c0:80.17-80.32"
45 72 72 6F 72 3A 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 78 69 73 74 00  # "Error: file does not exist"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 38 32 2E 31 31 2D 38 32 2E 32 35 00  # "lib/tokenize.c0:82.11-82.25"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 38 33 2E 31 39 2D 38 33 2E 33 38 00  # "lib/tokenize.c0:83.19-83.38"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 38 34 2E 35 2D 38 34 2E 32 36 00  # "lib/tokenize.c0:84.5-84.26"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 38 36 2E 33 2D 38 36 2E 31 39 00  # "lib/tokenize.c0:86.3-86.19"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0:23.6-23.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 37 2E 31 35 2D 32 37 2E 33 34 00  # "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0:28.6-28.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0:34.6-34.73: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 38 2E 31 2D 39 2E 33 33 00  # "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 30 2E 31 2D 31 31 2E 34 32 00  # "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 32 2E 31 2D 31 33 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 31 39 2D 31 37 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 36 2E 31 2D 31 39 2E 34 38 00  # "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 32 2E 31 2D 32 34 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 37 2E 31 2D 32 39 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 31 37 2D 32 39 2E 32 36 00  # "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 32 31 2D 34 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 31 32 2D 34 30 2E 33 39 00  # "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 32 31 2D 34 32 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 31 32 2D 34 32 2E 34 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 31 2E 31 38 2D 35 31 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 37 2E 32 33 2D 35 37 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 36 30 2E 31 30 2D 36 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 30 2D 34 39 2E 35 30 00  # "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
63 6C 61 63 2E 63 30 3A 32 37 2E 32 33 2D 32 37 2E 33 33 00  # "clac.c0:27.23-27.33"
63 6C 61 63 2E 63 30 3A 32 38 2E 32 35 2D 32 38 2E 33 37 00  # "clac.c0:28.25-28.37"
63 6C 61 63 2E 63 30 3A 32 34 2E 34 2D 32 34 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0:24.4-24.28: @ensures annotation failed"
63 6C 61 63 2E 63 30 3A 33 34 2E 32 34 2D 33 34 2E 33 35 00  # "clac.c0:34.24-34.35"
63 6C 61 63 2E 63 30 3A 33 35 2E 31 34 2D 33 35 2E 32 30 00  # "clac.c0:35.14-35.20"
63 6C 61 63 2E 63 30 3A 33 36 2E 31 31 2D 33 36 2E 32 35 00  # "clac.c0:36.11-36.25"
3B 00  # ";"
63 6C 61 63 2E 63 30 3A 33 37 2E 35 2D 33 37 2E 32 33 00  # "clac.c0:37.5-37.23"
63 6C 61 63 2E 63 30 3A 33 38 2E 39 2D 33 38 2E 31 35 00  # "clac.c0:38.9-38.15"
3B 00  # ";"
75 6E 65 78 70 65 63 74 65 64 20 65 6E 64 20 6F 66 20 69 6E 70 75 74 00  # "unexpected end of input"
63 6C 61 63 2E 63 30 3A 34 35 2E 33 2D 34 35 2E 35 34 00  # "clac.c0:45.3-45.54"
63 6C 61 63 2E 63 30 3A 35 31 2E 32 33 2D 35 31 2E 33 32 00  # "clac.c0:51.23-51.32"
64 69 76 69 73 69 6F 6E 20 62 79 20 30 00  # "division by 0"
63 6C 61 63 2E 63 30 3A 35 35 2E 35 2D 35 35 2E 32 30 00  # "clac.c0:55.5-55.20"
63 6C 61 63 2E 63 30 3A 36 31 2E 32 33 2D 36 31 2E 33 32 00  # "clac.c0:61.23-61.32"
64 69 76 69 73 69 6F 6E 20 62 79 20 30 00  # "division by 0"
63 6C 61 63 2E 63 30 3A 36 35 2E 35 2D 36 35 2E 32 30 00  # "clac.c0:65.5-65.20"
63 6C 61 63 2E 63 30 3A 37 30 2E 34 2D 37 30 2E 32 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0:70.4-70.20: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6C 61 63 2E 63 30 3A 37 35 2E 36 2D 37 35 2E 32 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0:75.6-75.28: @loop_invariant annotation failed"
63 6C 61 63 2E 63 30 3A 38 30 2E 36 2D 38 30 2E 32 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0:80.6-80.20: @assert annotation failed"
63 6C 61 63 2E 63 30 3A 38 36 2E 31 38 2D 38 36 2E 32 39 00  # "clac.c0:86.18-86.29"
63 6C 61 63 2E 63 30 3A 38 38 2E 31 30 2D 38 38 2E 32 34 00  # "clac.c0:88.10-88.24"
63 6C 61 63 2E 63 30 3A 38 39 2E 31 38 2D 38 39 2E 32 34 00  # "clac.c0:89.18-89.24"
63 6C 61 63 2E 63 30 3A 38 39 2E 37 2D 38 39 2E 32 35 00  # "clac.c0:89.7-89.25"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
63 6C 61 63 2E 63 30 3A 39 33 2E 31 36 2D 39 33 2E 32 35 00  # "clac.c0:93.16-93.25"
63 6C 61 63 2E 63 30 3A 39 34 2E 33 2D 39 34 2E 32 31 00  # "clac.c0:94.3-94.21"
63 6C 61 63 2E 63 30 3A 39 35 2E 31 31 2D 39 35 2E 32 38 00  # "clac.c0:95.11-95.28"
63 6C 61 63 2E 63 30 3A 39 36 2E 31 33 2D 39 36 2E 32 32 00  # "clac.c0:96.13-96.22"
63 6C 61 63 2E 63 30 3A 39 36 2E 35 2D 39 36 2E 32 33 00  # "clac.c0:96.5-96.23"
63 6C 61 63 2E 63 30 3A 31 30 35 2E 34 2D 31 30 35 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0:105.4-105.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6C 61 63 2E 63 30 3A 31 30 38 2E 31 31 2D 31 30 38 2E 32 35 00  # "clac.c0:108.11-108.25"
63 6C 61 63 2E 63 30 3A 31 30 39 2E 31 38 2D 31 30 39 2E 32 34 00  # "clac.c0:109.18-109.24"
70 72 69 6E 74 00  # "print"
63 6C 61 63 2E 63 30 3A 31 31 32 2E 31 32 2D 31 31 32 2E 32 36 00  # "clac.c0:112.12-112.26"
63 6C 61 63 2E 63 30 3A 31 31 33 2E 31 37 2D 31 31 33 2E 32 33 00  # "clac.c0:113.17-113.23"
0A 00  # "\n"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
71 75 69 74 00  # "quit"
63 6C 61 63 2E 63 30 3A 31 30 36 2E 33 32 2D 31 30 36 2E 34 36 00  # "clac.c0:106.32-106.46"
63 6C 61 63 2E 63 30 3A 31 30 36 2E 34 2D 31 30 36 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0:106.4-106.47: @ensures annotation failed"
2B 00  # "+"
63 6C 61 63 2E 63 30 3A 31 32 31 2E 31 32 2D 31 32 31 2E 32 36 00  # "clac.c0:121.12-121.26"
63 6C 61 63 2E 63 30 3A 31 32 32 2E 31 37 2D 31 32 32 2E 32 33 00  # "clac.c0:122.17-122.23"
63 6C 61 63 2E 63 30 3A 31 32 33 2E 31 34 2D 31 32 33 2E 32 38 00  # "clac.c0:123.14-123.28"
63 6C 61 63 2E 63 30 3A 31 32 34 2E 31 39 2D 31 32 34 2E 32 35 00  # "clac.c0:124.19-124.25"
63 6C 61 63 2E 63 30 3A 31 32 36 2E 31 31 2D 31 32 36 2E 32 36 00  # "clac.c0:126.11-126.26"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
2D 00  # "-"
63 6C 61 63 2E 63 30 3A 31 33 31 2E 31 32 2D 31 33 31 2E 32 36 00  # "clac.c0:131.12-131.26"
63 6C 61 63 2E 63 30 3A 31 33 32 2E 31 37 2D 31 33 32 2E 32 33 00  # "clac.c0:132.17-132.23"
63 6C 61 63 2E 63 30 3A 31 33 33 2E 31 34 2D 31 33 33 2E 32 38 00  # "clac.c0:133.14-133.28"
63 6C 61 63 2E 63 30 3A 31 33 34 2E 31 39 2D 31 33 34 2E 32 35 00  # "clac.c0:134.19-134.25"
63 6C 61 63 2E 63 30 3A 31 33 36 2E 31 31 2D 31 33 36 2E 32 36 00  # "clac.c0:136.11-136.26"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
2A 00  # "*"
63 6C 61 63 2E 63 30 3A 31 34 31 2E 31 32 2D 31 34 31 2E 32 36 00  # "clac.c0:141.12-141.26"
63 6C 61 63 2E 63 30 3A 31 34 32 2E 31 37 2D 31 34 32 2E 32 33 00  # "clac.c0:142.17-142.23"
63 6C 61 63 2E 63 30 3A 31 34 33 2E 31 34 2D 31 34 33 2E 32 38 00  # "clac.c0:143.14-143.28"
63 6C 61 63 2E 63 30 3A 31 34 34 2E 31 39 2D 31 34 34 2E 32 35 00  # "clac.c0:144.19-144.25"
63 6C 61 63 2E 63 30 3A 31 34 36 2E 31 31 2D 31 34 36 2E 32 36 00  # "clac.c0:146.11-146.26"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
2F 00  # "/"
63 6C 61 63 2E 63 30 3A 31 35 31 2E 31 32 2D 31 35 31 2E 32 36 00  # "clac.c0:151.12-151.26"
63 6C 61 63 2E 63 30 3A 31 35 32 2E 31 37 2D 31 35 32 2E 32 33 00  # "clac.c0:152.17-152.23"
63 6C 61 63 2E 63 30 3A 31 35 33 2E 31 34 2D 31 35 33 2E 32 38 00  # "clac.c0:153.14-153.28"
63 6C 61 63 2E 63 30 3A 31 35 34 2E 31 39 2D 31 35 34 2E 32 35 00  # "clac.c0:154.19-154.25"
63 6C 61 63 2E 63 30 3A 31 35 35 2E 31 31 2D 31 35 35 2E 32 37 00  # "clac.c0:155.11-155.27"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
25 00  # "%"
63 6C 61 63 2E 63 30 3A 31 36 30 2E 31 32 2D 31 36 30 2E 32 36 00  # "clac.c0:160.12-160.26"
63 6C 61 63 2E 63 30 3A 31 36 31 2E 31 37 2D 31 36 31 2E 32 33 00  # "clac.c0:161.17-161.23"
63 6C 61 63 2E 63 30 3A 31 36 32 2E 31 34 2D 31 36 32 2E 32 38 00  # "clac.c0:162.14-162.28"
63 6C 61 63 2E 63 30 3A 31 36 33 2E 31 39 2D 31 36 33 2E 32 35 00  # "clac.c0:163.19-163.25"
63 6C 61 63 2E 63 30 3A 31 36 34 2E 31 31 2D 31 36 34 2E 32 37 00  # "clac.c0:164.11-164.27"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
3C 00  # "<"
63 6C 61 63 2E 63 30 3A 31 36 39 2E 31 32 2D 31 36 39 2E 32 36 00  # "clac.c0:169.12-169.26"
63 6C 61 63 2E 63 30 3A 31 37 30 2E 31 37 2D 31 37 30 2E 32 33 00  # "clac.c0:170.17-170.23"
63 6C 61 63 2E 63 30 3A 31 37 31 2E 31 34 2D 31 37 31 2E 32 38 00  # "clac.c0:171.14-171.28"
63 6C 61 63 2E 63 30 3A 31 37 32 2E 31 39 2D 31 37 32 2E 32 35 00  # "clac.c0:172.19-172.25"
63 6C 61 63 2E 63 30 3A 31 37 34 2E 31 33 2D 31 37 34 2E 32 33 00  # "clac.c0:174.13-174.23"
63 6C 61 63 2E 63 30 3A 31 37 36 2E 31 33 2D 31 37 36 2E 32 33 00  # "clac.c0:176.13-176.23"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
2A 2A 00  # "**"
63 6C 61 63 2E 63 30 3A 31 38 32 2E 31 32 2D 31 38 32 2E 32 36 00  # "clac.c0:182.12-182.26"
63 6C 61 63 2E 63 30 3A 31 38 33 2E 31 37 2D 31 38 33 2E 32 33 00  # "clac.c0:183.17-183.23"
63 6C 61 63 2E 63 30 3A 31 38 34 2E 31 34 2D 31 38 34 2E 32 38 00  # "clac.c0:184.14-184.28"
63 6C 61 63 2E 63 30 3A 31 38 35 2E 31 39 2D 31 38 35 2E 32 35 00  # "clac.c0:185.19-185.25"
6E 65 67 61 74 69 76 65 20 65 78 70 6F 6E 65 6E 74 73 20 61 72 65 20 6E 6F 74 20 76 61 6C 69 64 00  # "negative exponents are not valid"
63 6C 61 63 2E 63 30 3A 31 38 39 2E 32 36 2D 31 38 39 2E 33 34 00  # "clac.c0:189.26-189.34"
63 6C 61 63 2E 63 30 3A 31 39 30 2E 31 33 2D 31 39 30 2E 32 38 00  # "clac.c0:190.13-190.28"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
64 72 6F 70 00  # "drop"
63 6C 61 63 2E 63 30 3A 31 39 36 2E 31 32 2D 31 39 36 2E 32 36 00  # "clac.c0:196.12-196.26"
63 6C 61 63 2E 63 30 3A 31 39 37 2E 31 37 2D 31 39 37 2E 32 33 00  # "clac.c0:197.17-197.23"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
73 77 61 70 00  # "swap"
63 6C 61 63 2E 63 30 3A 32 30 31 2E 31 32 2D 32 30 31 2E 32 36 00  # "clac.c0:201.12-201.26"
63 6C 61 63 2E 63 30 3A 32 30 32 2E 31 37 2D 32 30 32 2E 32 33 00  # "clac.c0:202.17-202.23"
63 6C 61 63 2E 63 30 3A 32 30 33 2E 31 34 2D 32 30 33 2E 32 38 00  # "clac.c0:203.14-203.28"
63 6C 61 63 2E 63 30 3A 32 30 34 2E 31 39 2D 32 30 34 2E 32 35 00  # "clac.c0:204.19-204.25"
63 6C 61 63 2E 63 30 3A 32 30 35 2E 31 31 2D 32 30 35 2E 32 31 00  # "clac.c0:205.11-205.21"
63 6C 61 63 2E 63 30 3A 32 30 36 2E 31 31 2D 32 30 36 2E 32 31 00  # "clac.c0:206.11-206.21"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
72 6F 74 00  # "rot"
63 6C 61 63 2E 63 30 3A 32 31 31 2E 31 32 2D 32 31 31 2E 32 36 00  # "clac.c0:211.12-211.26"
63 6C 61 63 2E 63 30 3A 32 31 32 2E 31 37 2D 32 31 32 2E 32 33 00  # "clac.c0:212.17-212.23"
63 6C 61 63 2E 63 30 3A 32 31 33 2E 31 34 2D 32 31 33 2E 32 38 00  # "clac.c0:213.14-213.28"
63 6C 61 63 2E 63 30 3A 32 31 34 2E 31 39 2D 32 31 34 2E 32 35 00  # "clac.c0:214.19-214.25"
63 6C 61 63 2E 63 30 3A 32 31 35 2E 31 36 2D 32 31 35 2E 33 30 00  # "clac.c0:215.16-215.30"
63 6C 61 63 2E 63 30 3A 32 31 36 2E 32 31 2D 32 31 36 2E 32 37 00  # "clac.c0:216.21-216.27"
63 6C 61 63 2E 63 30 3A 32 31 37 2E 31 33 2D 32 31 37 2E 32 33 00  # "clac.c0:217.13-217.23"
63 6C 61 63 2E 63 30 3A 32 31 38 2E 31 33 2D 32 31 38 2E 32 33 00  # "clac.c0:218.13-218.23"
63 6C 61 63 2E 63 30 3A 32 31 39 2E 31 33 2D 32 31 39 2E 32 33 00  # "clac.c0:219.13-219.23"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
69 66 00  # "if"
63 6C 61 63 2E 63 30 3A 32 32 35 2E 31 32 2D 32 32 35 2E 32 36 00  # "clac.c0:225.12-225.26"
63 6C 61 63 2E 63 30 3A 32 32 36 2E 31 37 2D 32 32 36 2E 32 33 00  # "clac.c0:226.17-226.23"
63 6C 61 63 2E 63 30 3A 32 32 38 2E 31 37 2D 32 32 38 2E 33 31 00  # "clac.c0:228.17-228.31"
63 6C 61 63 2E 63 30 3A 32 32 39 2E 32 38 2D 32 32 39 2E 33 34 00  # "clac.c0:229.28-229.34"
63 6C 61 63 2E 63 30 3A 32 33 30 2E 31 39 2D 32 33 30 2E 33 33 00  # "clac.c0:230.19-230.33"
63 6C 61 63 2E 63 30 3A 32 33 31 2E 33 30 2D 32 33 31 2E 33 36 00  # "clac.c0:231.30-231.36"
63 6C 61 63 2E 63 30 3A 32 33 32 2E 32 31 2D 32 33 32 2E 33 35 00  # "clac.c0:232.21-232.35"
63 6C 61 63 2E 63 30 3A 32 33 33 2E 33 32 2D 32 33 33 2E 33 38 00  # "clac.c0:233.32-233.38"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
6E 6F 74 20 65 6E 6F 75 67 68 20 74 6F 6B 65 6E 73 20 66 6F 72 20 6F 70 65 72 61 74 69 6F 6E 00  # "not enough tokens for operation"
71 75 65 75 65 20 69 73 20 65 6D 70 74 79 00  # "queue is empty"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
70 69 63 6B 00  # "pick"
63 6C 61 63 2E 63 30 3A 32 34 31 2E 31 32 2D 32 34 31 2E 32 36 00  # "clac.c0:241.12-241.26"
63 6C 61 63 2E 63 30 3A 32 34 32 2E 31 37 2D 32 34 32 2E 32 33 00  # "clac.c0:242.17-242.23"
6F 6E 6C 79 20 73 74 72 69 63 74 6C 79 20 70 6F 73 69 74 69 76 65 20 69 6E 74 65 67 65 72 73 00  # "only strictly positive integers"
63 6C 61 63 2E 63 30 3A 32 34 36 2E 32 31 2D 32 34 36 2E 33 31 00  # "clac.c0:246.21-246.31"
63 6C 61 63 2E 63 30 3A 32 34 37 2E 31 31 2D 32 34 37 2E 32 33 00  # "clac.c0:247.11-247.23"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
73 6B 69 70 00  # "skip"
63 6C 61 63 2E 63 30 3A 32 35 32 2E 31 32 2D 32 35 32 2E 32 36 00  # "clac.c0:252.12-252.26"
63 6C 61 63 2E 63 30 3A 32 35 33 2E 31 37 2D 32 35 33 2E 32 33 00  # "clac.c0:253.17-253.23"
6E 65 67 61 74 69 76 65 20 76 61 6C 75 65 73 20 61 72 65 20 69 6E 76 61 6C 69 64 00  # "negative values are invalid"
63 6C 61 63 2E 63 30 3A 32 35 38 2E 31 38 2D 32 35 38 2E 33 32 00  # "clac.c0:258.18-258.32"
63 6C 61 63 2E 63 30 3A 32 35 39 2E 33 30 2D 32 35 39 2E 33 36 00  # "clac.c0:259.30-259.36"
75 6E 65 78 70 65 63 74 65 64 20 65 6E 64 20 6F 66 20 69 6E 70 75 74 00  # "unexpected end of input"
73 74 61 63 6B 20 69 73 20 65 6D 70 74 79 00  # "stack is empty"
3A 00  # ":"
63 6C 61 63 2E 63 30 3A 32 36 39 2E 31 32 2D 32 36 39 2E 32 36 00  # "clac.c0:269.12-269.26"
63 6C 61 63 2E 63 30 3A 32 37 30 2E 32 39 2D 32 37 30 2E 33 35 00  # "clac.c0:270.29-270.35"
63 6C 61 63 2E 63 30 3A 32 37 31 2E 39 2D 32 37 31 2E 33 35 00  # "clac.c0:271.9-271.35"
75 6E 65 78 70 65 63 74 65 64 20 65 6E 64 20 6F 66 20 69 6E 70 75 74 00  # "unexpected end of input"
63 6C 61 63 2E 63 30 3A 32 37 34 2E 31 36 2D 32 37 34 2E 34 38 00  # "clac.c0:274.16-274.48"
63 6C 61 63 2E 63 30 3A 32 37 35 2E 32 34 2D 32 37 35 2E 33 35 00  # "clac.c0:275.24-275.35"
63 6C 61 63 2E 63 30 3A 32 37 36 2E 31 35 2D 32 37 36 2E 32 39 00  # "clac.c0:276.15-276.29"
63 6C 61 63 2E 63 30 3A 32 37 37 2E 32 31 2D 32 37 37 2E 32 37 00  # "clac.c0:277.21-277.27"
63 6C 61 63 2E 63 30 3A 32 37 37 2E 39 2D 32 37 37 2E 32 38 00  # "clac.c0:277.9-277.28"
63 6C 61 63 2E 63 30 3A 32 37 39 2E 37 2D 32 37 39 2E 33 38 00  # "clac.c0:279.7-279.38"
63 6C 61 63 2E 63 30 3A 32 38 30 2E 34 34 2D 32 38 30 2E 37 36 00  # "clac.c0:280.44-280.76"
63 6C 61 63 2E 63 30 3A 32 38 30 2E 32 33 2D 32 38 30 2E 37 37 00  # "clac.c0:280.23-280.77"
63 6C 61 63 2E 63 30 3A 32 38 31 2E 31 35 2D 32 38 31 2E 33 33 00  # "clac.c0:281.15-281.33"
63 6C 61 63 2E 63 30 3A 32 38 32 2E 31 36 2D 32 38 32 2E 32 36 00  # "clac.c0:282.16-282.26"
63 6C 61 63 2E 63 30 3A 32 38 32 2E 39 2D 32 38 32 2E 32 37 00  # "clac.c0:282.9-282.27"
63 6C 61 63 2E 63 30 3A 32 38 37 2E 31 36 2D 32 38 37 2E 33 34 00  # "clac.c0:287.16-287.34"
75 6E 64 65 66 69 6E 65 64 20 74 6F 6B 65 6E 20 00  # "undefined token "
63 6C 61 63 2E 63 30 3A 32 39 30 2E 31 35 2D 32 39 30 2E 35 31 00  # "clac.c0:290.15-290.51"
63 6C 61 63 2E 63 30 3A 32 39 32 2E 37 2D 32 39 32 2E 31 38 00  # "clac.c0:292.7-292.18"
63 6C 61 63 2E 63 30 3A 32 39 35 2E 39 2D 32 39 35 2E 32 33 00  # "clac.c0:295.9-295.23"
63 6C 61 63 2E 63 30 3A 32 39 35 2E 32 38 2D 32 39 35 2E 35 38 00  # "clac.c0:295.28-295.58"
63 6C 61 63 2E 63 30 3A 32 39 36 2E 32 32 2D 32 39 36 2E 34 34 00  # "clac.c0:296.22-296.44"
63 6C 61 63 2E 63 30 3A 32 39 37 2E 31 34 2D 32 39 37 2E 33 31 00  # "clac.c0:297.14-297.31"
63 6C 61 63 2E 63 30 3A 32 39 37 2E 33 36 2D 32 39 37 2E 36 36 00  # "clac.c0:297.36-297.66"
63 6C 61 63 2E 63 30 3A 32 39 38 2E 31 36 2D 32 39 38 2E 33 38 00  # "clac.c0:298.16-298.38"
63 6C 61 63 2E 63 30 3A 33 30 30 2E 31 35 2D 33 30 30 2E 33 32 00  # "clac.c0:300.15-300.32"
63 6C 61 63 2E 63 30 3A 33 30 31 2E 31 36 2D 33 30 31 2E 32 35 00  # "clac.c0:301.16-301.25"
63 6C 61 63 2E 63 30 3A 33 30 31 2E 39 2D 33 30 31 2E 32 36 00  # "clac.c0:301.9-301.26"
63 6C 61 63 2E 63 30 3A 31 30 36 2E 33 32 2D 31 30 36 2E 34 36 00  # "clac.c0:106.32-106.46"
63 6C 61 63 2E 63 30 3A 31 30 36 2E 34 2D 31 30 36 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0:106.4-106.47: @ensures annotation failed"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 31 33 2E 34 2D 31 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-main.c0:13.4-13.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 31 35 2E 37 2D 31 35 2E 32 31 00  # "clac-main.c0:15.7-15.21"
53 74 61 63 6B 20 69 73 20 6E 6F 77 20 65 6D 70 74 79 00  # "Stack is now empty"
53 74 61 63 6B 20 69 73 20 6E 6F 77 20 5B 00  # "Stack is now ["
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 32 31 2E 31 33 2D 32 31 2E 31 39 00  # "clac-main.c0:21.13-21.19"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 32 32 2E 37 2D 32 32 2E 32 31 00  # "clac-main.c0:22.7-22.21"
5D 00  # "]"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 32 34 2E 35 2D 32 34 2E 31 37 00  # "clac-main.c0:24.5-24.17"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 32 38 2E 31 34 2D 32 38 2E 32 30 00  # "clac-main.c0:28.14-28.20"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 32 39 2E 39 2D 32 39 2E 32 33 00  # "clac-main.c0:29.9-29.23"
00  # ""
2E 2E 2C 00  # "..,"
2C 00  # ","
5D 00  # "]"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 33 31 2E 33 2D 33 31 2E 31 36 00  # "clac-main.c0:31.3-31.16"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 33 31 2E 31 38 2D 33 31 2E 33 30 00  # "clac-main.c0:31.18-31.30"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 33 36 2E 34 2D 33 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-main.c0:36.4-36.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 33 39 2E 31 35 2D 33 39 2E 32 36 00  # "clac-main.c0:39.15-39.26"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 34 30 2E 31 36 2D 34 30 2E 32 38 00  # "clac-main.c0:40.16-40.28"
43 6C 61 63 20 74 6F 70 20 6C 65 76 65 6C 0A 00  # "Clac top level\n"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 34 36 2E 39 2D 34 36 2E 32 33 00  # "clac-main.c0:46.9-46.23"
63 6C 61 63 3E 3E 20 00  # "clac>> "
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 35 30 2E 39 2D 35 30 2E 32 32 00  # "clac-main.c0:50.9-50.22"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 35 36 2E 31 32 2D 35 36 2E 32 36 00  # "clac-main.c0:56.12-56.26"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 35 37 2E 32 34 2D 35 37 2E 33 38 00  # "clac-main.c0:57.24-57.38"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 35 37 2E 38 2D 35 37 2E 33 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-main.c0:57.8-57.39: @assert annotation failed"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 35 38 2E 35 2D 35 38 2E 31 37 00  # "clac-main.c0:58.5-58.17"
42 79 65 21 0A 00  # "Bye!\n"
28 6E 6F 6E 65 29 00  # "(none)"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 36 38 2E 31 37 2D 36 38 2E 32 39 00  # "clac-main.c0:68.17-68.29"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 37 30 2E 31 35 2D 37 30 2E 32 36 00  # "clac-main.c0:70.15-70.26"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 37 33 2E 36 2D 37 33 2E 32 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-main.c0:73.6-73.28: @loop_invariant annotation failed"
4C 6F 61 64 69 6E 67 20 66 69 6C 65 20 00  # "Loading file "
0A 00  # "\n"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 37 37 2E 35 2D 37 37 2E 33 33 00  # "clac-main.c0:77.5-77.33"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 38 30 2E 33 2D 38 30 2E 31 35 00  # "clac-main.c0:80.3-80.15"

00 62             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 0A             # number of local variables = 10
00 93             # code length = 147 bytes
14 4C 2E # aldc 19502      # s[19502] = "(none)"
36 00    # vstore 0        # _caller = "(none)";
14 4C 35 # aldc 19509      # s[19509] = "clac-main.c0:68.17-68.29"
B8 00 4A # invokestatic 74 # args_parse__1("clac-main.c0:68.17-68.29")
36 02    # vstore 2        # args = args_parse__1("clac-main.c0:68.17-68.29");
15 02    # vload 2         # args
62 00    # aaddf 0         # &args->argc
2E       # imload          # args->argc
36 03    # vstore 3        # argc = args->argc;
14 4C 4E # aldc 19534      # s[19534] = "clac-main.c0:70.15-70.26"
B8 00 15 # invokestatic 21 # queue_new__1("clac-main.c0:70.15-70.26")
36 04    # vstore 4        # Q = queue_new__1("clac-main.c0:70.15-70.26");
10 00    # bipush 0        # 0
36 05    # vstore 5        # i = 0;
# <759:loop>
A7 00 03 # goto +3         # goto <760:body>
# <760:body>
10 00    # bipush 0        # 0
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <762:cond_true>
A7 00 08 # goto +8         # goto <763:cond_false>
# <762:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <764:cond_end>
# <763:cond_false>
10 00    # bipush 0        # false
# <764:cond_end>
14 4C 67 # aldc 19559      # s[19559] = "clac-main.c0:73.6-73.28: @loop_invariant annotation failed"
CF       # assert          # assert(0 <= i) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # argc
A1 00 06 # if_icmplt +6    # if (i < argc) goto <765:then>
A7 00 3E # goto +62        # goto <766:else>
# <765:then>
15 02    # vload 2         # args
62 08    # aaddf 8         # &args->argv
2F       # amload          # args->argv
15 05    # vload 5         # i
63       # aadds           # &args->argv[i]
2F       # amload          # args->argv[i]
36 06    # vstore 6        # filename = args->argv[i];
14 4C A2 # aldc 19618      # s[19618] = "Loading file "
B7 00 1D # invokenative 29 # print("Loading file ")
57       # pop             # (ignore result)
15 06    # vload 6         # filename
B7 00 1D # invokenative 29 # print(filename)
57       # pop             # (ignore result)
14 4C B0 # aldc 19632      # s[19632] = "\n"
B7 00 1D # invokenative 29 # print("\n")
57       # pop             # (ignore result)
15 02    # vload 2         # args
62 08    # aaddf 8         # &args->argv
2F       # amload          # args->argv
15 05    # vload 5         # i
63       # aadds           # &args->argv[i]
2F       # amload          # args->argv[i]
15 04    # vload 4         # Q
14 4C B2 # aldc 19634      # s[19634] = "clac-main.c0:77.5-77.33"
B8 00 3F # invokestatic 63 # input_file__1(args->argv[i], Q, "clac-main.c0:77.5-77.33")
57       # pop             # (ignore result)
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <767:endif>
# <766:else>
A7 00 06 # goto +6         # break
# <767:endif>
A7 FF A0 # goto -96        # goto <759:loop>
# <761:exit>
15 04    # vload 4         # Q
14 4C CA # aldc 19658      # s[19658] = "clac-main.c0:80.3-80.15"
B8 00 61 # invokestatic 97 # top_level(Q, "clac-main.c0:80.3-80.15")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
36 01    # vstore 1        # _result = 0;
15 01    # vload 1         # _result
B0       # return          # 


#<string_charat__1>
00 03             # number of arguments = 3
00 04             # number of local variables = 4
00 3E             # code length = 62 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # idx
A4 00 06 # if_icmple +6    # if (0 <= idx) goto <00:cond_true>
A7 00 1A # goto +26        # goto <01:cond_false>
# <00:cond_true>
15 01    # vload 1         # idx
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
A1 00 06 # if_icmplt +6    # if (idx < string_length(s)) goto <03:cond_true>
A7 00 08 # goto +8         # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0        # false
# <05:cond_end>
A7 00 05 # goto +5         # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0        # false
# <02:cond_end>
14 00 00 # aldc 0          # s[0] = "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 00 51 # aldc 81         # s[81] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= idx) && (idx < string_length(s))) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # idx
B7 00 02 # invokenative 2  # string_charat(s, idx)
36 03    # vstore 3        # _result = string_charat(s, idx);
15 03    # vload 3         # _result
B0       # return          # 


#<string_join__1>
00 03             # number of arguments = 3
00 04             # number of local variables = 4
00 2D             # code length = 45 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 01 # invokenative 1  # string_join(a, b)
36 03    # vstore 3        # _result = string_join(a, b);
15 03    # vload 3         # _result
B7 00 00 # invokenative 0  # string_length(_result)
15 00    # vload 0         # a
B7 00 00 # invokenative 0  # string_length(a)
15 01    # vload 1         # b
B7 00 00 # invokenative 0  # string_length(b)
60       # iadd            # (string_length(a) + string_length(b))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (string_length(a) + string_length(b))) goto <06:cond_true>
A7 00 08 # goto +8         # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0        # false
# <08:cond_end>
14 00 63 # aldc 99         # s[99] = "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (string_length(a) + string_length(b))) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_sub__1>
00 04             # number of arguments = 4
00 05             # number of local variables = 5
00 65             # code length = 101 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # start
A4 00 06 # if_icmple +6    # if (0 <= start) goto <12:and>
A7 00 24 # goto +36        # goto <10:cond_false>
# <12:and>
15 01    # vload 1         # start
15 02    # vload 2         # end
A4 00 06 # if_icmple +6    # if (start <= end) goto <09:cond_true>
A7 00 1A # goto +26        # goto <10:cond_false>
# <09:cond_true>
15 02    # vload 2         # end
15 00    # vload 0         # a
B7 00 00 # invokenative 0  # string_length(a)
A4 00 06 # if_icmple +6    # if (end <= string_length(a)) goto <13:cond_true>
A7 00 08 # goto +8         # goto <14:cond_false>
# <13:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <15:cond_end>
# <14:cond_false>
10 00    # bipush 0        # false
# <15:cond_end>
A7 00 05 # goto +5         # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0        # false
# <11:cond_end>
14 00 B2 # aldc 178        # s[178] = "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 01 03 # aldc 259        # s[259] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((0 <= start) && (start <= end)) && (end <= string_length(a))) [failure message on stack]
15 00    # vload 0         # a
15 01    # vload 1         # start
15 02    # vload 2         # end
B7 00 03 # invokenative 3  # string_sub(a, start, end)
36 04    # vstore 4        # _result = string_sub(a, start, end);
15 04    # vload 4         # _result
B7 00 00 # invokenative 0  # string_length(_result)
15 02    # vload 2         # end
15 01    # vload 1         # start
64       # isub            # (end - start)
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (end - start)) goto <16:cond_true>
A7 00 08 # goto +8         # goto <17:cond_false>
# <16:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <18:cond_end>
# <17:cond_false>
10 00    # bipush 0        # false
# <18:cond_end>
14 01 15 # aldc 277        # s[277] = "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (end - start)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<string_compare__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 04 # invokenative 4  # string_compare(a, b)
36 03    # vstore 3        # _result = string_compare(a, b);
10 FF    # bipush -1       # -1
15 03    # vload 3         # _result
A4 00 06 # if_icmple +6    # if (-(1) <= _result) goto <19:cond_true>
A7 00 17 # goto +23        # goto <20:cond_false>
# <19:cond_true>
15 03    # vload 3         # _result
10 01    # bipush 1        # 1
A4 00 06 # if_icmple +6    # if (_result <= 1) goto <22:cond_true>
A7 00 08 # goto +8         # goto <23:cond_false>
# <22:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <24:cond_end>
# <23:cond_false>
10 00    # bipush 0        # false
# <24:cond_end>
A7 00 05 # goto +5         # goto <21:cond_end>
# <20:cond_false>
10 00    # bipush 0        # false
# <21:cond_end>
14 01 64 # aldc 356        # s[356] = "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
CF       # assert          # assert((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_fromchar__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5F             # code length = 95 bytes
15 00    # vload 0         # c
10 00    # bipush 0        # '\000'
A0 00 06 # if_cmpne +6     # if (c != '\0') goto <25:cond_true>
A7 00 08 # goto +8         # goto <26:cond_false>
# <25:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <27:cond_end>
# <26:cond_false>
10 00    # bipush 0        # false
# <27:cond_end>
14 01 B3 # aldc 435        # s[435] = "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 02 04 # aldc 516        # s[516] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(c != '\0') [failure message on stack]
15 00    # vload 0         # c
B7 00 05 # invokenative 5  # string_fromchar(c)
36 02    # vstore 2        # _result = string_fromchar(c);
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == 1) goto <28:cond_true>
A7 00 08 # goto +8         # goto <29:cond_false>
# <28:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <30:cond_end>
# <29:cond_false>
10 00    # bipush 0        # false
# <30:cond_end>
14 02 16 # aldc 534        # s[534] = "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == 1) [failure message on stack]
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
14 02 65 # aldc 613        # s[613] = "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
B8 00 01 # invokestatic 1  # string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39")
15 00    # vload 0         # c
9F 00 06 # if_cmpeq +6     # if (string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) goto <31:cond_true>
A7 00 08 # goto +8         # goto <32:cond_false>
# <31:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <33:cond_end>
# <32:cond_false>
10 00    # bipush 0        # false
# <33:cond_end>
14 02 99 # aldc 665        # s[665] = "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
CF       # assert          # assert(string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_terminated__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 3C             # code length = 60 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <34:cond_true>
A7 00 18 # goto +24        # goto <35:cond_false>
# <34:cond_true>
15 01    # vload 1         # n
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if (n <= \length(A)) goto <37:cond_true>
A7 00 08 # goto +8         # goto <38:cond_false>
# <37:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <39:cond_end>
# <38:cond_false>
10 00    # bipush 0        # false
# <39:cond_end>
A7 00 05 # goto +5         # goto <36:cond_end>
# <35:cond_false>
10 00    # bipush 0        # false
# <36:cond_end>
14 02 E8 # aldc 744        # s[744] = "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 03 39 # aldc 825        # s[825] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0         # A
15 01    # vload 1         # n
B7 00 06 # invokenative 6  # string_terminated(A, n)
36 03    # vstore 3        # _result = string_terminated(A, n);
15 03    # vload 3         # _result
B0       # return          # 


#<string_to_chararray__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 3A             # code length = 58 bytes
15 00    # vload 0         # s
B7 00 07 # invokenative 7  # string_to_chararray(s)
36 02    # vstore 2        # _result = string_to_chararray(s);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
A2 00 06 # if_icmpge +6    # if (\length(_result) >= (string_length(s) + 1)) goto <40:cond_true>
A7 00 08 # goto +8         # goto <41:cond_false>
# <40:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <42:cond_end>
# <41:cond_false>
10 00    # bipush 0        # false
# <42:cond_end>
14 03 4B # aldc 843        # s[843] = "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
CF       # assert          # assert(\length(_result) >= (string_length(s) + 1)) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
14 03 9A # aldc 922        # s[922] = "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
B8 00 06 # invokestatic 6  # string_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62")
14 03 CE # aldc 974        # s[974] = "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
CF       # assert          # assertstring_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_from_chararray__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 40             # code length = 64 bytes
15 00    # vload 0         # A
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
14 04 1D # aldc 1053       # s[1053] = "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
B8 00 06 # invokestatic 6  # string_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47")
14 04 51 # aldc 1105       # s[1105] = "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 04 A2 # aldc 1186       # s[1186] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertstring_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47") [failure message on stack]
15 00    # vload 0         # A
B7 00 08 # invokenative 8  # string_from_chararray(A)
36 02    # vstore 2        # _result = string_from_chararray(A);
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(_result) + 1)
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if ((string_length(_result) + 1) <= \length(A)) goto <43:cond_true>
A7 00 08 # goto +8         # goto <44:cond_false>
# <43:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <45:cond_end>
# <44:cond_false>
10 00    # bipush 0        # false
# <45:cond_end>
14 04 B4 # aldc 1204       # s[1204] = "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
CF       # assert          # assert((string_length(_result) + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_ord__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2E             # code length = 46 bytes
15 00    # vload 0         # c
B7 00 09 # invokenative 9  # char_ord(c)
36 02    # vstore 2        # _result = char_ord(c);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <46:cond_true>
A7 00 17 # goto +23        # goto <47:cond_false>
# <46:cond_true>
15 02    # vload 2         # _result
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (_result <= 127) goto <49:cond_true>
A7 00 08 # goto +8         # goto <50:cond_false>
# <49:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <51:cond_end>
# <50:cond_false>
10 00    # bipush 0        # false
# <51:cond_end>
A7 00 05 # goto +5         # goto <48:cond_end>
# <47:cond_false>
10 00    # bipush 0        # false
# <48:cond_end>
14 05 03 # aldc 1283       # s[1283] = "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_chr__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 39             # code length = 57 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <52:cond_true>
A7 00 17 # goto +23        # goto <53:cond_false>
# <52:cond_true>
15 00    # vload 0         # n
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (n <= 127) goto <55:cond_true>
A7 00 08 # goto +8         # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0        # false
# <57:cond_end>
A7 00 05 # goto +5         # goto <54:cond_end>
# <53:cond_false>
10 00    # bipush 0        # false
# <54:cond_end>
14 05 52 # aldc 1362       # s[1362] = "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 05 A3 # aldc 1443       # s[1443] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0         # n
B7 00 0A # invokenative 10 # char_chr(n)
36 02    # vstore 2        # _result = char_chr(n);
15 02    # vload 2         # _result
B0       # return          # 


#<is_segment_slist>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 39             # code length = 57 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (start == NULL) goto <58:then>
A7 00 0D # goto +13        # goto <59:else>
# <58:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <60:endif>
# <59:else>
# <60:endif>
15 00    # vload 0         # start
15 01    # vload 1         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <61:then>
A7 00 0D # goto +13        # goto <62:else>
# <61:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <63:endif>
# <62:else>
# <63:endif>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
15 01    # vload 1         # end
14 05 B5 # aldc 1461       # s[1461] = "lib/queue_of_string.c0:20.10-20.44"
B8 00 0B # invokestatic 11 # is_segment_slist(start->next, end, "lib/queue_of_string.c0:20.10-20.44")
36 03    # vstore 3        # _result = is_segment_slist(start->next, end, "lib/queue_of_string.c0:20.10-20.44");
15 03    # vload 3         # _result
B0       # return          # 


#<is_queue>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 23             # code length = 35 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <64:cond_true>
A7 00 16 # goto +22        # goto <65:cond_false>
# <64:cond_true>
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
2F       # amload          # Q->front
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
2F       # amload          # Q->back
14 05 D8 # aldc 1496       # s[1496] = "lib/queue_of_string.c0:34.8-34.43"
B8 00 0B # invokestatic 11 # is_segment_slist(Q->front, Q->back, "lib/queue_of_string.c0:34.8-34.43")
A7 00 05 # goto +5         # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0        # false
# <66:cond_end>
36 02    # vstore 2        # _result = ((Q != NULL) && is_segment_slist(Q->front, Q->back, "lib/queue_of_string.c0:34.8-34.43"));
15 02    # vload 2         # _result
B0       # return          # 


#<queue_empty>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 33             # code length = 51 bytes
15 00    # vload 0         # Q
14 05 FA # aldc 1530       # s[1530] = "lib/queue_of_string.c0:38.13-38.24"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:38.13-38.24")
14 06 1D # aldc 1565       # s[1565] = "lib/queue_of_string.c0:38.4-38.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 06 5D # aldc 1629       # s[1629] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:38.4-38.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:38.13-38.24") [failure message on stack]
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
2F       # amload          # Q->front
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
2F       # amload          # Q->back
9F 00 06 # if_cmpeq +6     # if (Q->front == Q->back) goto <67:cond_true>
A7 00 08 # goto +8         # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0        # false
# <69:cond_end>
36 02    # vstore 2        # _result = (Q->front == Q->back);
15 02    # vload 2         # _result
B0       # return          # 


#<queue_is_read_only>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 21             # code length = 33 bytes
15 00    # vload 0         # Q
14 06 6F # aldc 1647       # s[1647] = "lib/queue_of_string.c0:44.13-44.24"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:44.13-44.24")
14 06 92 # aldc 1682       # s[1682] = "lib/queue_of_string.c0:44.4-44.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 06 D2 # aldc 1746       # s[1746] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:44.4-44.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:44.13-44.24") [failure message on stack]
15 00    # vload 0         # Q
62 00    # aaddf 0         # &Q->is_read_only
34       # cmload          # Q->is_read_only
36 02    # vstore 2        # _result = Q->is_read_only;
15 02    # vload 2         # _result
B0       # return          # 


#<queue_new>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 3C             # code length = 60 bytes
BB 18    # new 24          # alloc(queue)
36 02    # vstore 2        # Q = alloc(queue);
BB 10    # new 16          # alloc(slist)
36 03    # vstore 3        # l = alloc(slist);
15 02    # vload 2         # Q
62 00    # aaddf 0         # &Q->is_read_only
10 00    # bipush 0        # false
55       # cmstore         # Q->is_read_only = false;
15 02    # vload 2         # Q
62 08    # aaddf 8         # &Q->front
15 03    # vload 3         # l
4F       # amstore         # Q->front = l;
15 02    # vload 2         # Q
62 10    # aaddf 16        # &Q->back
15 03    # vload 3         # l
4F       # amstore         # Q->back = l;
15 02    # vload 2         # Q
36 01    # vstore 1        # _result = Q;
15 01    # vload 1         # _result
14 06 E4 # aldc 1764       # s[1764] = "lib/queue_of_string.c0:50.12-50.29"
B8 00 0C # invokestatic 12 # is_queue(_result, "lib/queue_of_string.c0:50.12-50.29")
14 07 07 # aldc 1799       # s[1799] = "lib/queue_of_string.c0:50.4-50.30: @ensures annotation failed"
CF       # assert          # assertis_queue(_result, "lib/queue_of_string.c0:50.12-50.29") [failure message on stack]
15 01    # vload 1         # _result
14 07 45 # aldc 1861       # s[1861] = "lib/queue_of_string.c0:51.12-51.32"
B8 00 0D # invokestatic 13 # queue_empty(_result, "lib/queue_of_string.c0:51.12-51.32")
14 07 68 # aldc 1896       # s[1896] = "lib/queue_of_string.c0:51.4-51.33: @ensures annotation failed"
CF       # assert          # assertqueue_empty(_result, "lib/queue_of_string.c0:51.12-51.32") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<enq>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 54             # code length = 84 bytes
15 00    # vload 0         # Q
14 07 A6 # aldc 1958       # s[1958] = "lib/queue_of_string.c0:62.13-62.24"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:62.13-62.24")
14 07 C9 # aldc 1993       # s[1993] = "lib/queue_of_string.c0:62.4-62.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 08 09 # aldc 2057       # s[2057] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:62.4-62.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:62.13-62.24") [failure message on stack]
BB 10    # new 16          # alloc(slist)
36 03    # vstore 3        # l = alloc(slist);
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
2F       # amload          # Q->back
62 00    # aaddf 0         # &Q->back->data
15 01    # vload 1         # x
4F       # amstore         # Q->back->data = x;
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
2F       # amload          # Q->back
62 08    # aaddf 8         # &Q->back->next
15 03    # vload 3         # l
4F       # amstore         # Q->back->next = l;
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
15 03    # vload 3         # l
4F       # amstore         # Q->back = l;
15 00    # vload 0         # Q
14 08 1B # aldc 2075       # s[2075] = "lib/queue_of_string.c0:63.12-63.23"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:63.12-63.23")
14 08 3E # aldc 2110       # s[2110] = "lib/queue_of_string.c0:63.4-63.24: @ensures annotation failed"
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:63.12-63.23") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # Q
14 08 7C # aldc 2172       # s[2172] = "lib/queue_of_string.c0:63.12-63.23"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:63.12-63.23")
14 08 9F # aldc 2207       # s[2207] = "lib/queue_of_string.c0:63.4-63.24: @ensures annotation failed"
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:63.12-63.23") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<deq>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5B             # code length = 91 bytes
15 00    # vload 0         # Q
14 08 DD # aldc 2269       # s[2269] = "lib/queue_of_string.c0:73.13-73.24"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:73.13-73.24")
14 09 00 # aldc 2304       # s[2304] = "lib/queue_of_string.c0:73.4-73.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 09 40 # aldc 2368       # s[2368] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:73.4-73.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:73.13-73.24") [failure message on stack]
15 00    # vload 0         # Q
14 09 52 # aldc 2386       # s[2386] = "lib/queue_of_string.c0:74.14-74.28"
B8 00 0D # invokestatic 13 # queue_empty(Q, "lib/queue_of_string.c0:74.14-74.28")
10 01    # bipush 1        # 
82       # ixor            # !(queue_empty(Q, "lib/queue_of_string.c0:74.14-74.28"))
14 09 75 # aldc 2421       # s[2421] = "lib/queue_of_string.c0:74.4-74.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 09 B5 # aldc 2485       # s[2485] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:74.4-74.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(queue_empty(Q, "lib/queue_of_string.c0:74.14-74.28")) [failure message on stack]
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
2F       # amload          # Q->front
62 00    # aaddf 0         # &Q->front->data
2F       # amload          # Q->front->data
36 03    # vstore 3        # x = Q->front->data;
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
2F       # amload          # Q->front
62 08    # aaddf 8         # &Q->front->next
2F       # amload          # Q->front->next
4F       # amstore         # Q->front = Q->front->next;
15 03    # vload 3         # x
36 02    # vstore 2        # _result = x;
15 00    # vload 0         # Q
14 09 C7 # aldc 2503       # s[2503] = "lib/queue_of_string.c0:75.12-75.23"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:75.12-75.23")
14 09 EA # aldc 2538       # s[2538] = "lib/queue_of_string.c0:75.4-75.24: @ensures annotation failed"
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:75.12-75.23") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<queue_read_only_copy>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 61             # code length = 97 bytes
15 00    # vload 0         # Q
14 0A 28 # aldc 2600       # s[2600] = "lib/queue_of_string.c0:83.13-83.24"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:83.13-83.24")
14 0A 4B # aldc 2635       # s[2635] = "lib/queue_of_string.c0:83.4-83.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0A 8B # aldc 2699       # s[2699] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:83.4-83.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:83.13-83.24") [failure message on stack]
BB 18    # new 24          # alloc(queue)
36 03    # vstore 3        # QC = alloc(queue);
15 03    # vload 3         # QC
62 00    # aaddf 0         # &QC->is_read_only
10 01    # bipush 1        # true
55       # cmstore         # QC->is_read_only = true;
15 03    # vload 3         # QC
62 08    # aaddf 8         # &QC->front
15 00    # vload 0         # Q
62 08    # aaddf 8         # &Q->front
2F       # amload          # Q->front
4F       # amstore         # QC->front = Q->front;
15 03    # vload 3         # QC
62 10    # aaddf 16        # &QC->back
15 00    # vload 0         # Q
62 10    # aaddf 16        # &Q->back
2F       # amload          # Q->back
4F       # amstore         # QC->back = Q->back;
15 03    # vload 3         # QC
36 02    # vstore 2        # _result = QC;
15 00    # vload 0         # Q
14 0A 9D # aldc 2717       # s[2717] = "lib/queue_of_string.c0:84.12-84.23"
B8 00 0C # invokestatic 12 # is_queue(Q, "lib/queue_of_string.c0:84.12-84.23")
14 0A C0 # aldc 2752       # s[2752] = "lib/queue_of_string.c0:84.4-84.24: @ensures annotation failed"
CF       # assert          # assertis_queue(Q, "lib/queue_of_string.c0:84.12-84.23") [failure message on stack]
15 02    # vload 2         # _result
14 0A FE # aldc 2814       # s[2814] = "lib/queue_of_string.c0:85.12-85.29"
B8 00 0C # invokestatic 12 # is_queue(_result, "lib/queue_of_string.c0:85.12-85.29")
14 0B 21 # aldc 2849       # s[2849] = "lib/queue_of_string.c0:85.4-85.30: @ensures annotation failed"
CF       # assert          # assertis_queue(_result, "lib/queue_of_string.c0:85.12-85.29") [failure message on stack]
15 02    # vload 2         # _result
14 0B 5F # aldc 2911       # s[2911] = "lib/queue_of_string.c0:86.12-86.39"
B8 00 0E # invokestatic 14 # queue_is_read_only(_result, "lib/queue_of_string.c0:86.12-86.39")
14 0B 82 # aldc 2946       # s[2946] = "lib/queue_of_string.c0:86.4-86.40: @ensures annotation failed"
CF       # assert          # assertqueue_is_read_only(_result, "lib/queue_of_string.c0:86.12-86.39") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<queue_empty__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2C             # code length = 44 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <70:cond_true>
A7 00 08 # goto +8         # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0        # false
# <72:cond_end>
14 0B C0 # aldc 3008       # s[3008] = "lib/queue_of_string.c0:104.6-104.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0C 02 # aldc 3074       # s[3074] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:104.6-104.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # Q
14 0C 14 # aldc 3092       # s[3092] = "lib/queue_of_string.c0:103.1-104.30"
B8 00 0D # invokestatic 13 # queue_empty(Q, "lib/queue_of_string.c0:103.1-104.30")
36 02    # vstore 2        # _result = queue_empty(Q, "lib/queue_of_string.c0:103.1-104.30");
15 02    # vload 2         # _result
B0       # return          # 


#<queue_is_read_only__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2C             # code length = 44 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <73:cond_true>
A7 00 08 # goto +8         # goto <74:cond_false>
# <73:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0        # false
# <75:cond_end>
14 0C 38 # aldc 3128       # s[3128] = "lib/queue_of_string.c0:107.6-107.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0C 7A # aldc 3194       # s[3194] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:107.6-107.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # Q
14 0C 8C # aldc 3212       # s[3212] = "lib/queue_of_string.c0:106.1-107.30"
B8 00 0E # invokestatic 14 # queue_is_read_only(Q, "lib/queue_of_string.c0:106.1-107.30")
36 02    # vstore 2        # _result = queue_is_read_only(Q, "lib/queue_of_string.c0:106.1-107.30");
15 02    # vload 2         # _result
B0       # return          # 


#<queue_new__1>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 2B             # code length = 43 bytes
14 0C B0 # aldc 3248       # s[3248] = "lib/queue_of_string.c0:109.1-111.40"
B8 00 0F # invokestatic 15 # queue_new("lib/queue_of_string.c0:109.1-111.40")
36 01    # vstore 1        # _result = queue_new("lib/queue_of_string.c0:109.1-111.40");
15 01    # vload 1         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <76:cond_true>
A7 00 08 # goto +8         # goto <77:cond_false>
# <76:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0        # false
# <78:cond_end>
14 0C D4 # aldc 3284       # s[3284] = "lib/queue_of_string.c0:110.6-110.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 01    # vload 1         # _result
14 0D 14 # aldc 3348       # s[3348] = "lib/queue_of_string.c0:111.14-111.34"
B8 00 13 # invokestatic 19 # queue_empty__1(_result, "lib/queue_of_string.c0:111.14-111.34")
14 0D 39 # aldc 3385       # s[3385] = "lib/queue_of_string.c0:111.6-111.35: @ensures annotation failed"
CF       # assert          # assertqueue_empty__1(_result, "lib/queue_of_string.c0:111.14-111.34") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<enq__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <79:cond_true>
A7 00 08 # goto +8         # goto <80:cond_false>
# <79:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0        # false
# <81:cond_end>
14 0D 79 # aldc 3449       # s[3449] = "lib/queue_of_string.c0:114.6-114.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 0D BB # aldc 3515       # s[3515] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:114.6-114.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # Q
15 01    # vload 1         # x
14 0D CD # aldc 3533       # s[3533] = "lib/queue_of_string.c0:113.1-114.30"
B8 00 10 # invokestatic 16 # enq(Q, x, "lib/queue_of_string.c0:113.1-114.30")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<deq__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 46             # code length = 70 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <82:cond_true>
A7 00 08 # goto +8         # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0        # false
# <84:cond_end>
14 0D F1 # aldc 3569       # s[3569] = "lib/queue_of_string.c0:117.6-117.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0E 33 # aldc 3635       # s[3635] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:117.6-117.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # Q
14 0E 45 # aldc 3653       # s[3653] = "lib/queue_of_string.c0:118.16-118.30"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "lib/queue_of_string.c0:118.16-118.30")
10 01    # bipush 1        # 
82       # ixor            # !(queue_empty__1(Q, "lib/queue_of_string.c0:118.16-118.30"))
14 0E 6A # aldc 3690       # s[3690] = "lib/queue_of_string.c0:118.6-118.31: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0E AC # aldc 3756       # s[3756] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/queue_of_string.c0:118.6-118.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(queue_empty__1(Q, "lib/queue_of_string.c0:118.16-118.30")) [failure message on stack]
15 00    # vload 0         # Q
14 0E BE # aldc 3774       # s[3774] = "lib/queue_of_string.c0:116.1-118.37"
B8 00 11 # invokestatic 17 # deq(Q, "lib/queue_of_string.c0:116.1-118.37")
36 02    # vstore 2        # _result = deq(Q, "lib/queue_of_string.c0:116.1-118.37");
15 02    # vload 2         # _result
B0       # return          # 


#<queue_read_only_copy__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2D             # code length = 45 bytes
15 00    # vload 0         # Q
14 0E E2 # aldc 3810       # s[3810] = "lib/queue_of_string.c0:122.1-124.48"
B8 00 12 # invokestatic 18 # queue_read_only_copy(Q, "lib/queue_of_string.c0:122.1-124.48")
36 02    # vstore 2        # _result = queue_read_only_copy(Q, "lib/queue_of_string.c0:122.1-124.48");
15 02    # vload 2         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <85:cond_true>
A7 00 08 # goto +8         # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0        # false
# <87:cond_end>
14 0F 06 # aldc 3846       # s[3846] = "lib/queue_of_string.c0:123.6-123.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 02    # vload 2         # _result
14 0F 46 # aldc 3910       # s[3910] = "lib/queue_of_string.c0:124.14-124.41"
B8 00 14 # invokestatic 20 # queue_is_read_only__1(_result, "lib/queue_of_string.c0:124.14-124.41")
14 0F 6B # aldc 3947       # s[3947] = "lib/queue_of_string.c0:124.6-124.42: @ensures annotation failed"
CF       # assert          # assertqueue_is_read_only__1(_result, "lib/queue_of_string.c0:124.14-124.41") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<is_assoclist_segment>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 4A             # code length = 74 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (start == NULL) goto <88:then>
A7 00 0D # goto +13        # goto <89:else>
# <88:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <90:endif>
# <89:else>
# <90:endif>
15 00    # vload 0         # start
15 01    # vload 1         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <91:then>
A7 00 0D # goto +13        # goto <92:else>
# <91:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <93:endif>
# <92:else>
# <93:endif>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->def
2F       # amload          # start->def
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start->def != NULL) goto <94:cond_true>
A7 00 13 # goto +19        # goto <95:cond_false>
# <94:cond_true>
15 00    # vload 0         # start
62 10    # aaddf 16        # &start->next
2F       # amload          # start->next
15 01    # vload 1         # end
14 0F AB # aldc 4011       # s[4011] = "lib/dict.c0:24.32-24.70"
B8 00 19 # invokestatic 25 # is_assoclist_segment(start->next, end, "lib/dict.c0:24.32-24.70")
A7 00 05 # goto +5         # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0        # false
# <96:cond_end>
36 03    # vstore 3        # _result = ((start->def != NULL) && is_assoclist_segment(start->next, end, "lib/dict.c0:24.32-24.70"));
15 03    # vload 3         # _result
B0       # return          # 


#<is_acyclic_assoclist>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 C6             # code length = 198 bytes
15 00    # vload 0         # p
01       # aconst_null     # NULL
9F 00 12 # if_cmpeq +18    # if (p == NULL) goto <97:then>
A7 00 03 # goto +3         # goto <100:or>
# <100:or>
15 00    # vload 0         # p
62 10    # aaddf 16        # &p->next
2F       # amload          # p->next
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (p->next == NULL) goto <97:then>
A7 00 0D # goto +13        # goto <98:else>
# <97:then>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <99:endif>
# <98:else>
# <99:endif>
15 00    # vload 0         # p
36 03    # vstore 3        # tortise = p;
15 00    # vload 0         # p
62 10    # aaddf 16        # &p->next
2F       # amload          # p->next
36 04    # vstore 4        # hare = p->next;
15 00    # vload 0         # p
62 08    # aaddf 8         # &p->def
2F       # amload          # p->def
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (p->def == NULL) goto <101:then>
A7 00 0D # goto +13        # goto <102:else>
# <101:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <103:endif>
# <102:else>
# <103:endif>
# <104:loop>
A7 00 03 # goto +3         # goto <105:body>
# <105:body>
15 03    # vload 3         # tortise
15 04    # vload 4         # hare
14 0F C3 # aldc 4035       # s[4035] = "lib/dict.c0:34.21-34.56"
B8 00 19 # invokestatic 25 # is_assoclist_segment(tortise, hare, "lib/dict.c0:34.21-34.56")
14 0F DB # aldc 4059       # s[4059] = "lib/dict.c0:34.6-34.57: @loop_invariant annotation failed"
CF       # assert          # assertis_assoclist_segment(tortise, hare, "lib/dict.c0:34.21-34.56") [failure message on stack]
15 03    # vload 3         # tortise
15 04    # vload 4         # hare
A0 00 06 # if_cmpne +6     # if (tortise != hare) goto <107:then>
A7 00 61 # goto +97        # goto <108:else>
# <107:then>
15 04    # vload 4         # hare
62 10    # aaddf 16        # &hare->next
2F       # amload          # hare->next
01       # aconst_null     # NULL
9F 00 15 # if_cmpeq +21    # if (hare->next == NULL) goto <110:then>
A7 00 03 # goto +3         # goto <113:or>
# <113:or>
15 04    # vload 4         # hare
62 10    # aaddf 16        # &hare->next
2F       # amload          # hare->next
62 10    # aaddf 16        # &hare->next->next
2F       # amload          # hare->next->next
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (hare->next->next == NULL) goto <110:then>
A7 00 0D # goto +13        # goto <111:else>
# <110:then>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <112:endif>
# <111:else>
# <112:endif>
15 04    # vload 4         # hare
62 08    # aaddf 8         # &hare->def
2F       # amload          # hare->def
01       # aconst_null     # NULL
9F 00 15 # if_cmpeq +21    # if (hare->def == NULL) goto <114:then>
A7 00 03 # goto +3         # goto <117:or>
# <117:or>
15 04    # vload 4         # hare
62 10    # aaddf 16        # &hare->next
2F       # amload          # hare->next
62 08    # aaddf 8         # &hare->next->def
2F       # amload          # hare->next->def
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (hare->next->def == NULL) goto <114:then>
A7 00 0D # goto +13        # goto <115:else>
# <114:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <116:endif>
# <115:else>
# <116:endif>
15 03    # vload 3         # tortise
62 10    # aaddf 16        # &tortise->next
2F       # amload          # tortise->next
36 03    # vstore 3        # tortise = tortise->next;
15 04    # vload 4         # hare
62 10    # aaddf 16        # &hare->next
2F       # amload          # hare->next
62 10    # aaddf 16        # &hare->next->next
2F       # amload          # hare->next->next
36 04    # vstore 4        # hare = hare->next->next;
A7 00 06 # goto +6         # goto <109:endif>
# <108:else>
A7 00 06 # goto +6         # break
# <109:endif>
A7 FF 84 # goto -124       # goto <104:loop>
# <106:exit>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 


#<is_dict>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 1E             # code length = 30 bytes
15 00    # vload 0         # D
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (D != NULL) goto <118:cond_true>
A7 00 11 # goto +17        # goto <119:cond_false>
# <118:cond_true>
15 00    # vload 0         # D
62 00    # aaddf 0         # &D->assoclist
2F       # amload          # D->assoclist
14 10 15 # aldc 4117       # s[4117] = "lib/dict.c0:55.23-55.57"
B8 00 1A # invokestatic 26 # is_acyclic_assoclist(D->assoclist, "lib/dict.c0:55.23-55.57")
A7 00 05 # goto +5         # goto <120:cond_end>
# <119:cond_false>
10 00    # bipush 0        # false
# <120:cond_end>
36 02    # vstore 2        # _result = ((D != NULL) && is_acyclic_assoclist(D->assoclist, "lib/dict.c0:55.23-55.57"));
15 02    # vload 2         # _result
B0       # return          # 


#<dict_new>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 1D             # code length = 29 bytes
BB 08    # new 8           # alloc(dict)
36 02    # vstore 2        # D = alloc(dict);
15 02    # vload 2         # D
62 00    # aaddf 0         # &D->assoclist
01       # aconst_null     # NULL
4F       # amstore         # D->assoclist = NULL;
15 02    # vload 2         # D
36 01    # vstore 1        # _result = D;
15 01    # vload 1         # _result
14 10 2D # aldc 4141       # s[4141] = "lib/dict.c0:60.12-60.28"
B8 00 1B # invokestatic 27 # is_dict(_result, "lib/dict.c0:60.12-60.28")
14 10 45 # aldc 4165       # s[4165] = "lib/dict.c0:60.4-60.29: @ensures annotation failed"
CF       # assert          # assertis_dict(_result, "lib/dict.c0:60.12-60.28") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<dict_lookup>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 6B             # code length = 107 bytes
15 00    # vload 0         # D
14 10 78 # aldc 4216       # s[4216] = "lib/dict.c0:68.13-68.23"
B8 00 1B # invokestatic 27 # is_dict(D, "lib/dict.c0:68.13-68.23")
14 10 90 # aldc 4240       # s[4240] = "lib/dict.c0:68.4-68.24: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 10 C5 # aldc 4293       # s[4293] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:68.4-68.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dict(D, "lib/dict.c0:68.13-68.23") [failure message on stack]
15 00    # vload 0         # D
62 00    # aaddf 0         # &D->assoclist
2F       # amload          # D->assoclist
36 04    # vstore 4        # p = D->assoclist;
# <121:loop>
A7 00 03 # goto +3         # goto <122:body>
# <122:body>
15 04    # vload 4         # p
14 10 D7 # aldc 4311       # s[4311] = "lib/dict.c0:71.21-71.44"
B8 00 1A # invokestatic 26 # is_acyclic_assoclist(p, "lib/dict.c0:71.21-71.44")
14 10 EF # aldc 4335       # s[4335] = "lib/dict.c0:71.6-71.45: @loop_invariant annotation failed"
CF       # assert          # assertis_acyclic_assoclist(p, "lib/dict.c0:71.21-71.44") [failure message on stack]
15 04    # vload 4         # p
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (p != NULL) goto <124:then>
A7 00 2C # goto +44        # goto <125:else>
# <124:then>
15 01    # vload 1         # name
15 04    # vload 4         # p
62 00    # aaddf 0         # &p->name
2F       # amload          # p->name
B7 00 0B # invokenative 11 # string_equal(name, p->name)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(name, p->name) == true) goto <127:then>
A7 00 10 # goto +16        # goto <128:else>
# <127:then>
15 04    # vload 4         # p
62 08    # aaddf 8         # &p->def
2F       # amload          # p->def
36 03    # vstore 3        # _result = p->def;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <129:endif>
# <128:else>
# <129:endif>
15 04    # vload 4         # p
62 10    # aaddf 16        # &p->next
2F       # amload          # p->next
36 04    # vstore 4        # p = p->next;
A7 00 06 # goto +6         # goto <126:endif>
# <125:else>
A7 00 06 # goto +6         # break
# <126:endif>
A7 FF BC # goto -68        # goto <121:loop>
# <123:exit>
01       # aconst_null     # NULL
36 03    # vstore 3        # _result = NULL;
15 03    # vload 3         # _result
B0       # return          # 


#<dict_insert>
00 04             # number of arguments = 4
00 05             # number of local variables = 5
01 25             # code length = 293 bytes
15 00    # vload 0         # D
14 11 29 # aldc 4393       # s[4393] = "lib/dict.c0:82.13-82.23"
B8 00 1B # invokestatic 27 # is_dict(D, "lib/dict.c0:82.13-82.23")
14 11 41 # aldc 4417       # s[4417] = "lib/dict.c0:82.4-82.24: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 11 76 # aldc 4470       # s[4470] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:82.4-82.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dict(D, "lib/dict.c0:82.13-82.23") [failure message on stack]
15 02    # vload 2         # def
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (def != NULL) goto <130:cond_true>
A7 00 08 # goto +8         # goto <131:cond_false>
# <130:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0        # false
# <132:cond_end>
14 11 88 # aldc 4488       # s[4488] = "lib/dict.c0:83.4-83.25: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 11 BD # aldc 4541       # s[4541] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:83.4-83.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(def != NULL) [failure message on stack]
15 00    # vload 0         # D
62 00    # aaddf 0         # &D->assoclist
2F       # amload          # D->assoclist
36 04    # vstore 4        # p = D->assoclist;
# <133:loop>
A7 00 03 # goto +3         # goto <134:body>
# <134:body>
15 04    # vload 4         # p
14 11 CF # aldc 4559       # s[4559] = "lib/dict.c0:88.21-88.44"
B8 00 1A # invokestatic 26 # is_acyclic_assoclist(p, "lib/dict.c0:88.21-88.44")
14 11 E7 # aldc 4583       # s[4583] = "lib/dict.c0:88.6-88.45: @loop_invariant annotation failed"
CF       # assert          # assertis_acyclic_assoclist(p, "lib/dict.c0:88.21-88.44") [failure message on stack]
15 04    # vload 4         # p
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (p != NULL) goto <136:then>
A7 00 54 # goto +84        # goto <137:else>
# <136:then>
15 01    # vload 1         # name
15 04    # vload 4         # p
62 00    # aaddf 0         # &p->name
2F       # amload          # p->name
B7 00 0B # invokenative 11 # string_equal(name, p->name)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(name, p->name) == true) goto <139:then>
A7 00 38 # goto +56        # goto <140:else>
# <139:then>
15 04    # vload 4         # p
62 08    # aaddf 8         # &p->def
15 02    # vload 2         # def
4F       # amstore         # p->def = def;
15 00    # vload 0         # D
14 12 21 # aldc 4641       # s[4641] = "lib/dict.c0:84.12-84.22"
B8 00 1B # invokestatic 27 # is_dict(D, "lib/dict.c0:84.12-84.22")
14 12 39 # aldc 4665       # s[4665] = "lib/dict.c0:84.4-84.23: @ensures annotation failed"
CF       # assert          # assertis_dict(D, "lib/dict.c0:84.12-84.22") [failure message on stack]
15 00    # vload 0         # D
15 01    # vload 1         # name
14 12 6C # aldc 4716       # s[4716] = "lib/dict.c0:85.12-85.32"
B8 00 1D # invokestatic 29 # dict_lookup(D, name, "lib/dict.c0:85.12-85.32")
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) goto <142:cond_true>
A7 00 08 # goto +8         # goto <143:cond_false>
# <142:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0        # false
# <144:cond_end>
14 12 84 # aldc 4740       # s[4740] = "lib/dict.c0:85.4-85.41: @ensures annotation failed"
CF       # assert          # assert(dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 03 # goto +3         # goto <141:endif>
# <140:else>
# <141:endif>
15 04    # vload 4         # p
62 10    # aaddf 16        # &p->next
2F       # amload          # p->next
36 04    # vstore 4        # p = p->next;
A7 00 06 # goto +6         # goto <138:endif>
# <137:else>
A7 00 06 # goto +6         # break
# <138:endif>
A7 FF 94 # goto -108       # goto <133:loop>
# <135:exit>
BB 18    # new 24          # alloc(struct alist_node)
36 04    # vstore 4        # p = alloc(struct alist_node);
15 04    # vload 4         # p
62 00    # aaddf 0         # &p->name
15 01    # vload 1         # name
4F       # amstore         # p->name = name;
15 04    # vload 4         # p
62 08    # aaddf 8         # &p->def
15 02    # vload 2         # def
4F       # amstore         # p->def = def;
15 04    # vload 4         # p
62 10    # aaddf 16        # &p->next
15 00    # vload 0         # D
62 00    # aaddf 0         # &D->assoclist
2F       # amload          # D->assoclist
4F       # amstore         # p->next = D->assoclist;
15 00    # vload 0         # D
62 00    # aaddf 0         # &D->assoclist
15 04    # vload 4         # p
4F       # amstore         # D->assoclist = p;
15 00    # vload 0         # D
14 12 B7 # aldc 4791       # s[4791] = "lib/dict.c0:84.12-84.22"
B8 00 1B # invokestatic 27 # is_dict(D, "lib/dict.c0:84.12-84.22")
14 12 CF # aldc 4815       # s[4815] = "lib/dict.c0:84.4-84.23: @ensures annotation failed"
CF       # assert          # assertis_dict(D, "lib/dict.c0:84.12-84.22") [failure message on stack]
15 00    # vload 0         # D
15 01    # vload 1         # name
14 13 02 # aldc 4866       # s[4866] = "lib/dict.c0:85.12-85.32"
B8 00 1D # invokestatic 29 # dict_lookup(D, name, "lib/dict.c0:85.12-85.32")
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) goto <145:cond_true>
A7 00 08 # goto +8         # goto <146:cond_false>
# <145:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0        # false
# <147:cond_end>
14 13 1A # aldc 4890       # s[4890] = "lib/dict.c0:85.4-85.41: @ensures annotation failed"
CF       # assert          # assert(dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # D
14 13 4D # aldc 4941       # s[4941] = "lib/dict.c0:84.12-84.22"
B8 00 1B # invokestatic 27 # is_dict(D, "lib/dict.c0:84.12-84.22")
14 13 65 # aldc 4965       # s[4965] = "lib/dict.c0:84.4-84.23: @ensures annotation failed"
CF       # assert          # assertis_dict(D, "lib/dict.c0:84.12-84.22") [failure message on stack]
15 00    # vload 0         # D
15 01    # vload 1         # name
14 13 98 # aldc 5016       # s[5016] = "lib/dict.c0:85.12-85.32"
B8 00 1D # invokestatic 29 # dict_lookup(D, name, "lib/dict.c0:85.12-85.32")
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) goto <148:cond_true>
A7 00 08 # goto +8         # goto <149:cond_false>
# <148:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <150:cond_end>
# <149:cond_false>
10 00    # bipush 0        # false
# <150:cond_end>
14 13 B0 # aldc 5040       # s[5040] = "lib/dict.c0:85.4-85.41: @ensures annotation failed"
CF       # assert          # assert(dict_lookup(D, name, "lib/dict.c0:85.12-85.32") != NULL) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<dict_new__1>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 1F             # code length = 31 bytes
14 13 E3 # aldc 5091       # s[5091] = "lib/dict.c0:112.1-113.35"
B8 00 1C # invokestatic 28 # dict_new("lib/dict.c0:112.1-113.35")
36 01    # vstore 1        # _result = dict_new("lib/dict.c0:112.1-113.35");
15 01    # vload 1         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <151:cond_true>
A7 00 08 # goto +8         # goto <152:cond_false>
# <151:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <153:cond_end>
# <152:cond_false>
10 00    # bipush 0        # false
# <153:cond_end>
14 13 FC # aldc 5116       # s[5116] = "lib/dict.c0:113.6-113.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<dict_lookup__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 2E             # code length = 46 bytes
15 00    # vload 0         # D
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (D != NULL) goto <154:cond_true>
A7 00 08 # goto +8         # goto <155:cond_false>
# <154:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <156:cond_end>
# <155:cond_false>
10 00    # bipush 0        # false
# <156:cond_end>
14 14 31 # aldc 5169       # s[5169] = "lib/dict.c0:117.6-117.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 14 68 # aldc 5224       # s[5224] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:117.6-117.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(D != NULL) [failure message on stack]
15 00    # vload 0         # D
15 01    # vload 1         # name
14 14 7A # aldc 5242       # s[5242] = "lib/dict.c0:116.1-117.30"
B8 00 1D # invokestatic 29 # dict_lookup(D, name, "lib/dict.c0:116.1-117.30")
36 03    # vstore 3        # _result = dict_lookup(D, name, "lib/dict.c0:116.1-117.30");
15 03    # vload 3         # _result
B0       # return          # 


#<dict_insert__1>
00 04             # number of arguments = 4
00 05             # number of local variables = 5
00 51             # code length = 81 bytes
15 00    # vload 0         # D
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (D != NULL) goto <157:cond_true>
A7 00 08 # goto +8         # goto <158:cond_false>
# <157:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <159:cond_end>
# <158:cond_false>
10 00    # bipush 0        # false
# <159:cond_end>
14 14 93 # aldc 5267       # s[5267] = "lib/dict.c0:120.6-120.25: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 14 CA # aldc 5322       # s[5322] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:120.6-120.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(D != NULL) [failure message on stack]
15 02    # vload 2         # def
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (def != NULL) goto <160:cond_true>
A7 00 08 # goto +8         # goto <161:cond_false>
# <160:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <162:cond_end>
# <161:cond_false>
10 00    # bipush 0        # false
# <162:cond_end>
14 14 DC # aldc 5340       # s[5340] = "lib/dict.c0:121.6-121.27: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 15 13 # aldc 5395       # s[5395] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/dict.c0:121.6-121.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(def != NULL) [failure message on stack]
15 00    # vload 0         # D
15 01    # vload 1         # name
15 02    # vload 2         # def
14 15 25 # aldc 5413       # s[5413] = "lib/dict.c0:119.1-121.32"
B8 00 1E # invokestatic 30 # dict_insert(D, name, def, "lib/dict.c0:119.1-121.32")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<is_segment_ilist>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 39             # code length = 57 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (start == NULL) goto <163:then>
A7 00 0D # goto +13        # goto <164:else>
# <163:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <165:endif>
# <164:else>
# <165:endif>
15 00    # vload 0         # start
15 01    # vload 1         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <166:then>
A7 00 0D # goto +13        # goto <167:else>
# <166:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <168:endif>
# <167:else>
# <168:endif>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
15 01    # vload 1         # end
14 15 3E # aldc 5438       # s[5438] = "lib/stack_of_int.c0:19.10-19.44"
B8 00 22 # invokestatic 34 # is_segment_ilist(start->next, end, "lib/stack_of_int.c0:19.10-19.44")
36 03    # vstore 3        # _result = is_segment_ilist(start->next, end, "lib/stack_of_int.c0:19.10-19.44");
15 03    # vload 3         # _result
B0       # return          # 


#<is_stack>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 23             # code length = 35 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <169:cond_true>
A7 00 16 # goto +22        # goto <170:cond_false>
# <169:cond_true>
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
15 00    # vload 0         # S
62 08    # aaddf 8         # &S->bottom
2F       # amload          # S->bottom
14 15 5E # aldc 5470       # s[5470] = "lib/stack_of_int.c0:32.8-32.43"
B8 00 22 # invokestatic 34 # is_segment_ilist(S->top, S->bottom, "lib/stack_of_int.c0:32.8-32.43")
A7 00 05 # goto +5         # goto <171:cond_end>
# <170:cond_false>
10 00    # bipush 0        # false
# <171:cond_end>
36 02    # vstore 2        # _result = ((S != NULL) && is_segment_ilist(S->top, S->bottom, "lib/stack_of_int.c0:32.8-32.43"));
15 02    # vload 2         # _result
B0       # return          # 


#<stack_empty>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 33             # code length = 51 bytes
15 00    # vload 0         # S
14 15 7D # aldc 5501       # s[5501] = "lib/stack_of_int.c0:36.13-36.24"
B8 00 23 # invokestatic 35 # is_stack(S, "lib/stack_of_int.c0:36.13-36.24")
14 15 9D # aldc 5533       # s[5533] = "lib/stack_of_int.c0:36.4-36.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 15 DA # aldc 5594       # s[5594] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:36.4-36.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_stack(S, "lib/stack_of_int.c0:36.13-36.24") [failure message on stack]
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
15 00    # vload 0         # S
62 08    # aaddf 8         # &S->bottom
2F       # amload          # S->bottom
9F 00 06 # if_cmpeq +6     # if (S->top == S->bottom) goto <172:cond_true>
A7 00 08 # goto +8         # goto <173:cond_false>
# <172:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <174:cond_end>
# <173:cond_false>
10 00    # bipush 0        # false
# <174:cond_end>
36 02    # vstore 2        # _result = (S->top == S->bottom);
15 02    # vload 2         # _result
B0       # return          # 


#<stack_new>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 35             # code length = 53 bytes
BB 10    # new 16          # alloc(stack)
36 02    # vstore 2        # S = alloc(stack);
BB 10    # new 16          # alloc(ilist)
36 03    # vstore 3        # l = alloc(ilist);
15 02    # vload 2         # S
62 00    # aaddf 0         # &S->top
15 03    # vload 3         # l
4F       # amstore         # S->top = l;
15 02    # vload 2         # S
62 08    # aaddf 8         # &S->bottom
15 03    # vload 3         # l
4F       # amstore         # S->bottom = l;
15 02    # vload 2         # S
36 01    # vstore 1        # _result = S;
15 01    # vload 1         # _result
14 15 EC # aldc 5612       # s[5612] = "lib/stack_of_int.c0:42.12-42.29"
B8 00 23 # invokestatic 35 # is_stack(_result, "lib/stack_of_int.c0:42.12-42.29")
14 16 0C # aldc 5644       # s[5644] = "lib/stack_of_int.c0:42.4-42.30: @ensures annotation failed"
CF       # assert          # assertis_stack(_result, "lib/stack_of_int.c0:42.12-42.29") [failure message on stack]
15 01    # vload 1         # _result
14 16 47 # aldc 5703       # s[5703] = "lib/stack_of_int.c0:43.12-43.32"
B8 00 24 # invokestatic 36 # stack_empty(_result, "lib/stack_of_int.c0:43.12-43.32")
14 16 67 # aldc 5735       # s[5735] = "lib/stack_of_int.c0:43.4-43.33: @ensures annotation failed"
CF       # assert          # assertstack_empty(_result, "lib/stack_of_int.c0:43.12-43.32") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<push>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 42             # code length = 66 bytes
15 00    # vload 0         # S
14 16 A2 # aldc 5794       # s[5794] = "lib/stack_of_int.c0:53.13-53.24"
B8 00 23 # invokestatic 35 # is_stack(S, "lib/stack_of_int.c0:53.13-53.24")
14 16 C2 # aldc 5826       # s[5826] = "lib/stack_of_int.c0:53.4-53.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 16 FF # aldc 5887       # s[5887] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:53.4-53.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_stack(S, "lib/stack_of_int.c0:53.13-53.24") [failure message on stack]
BB 10    # new 16          # alloc(ilist)
36 03    # vstore 3        # l = alloc(ilist);
15 03    # vload 3         # l
62 00    # aaddf 0         # &l->data
15 01    # vload 1         # x
4E       # imstore         # l->data = x;
15 03    # vload 3         # l
62 08    # aaddf 8         # &l->next
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
4F       # amstore         # l->next = S->top;
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
15 03    # vload 3         # l
4F       # amstore         # S->top = l;
15 00    # vload 0         # S
14 17 11 # aldc 5905       # s[5905] = "lib/stack_of_int.c0:54.12-54.23"
B8 00 23 # invokestatic 35 # is_stack(S, "lib/stack_of_int.c0:54.12-54.23")
14 17 31 # aldc 5937       # s[5937] = "lib/stack_of_int.c0:54.4-54.24: @ensures annotation failed"
CF       # assert          # assertis_stack(S, "lib/stack_of_int.c0:54.12-54.23") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<pop>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5B             # code length = 91 bytes
15 00    # vload 0         # S
14 17 6C # aldc 5996       # s[5996] = "lib/stack_of_int.c0:63.13-63.24"
B8 00 23 # invokestatic 35 # is_stack(S, "lib/stack_of_int.c0:63.13-63.24")
14 17 8C # aldc 6028       # s[6028] = "lib/stack_of_int.c0:63.4-63.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 17 C9 # aldc 6089       # s[6089] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:63.4-63.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_stack(S, "lib/stack_of_int.c0:63.13-63.24") [failure message on stack]
15 00    # vload 0         # S
14 17 DB # aldc 6107       # s[6107] = "lib/stack_of_int.c0:64.14-64.28"
B8 00 24 # invokestatic 36 # stack_empty(S, "lib/stack_of_int.c0:64.14-64.28")
10 01    # bipush 1        # 
82       # ixor            # !(stack_empty(S, "lib/stack_of_int.c0:64.14-64.28"))
14 17 FB # aldc 6139       # s[6139] = "lib/stack_of_int.c0:64.4-64.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 18 38 # aldc 6200       # s[6200] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:64.4-64.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(stack_empty(S, "lib/stack_of_int.c0:64.14-64.28")) [failure message on stack]
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
62 00    # aaddf 0         # &S->top->data
2E       # imload          # S->top->data
36 03    # vstore 3        # x = S->top->data;
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
62 08    # aaddf 8         # &S->top->next
2F       # amload          # S->top->next
4F       # amstore         # S->top = S->top->next;
15 03    # vload 3         # x
36 02    # vstore 2        # _result = x;
15 00    # vload 0         # S
14 18 4A # aldc 6218       # s[6218] = "lib/stack_of_int.c0:65.12-65.23"
B8 00 23 # invokestatic 35 # is_stack(S, "lib/stack_of_int.c0:65.12-65.23")
14 18 6A # aldc 6250       # s[6250] = "lib/stack_of_int.c0:65.4-65.24: @ensures annotation failed"
CF       # assert          # assertis_stack(S, "lib/stack_of_int.c0:65.12-65.23") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<stack_empty__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2C             # code length = 44 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <175:cond_true>
A7 00 08 # goto +8         # goto <176:cond_false>
# <175:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <177:cond_end>
# <176:cond_false>
10 00    # bipush 0        # false
# <177:cond_end>
14 18 A5 # aldc 6309       # s[6309] = "lib/stack_of_int.c0:81.6-81.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 18 E2 # aldc 6370       # s[6370] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:81.6-81.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
14 18 F4 # aldc 6388       # s[6388] = "lib/stack_of_int.c0:80.1-81.30"
B8 00 24 # invokestatic 36 # stack_empty(S, "lib/stack_of_int.c0:80.1-81.30")
36 02    # vstore 2        # _result = stack_empty(S, "lib/stack_of_int.c0:80.1-81.30");
15 02    # vload 2         # _result
B0       # return          # 


#<stack_new__1>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 2B             # code length = 43 bytes
14 19 13 # aldc 6419       # s[6419] = "lib/stack_of_int.c0:83.1-85.40"
B8 00 25 # invokestatic 37 # stack_new("lib/stack_of_int.c0:83.1-85.40")
36 01    # vstore 1        # _result = stack_new("lib/stack_of_int.c0:83.1-85.40");
15 01    # vload 1         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <178:cond_true>
A7 00 08 # goto +8         # goto <179:cond_false>
# <178:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <180:cond_end>
# <179:cond_false>
10 00    # bipush 0        # false
# <180:cond_end>
14 19 32 # aldc 6450       # s[6450] = "lib/stack_of_int.c0:84.6-84.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 01    # vload 1         # _result
14 19 6D # aldc 6509       # s[6509] = "lib/stack_of_int.c0:85.14-85.34"
B8 00 28 # invokestatic 40 # stack_empty__1(_result, "lib/stack_of_int.c0:85.14-85.34")
14 19 8D # aldc 6541       # s[6541] = "lib/stack_of_int.c0:85.6-85.35: @ensures annotation failed"
CF       # assert          # assertstack_empty__1(_result, "lib/stack_of_int.c0:85.14-85.34") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<push__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <181:cond_true>
A7 00 08 # goto +8         # goto <182:cond_false>
# <181:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <183:cond_end>
# <182:cond_false>
10 00    # bipush 0        # false
# <183:cond_end>
14 19 C8 # aldc 6600       # s[6600] = "lib/stack_of_int.c0:88.6-88.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1A 05 # aldc 6661       # s[6661] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:88.6-88.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
15 01    # vload 1         # x
14 1A 17 # aldc 6679       # s[6679] = "lib/stack_of_int.c0:87.1-88.30"
B8 00 26 # invokestatic 38 # push(S, x, "lib/stack_of_int.c0:87.1-88.30")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<pop__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 46             # code length = 70 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <184:cond_true>
A7 00 08 # goto +8         # goto <185:cond_false>
# <184:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <186:cond_end>
# <185:cond_false>
10 00    # bipush 0        # false
# <186:cond_end>
14 1A 36 # aldc 6710       # s[6710] = "lib/stack_of_int.c0:91.6-91.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1A 73 # aldc 6771       # s[6771] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:91.6-91.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
14 1A 85 # aldc 6789       # s[6789] = "lib/stack_of_int.c0:92.16-92.30"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "lib/stack_of_int.c0:92.16-92.30")
10 01    # bipush 1        # 
82       # ixor            # !(stack_empty__1(S, "lib/stack_of_int.c0:92.16-92.30"))
14 1A A5 # aldc 6821       # s[6821] = "lib/stack_of_int.c0:92.6-92.31: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1A E2 # aldc 6882       # s[6882] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_int.c0:92.6-92.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(stack_empty__1(S, "lib/stack_of_int.c0:92.16-92.30")) [failure message on stack]
15 00    # vload 0         # S
14 1A F4 # aldc 6900       # s[6900] = "lib/stack_of_int.c0:90.1-92.36"
B8 00 27 # invokestatic 39 # pop(S, "lib/stack_of_int.c0:90.1-92.36")
36 02    # vstore 2        # _result = pop(S, "lib/stack_of_int.c0:90.1-92.36");
15 02    # vload 2         # _result
B0       # return          # 


#<is_segment_qlist>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 4A             # code length = 74 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (start == NULL) goto <187:then>
A7 00 0D # goto +13        # goto <188:else>
# <187:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <189:endif>
# <188:else>
# <189:endif>
15 00    # vload 0         # start
15 01    # vload 1         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <190:then>
A7 00 0D # goto +13        # goto <191:else>
# <190:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <192:endif>
# <191:else>
# <192:endif>
15 00    # vload 0         # start
62 00    # aaddf 0         # &start->data
2F       # amload          # start->data
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start->data != NULL) goto <193:cond_true>
A7 00 13 # goto +19        # goto <194:cond_false>
# <193:cond_true>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
15 01    # vload 1         # end
14 1B 13 # aldc 6931       # s[6931] = "lib/stack_of_queue_of_string.c0:27.33-27.67"
B8 00 2C # invokestatic 44 # is_segment_qlist(start->next, end, "lib/stack_of_queue_of_string.c0:27.33-27.67")
A7 00 05 # goto +5         # goto <195:cond_end>
# <194:cond_false>
10 00    # bipush 0        # false
# <195:cond_end>
36 03    # vstore 3        # _result = ((start->data != NULL) && is_segment_qlist(start->next, end, "lib/stack_of_queue_of_string.c0:27.33-27.67"));
15 03    # vload 3         # _result
B0       # return          # 


#<is_qstack>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 23             # code length = 35 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <196:cond_true>
A7 00 16 # goto +22        # goto <197:cond_false>
# <196:cond_true>
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
15 00    # vload 0         # S
62 08    # aaddf 8         # &S->bottom
2F       # amload          # S->bottom
14 1B 3F # aldc 6975       # s[6975] = "lib/stack_of_queue_of_string.c0:40.8-40.43"
B8 00 2C # invokestatic 44 # is_segment_qlist(S->top, S->bottom, "lib/stack_of_queue_of_string.c0:40.8-40.43")
A7 00 05 # goto +5         # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0        # false
# <198:cond_end>
36 02    # vstore 2        # _result = ((S != NULL) && is_segment_qlist(S->top, S->bottom, "lib/stack_of_queue_of_string.c0:40.8-40.43"));
15 02    # vload 2         # _result
B0       # return          # 


#<qstack_empty>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 33             # code length = 51 bytes
15 00    # vload 0         # S
14 1B 6A # aldc 7018       # s[7018] = "lib/stack_of_queue_of_string.c0:44.13-44.25"
B8 00 2D # invokestatic 45 # is_qstack(S, "lib/stack_of_queue_of_string.c0:44.13-44.25")
14 1B 96 # aldc 7062       # s[7062] = "lib/stack_of_queue_of_string.c0:44.4-44.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1B DF # aldc 7135       # s[7135] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:44.4-44.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_qstack(S, "lib/stack_of_queue_of_string.c0:44.13-44.25") [failure message on stack]
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
15 00    # vload 0         # S
62 08    # aaddf 8         # &S->bottom
2F       # amload          # S->bottom
9F 00 06 # if_cmpeq +6     # if (S->top == S->bottom) goto <199:cond_true>
A7 00 08 # goto +8         # goto <200:cond_false>
# <199:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0        # false
# <201:cond_end>
36 02    # vstore 2        # _result = (S->top == S->bottom);
15 02    # vload 2         # _result
B0       # return          # 


#<qstack_new>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 35             # code length = 53 bytes
BB 10    # new 16          # alloc(qstack)
36 02    # vstore 2        # S = alloc(qstack);
BB 10    # new 16          # alloc(qlist)
36 03    # vstore 3        # l = alloc(qlist);
15 02    # vload 2         # S
62 00    # aaddf 0         # &S->top
15 03    # vload 3         # l
4F       # amstore         # S->top = l;
15 02    # vload 2         # S
62 08    # aaddf 8         # &S->bottom
15 03    # vload 3         # l
4F       # amstore         # S->bottom = l;
15 02    # vload 2         # S
36 01    # vstore 1        # _result = S;
15 01    # vload 1         # _result
14 1B F1 # aldc 7153       # s[7153] = "lib/stack_of_queue_of_string.c0:50.12-50.30"
B8 00 2D # invokestatic 45 # is_qstack(_result, "lib/stack_of_queue_of_string.c0:50.12-50.30")
14 1C 1D # aldc 7197       # s[7197] = "lib/stack_of_queue_of_string.c0:50.4-50.31: @ensures annotation failed"
CF       # assert          # assertis_qstack(_result, "lib/stack_of_queue_of_string.c0:50.12-50.30") [failure message on stack]
15 01    # vload 1         # _result
14 1C 64 # aldc 7268       # s[7268] = "lib/stack_of_queue_of_string.c0:51.12-51.33"
B8 00 2E # invokestatic 46 # qstack_empty(_result, "lib/stack_of_queue_of_string.c0:51.12-51.33")
14 1C 90 # aldc 7312       # s[7312] = "lib/stack_of_queue_of_string.c0:51.4-51.34: @ensures annotation failed"
CF       # assert          # assertqstack_empty(_result, "lib/stack_of_queue_of_string.c0:51.12-51.33") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<qpush>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 61             # code length = 97 bytes
15 00    # vload 0         # S
14 1C D7 # aldc 7383       # s[7383] = "lib/stack_of_queue_of_string.c0:61.13-61.25"
B8 00 2D # invokestatic 45 # is_qstack(S, "lib/stack_of_queue_of_string.c0:61.13-61.25")
14 1D 03 # aldc 7427       # s[7427] = "lib/stack_of_queue_of_string.c0:61.4-61.26: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1D 4C # aldc 7500       # s[7500] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:61.4-61.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_qstack(S, "lib/stack_of_queue_of_string.c0:61.13-61.25") [failure message on stack]
15 01    # vload 1         # x
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (x != NULL) goto <202:cond_true>
A7 00 08 # goto +8         # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0        # false
# <204:cond_end>
14 1D 5E # aldc 7518       # s[7518] = "lib/stack_of_queue_of_string.c0:63.4-63.23: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1D A7 # aldc 7591       # s[7591] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:63.4-63.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x != NULL) [failure message on stack]
BB 10    # new 16          # alloc(qlist)
36 03    # vstore 3        # l = alloc(qlist);
15 03    # vload 3         # l
62 00    # aaddf 0         # &l->data
15 01    # vload 1         # x
4F       # amstore         # l->data = x;
15 03    # vload 3         # l
62 08    # aaddf 8         # &l->next
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
4F       # amstore         # l->next = S->top;
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
15 03    # vload 3         # l
4F       # amstore         # S->top = l;
15 00    # vload 0         # S
14 1D B9 # aldc 7609       # s[7609] = "lib/stack_of_queue_of_string.c0:62.12-62.24"
B8 00 2D # invokestatic 45 # is_qstack(S, "lib/stack_of_queue_of_string.c0:62.12-62.24")
14 1D E5 # aldc 7653       # s[7653] = "lib/stack_of_queue_of_string.c0:62.4-62.25: @ensures annotation failed"
CF       # assert          # assertis_qstack(S, "lib/stack_of_queue_of_string.c0:62.12-62.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<qpop>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 6F             # code length = 111 bytes
15 00    # vload 0         # S
14 1E 2C # aldc 7724       # s[7724] = "lib/stack_of_queue_of_string.c0:72.13-72.25"
B8 00 2D # invokestatic 45 # is_qstack(S, "lib/stack_of_queue_of_string.c0:72.13-72.25")
14 1E 58 # aldc 7768       # s[7768] = "lib/stack_of_queue_of_string.c0:72.4-72.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1E A1 # aldc 7841       # s[7841] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:72.4-72.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_qstack(S, "lib/stack_of_queue_of_string.c0:72.13-72.25") [failure message on stack]
15 00    # vload 0         # S
14 1E B3 # aldc 7859       # s[7859] = "lib/stack_of_queue_of_string.c0:73.14-73.29"
B8 00 2E # invokestatic 46 # qstack_empty(S, "lib/stack_of_queue_of_string.c0:73.14-73.29")
10 01    # bipush 1        # 
82       # ixor            # !(qstack_empty(S, "lib/stack_of_queue_of_string.c0:73.14-73.29"))
14 1E DF # aldc 7903       # s[7903] = "lib/stack_of_queue_of_string.c0:73.4-73.30: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1F 28 # aldc 7976       # s[7976] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:73.4-73.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(qstack_empty(S, "lib/stack_of_queue_of_string.c0:73.14-73.29")) [failure message on stack]
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
62 00    # aaddf 0         # &S->top->data
2F       # amload          # S->top->data
36 03    # vstore 3        # x = S->top->data;
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
15 00    # vload 0         # S
62 00    # aaddf 0         # &S->top
2F       # amload          # S->top
62 08    # aaddf 8         # &S->top->next
2F       # amload          # S->top->next
4F       # amstore         # S->top = S->top->next;
15 03    # vload 3         # x
36 02    # vstore 2        # _result = x;
15 00    # vload 0         # S
14 1F 3A # aldc 7994       # s[7994] = "lib/stack_of_queue_of_string.c0:74.12-74.24"
B8 00 2D # invokestatic 45 # is_qstack(S, "lib/stack_of_queue_of_string.c0:74.12-74.24")
14 1F 66 # aldc 8038       # s[8038] = "lib/stack_of_queue_of_string.c0:74.4-74.25: @ensures annotation failed"
CF       # assert          # assertis_qstack(S, "lib/stack_of_queue_of_string.c0:74.12-74.24") [failure message on stack]
15 02    # vload 2         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <205:cond_true>
A7 00 08 # goto +8         # goto <206:cond_false>
# <205:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <207:cond_end>
# <206:cond_false>
10 00    # bipush 0        # false
# <207:cond_end>
14 1F AD # aldc 8109       # s[8109] = "lib/stack_of_queue_of_string.c0:75.4-75.28: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<qstack_empty__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2C             # code length = 44 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <208:cond_true>
A7 00 08 # goto +8         # goto <209:cond_false>
# <208:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <210:cond_end>
# <209:cond_false>
10 00    # bipush 0        # false
# <210:cond_end>
14 1F F4 # aldc 8180       # s[8180] = "lib/stack_of_queue_of_string.c0:91.6-91.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 20 3D # aldc 8253       # s[8253] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:91.6-91.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
14 20 4F # aldc 8271       # s[8271] = "lib/stack_of_queue_of_string.c0:90.1-91.30"
B8 00 2E # invokestatic 46 # qstack_empty(S, "lib/stack_of_queue_of_string.c0:90.1-91.30")
36 02    # vstore 2        # _result = qstack_empty(S, "lib/stack_of_queue_of_string.c0:90.1-91.30");
15 02    # vload 2         # _result
B0       # return          # 


#<qstack_new__1>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 2B             # code length = 43 bytes
14 20 7A # aldc 8314       # s[8314] = "lib/stack_of_queue_of_string.c0:93.1-95.41"
B8 00 2F # invokestatic 47 # qstack_new("lib/stack_of_queue_of_string.c0:93.1-95.41")
36 01    # vstore 1        # _result = qstack_new("lib/stack_of_queue_of_string.c0:93.1-95.41");
15 01    # vload 1         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <211:cond_true>
A7 00 08 # goto +8         # goto <212:cond_false>
# <211:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <213:cond_end>
# <212:cond_false>
10 00    # bipush 0        # false
# <213:cond_end>
14 20 A5 # aldc 8357       # s[8357] = "lib/stack_of_queue_of_string.c0:94.6-94.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 01    # vload 1         # _result
14 20 EC # aldc 8428       # s[8428] = "lib/stack_of_queue_of_string.c0:95.14-95.35"
B8 00 32 # invokestatic 50 # qstack_empty__1(_result, "lib/stack_of_queue_of_string.c0:95.14-95.35")
14 21 18 # aldc 8472       # s[8472] = "lib/stack_of_queue_of_string.c0:95.6-95.36: @ensures annotation failed"
CF       # assert          # assertqstack_empty__1(_result, "lib/stack_of_queue_of_string.c0:95.14-95.35") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<qpush__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 3E             # code length = 62 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <214:cond_true>
A7 00 16 # goto +22        # goto <215:cond_false>
# <214:cond_true>
15 01    # vload 1         # x
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (x != NULL) goto <217:cond_true>
A7 00 08 # goto +8         # goto <218:cond_false>
# <217:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <219:cond_end>
# <218:cond_false>
10 00    # bipush 0        # false
# <219:cond_end>
A7 00 05 # goto +5         # goto <216:cond_end>
# <215:cond_false>
10 00    # bipush 0        # false
# <216:cond_end>
14 21 5F # aldc 8543       # s[8543] = "lib/stack_of_queue_of_string.c0:98.6-98.38: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 21 A8 # aldc 8616       # s[8616] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:98.6-98.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((S != NULL) && (x != NULL)) [failure message on stack]
15 00    # vload 0         # S
15 01    # vload 1         # x
14 21 BA # aldc 8634       # s[8634] = "lib/stack_of_queue_of_string.c0:97.1-98.43"
B8 00 30 # invokestatic 48 # qpush(S, x, "lib/stack_of_queue_of_string.c0:97.1-98.43")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<qpop__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5A             # code length = 90 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <220:cond_true>
A7 00 08 # goto +8         # goto <221:cond_false>
# <220:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <222:cond_end>
# <221:cond_false>
10 00    # bipush 0        # false
# <222:cond_end>
14 21 E5 # aldc 8677       # s[8677] = "lib/stack_of_queue_of_string.c0:101.6-101.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 22 30 # aldc 8752       # s[8752] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:101.6-101.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
14 22 42 # aldc 8770       # s[8770] = "lib/stack_of_queue_of_string.c0:102.16-102.31"
B8 00 32 # invokestatic 50 # qstack_empty__1(S, "lib/stack_of_queue_of_string.c0:102.16-102.31")
10 01    # bipush 1        # 
82       # ixor            # !(qstack_empty__1(S, "lib/stack_of_queue_of_string.c0:102.16-102.31"))
14 22 70 # aldc 8816       # s[8816] = "lib/stack_of_queue_of_string.c0:102.6-102.32: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 22 BB # aldc 8891       # s[8891] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/stack_of_queue_of_string.c0:102.6-102.32: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(qstack_empty__1(S, "lib/stack_of_queue_of_string.c0:102.16-102.31")) [failure message on stack]
15 00    # vload 0         # S
14 22 CD # aldc 8909       # s[8909] = "lib/stack_of_queue_of_string.c0:100.1-103.35"
B8 00 31 # invokestatic 49 # qpop(S, "lib/stack_of_queue_of_string.c0:100.1-103.35")
36 02    # vstore 2        # _result = qpop(S, "lib/stack_of_queue_of_string.c0:100.1-103.35");
15 02    # vload 2         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <223:cond_true>
A7 00 08 # goto +8         # goto <224:cond_false>
# <223:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <225:cond_end>
# <224:cond_false>
10 00    # bipush 0        # false
# <225:cond_end>
14 22 FA # aldc 8954       # s[8954] = "lib/stack_of_queue_of_string.c0:103.6-103.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<readline__1>
00 01             # number of arguments = 1
00 05             # number of local variables = 5
00 1D             # code length = 29 bytes
B7 00 0C # invokenative 12 # eof()
10 01    # bipush 1        # 
82       # ixor            # !(eof())
14 23 43 # aldc 9027       # s[9027] = "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
15 00    # vload 0         # _caller
14 23 93 # aldc 9107       # s[9107] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(eof()) [failure message on stack]
B7 00 0D # invokenative 13 # readline()
36 01    # vstore 1        # _result = readline();
15 01    # vload 1         # _result
B0       # return          # 


#<file_closed__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 29             # code length = 41 bytes
15 00    # vload 0         # f
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (f != NULL) goto <226:cond_true>
A7 00 08 # goto +8         # goto <227:cond_false>
# <226:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <228:cond_end>
# <227:cond_false>
10 00    # bipush 0        # false
# <228:cond_end>
14 23 A5 # aldc 9125       # s[9125] = "/afs/andrew/course/15/122/lib/file.h0:10.6-10.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 23 F4 # aldc 9204       # s[9204] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(f != NULL) [failure message on stack]
15 00    # vload 0         # f
B7 00 0E # invokenative 14 # file_closed(f)
36 02    # vstore 2        # _result = file_closed(f);
15 02    # vload 2         # _result
B0       # return          # 


#<file_read__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 27             # code length = 39 bytes
15 00    # vload 0         # path
B7 00 0F # invokenative 15 # file_read(path)
36 02    # vstore 2        # _result = file_read(path);
15 02    # vload 2         # _result
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (_result == NULL) goto <229:cond_true>
A7 00 08 # goto +8         # goto <230:cond_false>
# <229:cond_true>
10 01    # bipush 1        # true
A7 00 0E # goto +14        # goto <231:cond_end>
# <230:cond_false>
15 02    # vload 2         # _result
14 24 06 # aldc 9222       # s[9222] = "/afs/andrew/course/15/122/lib/file.h0:15.34-15.54"
B8 00 37 # invokestatic 55 # file_closed__1(_result, "/afs/andrew/course/15/122/lib/file.h0:15.34-15.54")
10 01    # bipush 1        # 
82       # ixor            # !(file_closed__1(_result, "/afs/andrew/course/15/122/lib/file.h0:15.34-15.54"))
# <231:cond_end>
14 24 38 # aldc 9272       # s[9272] = "/afs/andrew/course/15/122/lib/file.h0:15.6-15.55: @ensures annotation failed"
CF       # assert          # assert((_result == NULL) || !(file_closed__1(_result, "/afs/andrew/course/15/122/lib/file.h0:15.34-15.54"))) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<file_close__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5D             # code length = 93 bytes
15 00    # vload 0         # f
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (f != NULL) goto <232:cond_true>
A7 00 08 # goto +8         # goto <233:cond_false>
# <232:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <234:cond_end>
# <233:cond_false>
10 00    # bipush 0        # false
# <234:cond_end>
14 24 85 # aldc 9349       # s[9349] = "/afs/andrew/course/15/122/lib/file.h0:20.6-20.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 24 D4 # aldc 9428       # s[9428] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(f != NULL) [failure message on stack]
15 00    # vload 0         # f
14 24 E6 # aldc 9446       # s[9446] = "/afs/andrew/course/15/122/lib/file.h0:21.16-21.30"
B8 00 37 # invokestatic 55 # file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:21.16-21.30")
10 01    # bipush 1        # 
82       # ixor            # !(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:21.16-21.30"))
14 25 18 # aldc 9496       # s[9496] = "/afs/andrew/course/15/122/lib/file.h0:21.6-21.31: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 25 67 # aldc 9575       # s[9575] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:21.16-21.30")) [failure message on stack]
15 00    # vload 0         # f
B7 00 10 # invokenative 16 # file_close(f)
57       # pop             # (ignore result)
15 00    # vload 0         # f
14 25 79 # aldc 9593       # s[9593] = "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28"
B8 00 37 # invokestatic 55 # file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28")
14 25 AB # aldc 9643       # s[9643] = "/afs/andrew/course/15/122/lib/file.h0:22.6-22.29: @ensures annotation failed"
CF       # assert          # assertfile_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # f
14 25 F8 # aldc 9720       # s[9720] = "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28"
B8 00 37 # invokestatic 55 # file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28")
14 26 2A # aldc 9770       # s[9770] = "/afs/andrew/course/15/122/lib/file.h0:22.6-22.29: @ensures annotation failed"
CF       # assert          # assertfile_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:22.14-22.28") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<file_eof__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 43             # code length = 67 bytes
15 00    # vload 0         # f
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (f != NULL) goto <235:cond_true>
A7 00 08 # goto +8         # goto <236:cond_false>
# <235:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <237:cond_end>
# <236:cond_false>
10 00    # bipush 0        # false
# <237:cond_end>
14 26 77 # aldc 9847       # s[9847] = "/afs/andrew/course/15/122/lib/file.h0:26.6-26.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 26 C6 # aldc 9926       # s[9926] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(f != NULL) [failure message on stack]
15 00    # vload 0         # f
14 26 D8 # aldc 9944       # s[9944] = "/afs/andrew/course/15/122/lib/file.h0:27.16-27.30"
B8 00 37 # invokestatic 55 # file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:27.16-27.30")
10 01    # bipush 1        # 
82       # ixor            # !(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:27.16-27.30"))
14 27 0A # aldc 9994       # s[9994] = "/afs/andrew/course/15/122/lib/file.h0:27.6-27.31: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 27 59 # aldc 10073      # s[10073] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:27.16-27.30")) [failure message on stack]
15 00    # vload 0         # f
B7 00 11 # invokenative 17 # file_eof(f)
36 02    # vstore 2        # _result = file_eof(f);
15 02    # vload 2         # _result
B0       # return          # 


#<file_readline__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5D             # code length = 93 bytes
15 00    # vload 0         # f
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (f != NULL) goto <238:cond_true>
A7 00 08 # goto +8         # goto <239:cond_false>
# <238:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <240:cond_end>
# <239:cond_false>
10 00    # bipush 0        # false
# <240:cond_end>
14 27 6B # aldc 10091      # s[10091] = "/afs/andrew/course/15/122/lib/file.h0:34.6-34.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 27 BA # aldc 10170      # s[10170] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(f != NULL) [failure message on stack]
15 00    # vload 0         # f
14 27 CC # aldc 10188      # s[10188] = "/afs/andrew/course/15/122/lib/file.h0:35.16-35.30"
B8 00 37 # invokestatic 55 # file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:35.16-35.30")
10 01    # bipush 1        # 
82       # ixor            # !(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:35.16-35.30"))
14 27 FE # aldc 10238      # s[10238] = "/afs/andrew/course/15/122/lib/file.h0:35.6-35.31: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 28 4D # aldc 10317      # s[10317] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(file_closed__1(f, "/afs/andrew/course/15/122/lib/file.h0:35.16-35.30")) [failure message on stack]
15 00    # vload 0         # f
14 28 5F # aldc 10335      # s[10335] = "/afs/andrew/course/15/122/lib/file.h0:36.16-36.27"
B8 00 3A # invokestatic 58 # file_eof__1(f, "/afs/andrew/course/15/122/lib/file.h0:36.16-36.27")
10 01    # bipush 1        # 
82       # ixor            # !(file_eof__1(f, "/afs/andrew/course/15/122/lib/file.h0:36.16-36.27"))
14 28 91 # aldc 10385      # s[10385] = "/afs/andrew/course/15/122/lib/file.h0:36.6-36.28: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 28 E0 # aldc 10464      # s[10464] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/file.h0:36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(file_eof__1(f, "/afs/andrew/course/15/122/lib/file.h0:36.16-36.27")) [failure message on stack]
15 00    # vload 0         # f
B7 00 12 # invokenative 18 # file_readline(f)
36 02    # vstore 2        # _result = file_readline(f);
15 02    # vload 2         # _result
B0       # return          # 


#<input_line>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 4D             # code length = 77 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <302:cond_true>
A7 00 08 # goto +8         # goto <303:cond_false>
# <302:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <304:cond_end>
# <303:cond_false>
10 00    # bipush 0        # false
# <304:cond_end>
14 2C 1E # aldc 11294      # s[11294] = "lib/tokenize.c0:68.4-68.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 2C 57 # aldc 11351      # s[11351] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:68.4-68.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
B7 00 0C # invokenative 12 # eof()
10 01    # bipush 1        # 
82       # ixor            # !(eof())
14 2C 69 # aldc 11369      # s[11369] = "lib/tokenize.c0:69.4-69.20: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 2C A2 # aldc 11426      # s[11426] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:69.4-69.20: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(eof()) [failure message on stack]
14 2C B4 # aldc 11444      # s[11444] = "lib/tokenize.c0:71.17-71.27"
B8 00 36 # invokestatic 54 # readline__1("lib/tokenize.c0:71.17-71.27")
36 02    # vstore 2        # line = readline__1("lib/tokenize.c0:71.17-71.27");
15 02    # vload 2         # line
15 00    # vload 0         # Q
14 2C D0 # aldc 11472      # s[11472] = "lib/tokenize.c0:72.3-72.24"
B8 00 41 # invokestatic 65 # input_string__1(line, Q, "lib/tokenize.c0:72.3-72.24")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<input_line__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 43             # code length = 67 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <241:cond_true>
A7 00 08 # goto +8         # goto <242:cond_false>
# <241:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <243:cond_end>
# <242:cond_false>
10 00    # bipush 0        # false
# <243:cond_end>
14 28 F2 # aldc 10482      # s[10482] = "lib/tokenize.c0:21.6-21.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 29 2B # aldc 10539      # s[10539] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:21.6-21.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
B7 00 0C # invokenative 12 # eof()
10 01    # bipush 1        # 
82       # ixor            # !(eof())
14 29 3D # aldc 10557      # s[10557] = "lib/tokenize.c0:22.6-22.22: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 29 76 # aldc 10614      # s[10614] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:22.6-22.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(eof()) [failure message on stack]
15 00    # vload 0         # Q
14 29 88 # aldc 10632      # s[10632] = "lib/tokenize.c0:20.1-22.28"
B8 00 3C # invokestatic 60 # input_line(Q, "lib/tokenize.c0:20.1-22.28")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<input_file>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 79             # code length = 121 bytes
15 01    # vload 1         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <305:cond_true>
A7 00 08 # goto +8         # goto <306:cond_false>
# <305:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <307:cond_end>
# <306:cond_false>
10 00    # bipush 0        # false
# <307:cond_end>
14 2C EB # aldc 11499      # s[11499] = "lib/tokenize.c0:78.4-78.23: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2D 24 # aldc 11556      # s[11556] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:78.4-78.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # path
14 2D 36 # aldc 11574      # s[11574] = "lib/tokenize.c0:80.17-80.32"
B8 00 38 # invokestatic 56 # file_read__1(path, "lib/tokenize.c0:80.17-80.32")
36 03    # vstore 3        # file = file_read__1(path, "lib/tokenize.c0:80.17-80.32");
15 03    # vload 3         # file
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (file == NULL) goto <308:then>
A7 00 0A # goto +10        # goto <309:else>
# <308:then>
14 2D 52 # aldc 11602      # s[11602] = "Error: file does not exist"
BF       # athrow          # error "Error: file does not exist"
A7 00 03 # goto +3         # goto <310:endif>
# <309:else>
# <310:endif>
# <311:loop>
A7 00 03 # goto +3         # goto <312:body>
# <312:body>
15 03    # vload 3         # file
14 2D 6D # aldc 11629      # s[11629] = "lib/tokenize.c0:82.11-82.25"
B8 00 3A # invokestatic 58 # file_eof__1(file, "lib/tokenize.c0:82.11-82.25")
10 01    # bipush 1        # true
9F 00 1E # if_cmpeq +30    # if (file_eof__1(file, "lib/tokenize.c0:82.11-82.25") == true) goto <315:else>
A7 00 03 # goto +3         # goto <314:then>
# <314:then>
15 03    # vload 3         # file
14 2D 89 # aldc 11657      # s[11657] = "lib/tokenize.c0:83.19-83.38"
B8 00 3B # invokestatic 59 # file_readline__1(file, "lib/tokenize.c0:83.19-83.38")
36 04    # vstore 4        # line = file_readline__1(file, "lib/tokenize.c0:83.19-83.38");
15 04    # vload 4         # line
15 01    # vload 1         # Q
14 2D A5 # aldc 11685      # s[11685] = "lib/tokenize.c0:84.5-84.26"
B8 00 41 # invokestatic 65 # input_string__1(line, Q, "lib/tokenize.c0:84.5-84.26")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <316:endif>
# <315:else>
A7 00 06 # goto +6         # break
# <316:endif>
A7 FF D2 # goto -46        # goto <311:loop>
# <313:exit>
15 03    # vload 3         # file
14 2D C0 # aldc 11712      # s[11712] = "lib/tokenize.c0:86.3-86.19"
B8 00 39 # invokestatic 57 # file_close__1(file, "lib/tokenize.c0:86.3-86.19")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<input_file__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 01    # vload 1         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <244:cond_true>
A7 00 08 # goto +8         # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0        # false
# <246:cond_end>
14 29 A3 # aldc 10659      # s[10659] = "lib/tokenize.c0:26.6-26.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 29 DC # aldc 10716      # s[10716] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # path
15 01    # vload 1         # Q
14 29 EE # aldc 10734      # s[10734] = "lib/tokenize.c0:25.1-26.30"
B8 00 3E # invokestatic 62 # input_file(path, Q, "lib/tokenize.c0:25.1-26.30")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<input_string>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
01 4A             # code length = 330 bytes
15 01    # vload 1         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <258:cond_true>
A7 00 08 # goto +8         # goto <259:cond_false>
# <258:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <260:cond_end>
# <259:cond_false>
10 00    # bipush 0        # false
# <260:cond_end>
14 2A 6F # aldc 10863      # s[10863] = "lib/tokenize.c0:43.4-43.23: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2A A8 # aldc 10920      # s[10920] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:43.4-43.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
36 03    # vstore 3        # len = string_length(s);
10 00    # bipush 0        # 0
36 04    # vstore 4        # cur = 0;
# <261:loop>
A7 00 03 # goto +3         # goto <262:body>
# <262:body>
10 00    # bipush 0        # 0
15 04    # vload 4         # cur
A4 00 06 # if_icmple +6    # if (0 <= cur) goto <264:cond_true>
A7 00 17 # goto +23        # goto <265:cond_false>
# <264:cond_true>
15 04    # vload 4         # cur
15 03    # vload 3         # len
A4 00 06 # if_icmple +6    # if (cur <= len) goto <267:cond_true>
A7 00 08 # goto +8         # goto <268:cond_false>
# <267:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <269:cond_end>
# <268:cond_false>
10 00    # bipush 0        # false
# <269:cond_end>
A7 00 05 # goto +5         # goto <266:cond_end>
# <265:cond_false>
10 00    # bipush 0        # false
# <266:cond_end>
14 2A BA # aldc 10938      # s[10938] = "lib/tokenize.c0:48.8-48.46: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= cur) && (cur <= len)) [failure message on stack]
15 04    # vload 4         # cur
15 03    # vload 3         # len
A1 00 06 # if_icmplt +6    # if (cur < len) goto <270:then>
A7 00 E6 # goto +230       # goto <271:else>
# <270:then>
15 04    # vload 4         # cur
36 05    # vstore 5        # i = cur;
# <273:loop>
A7 00 03 # goto +3         # goto <274:body>
# <274:body>
15 04    # vload 4         # cur
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (cur <= i) goto <276:cond_true>
A7 00 17 # goto +23        # goto <277:cond_false>
# <276:cond_true>
15 05    # vload 5         # i
15 03    # vload 3         # len
A4 00 06 # if_icmple +6    # if (i <= len) goto <279:cond_true>
A7 00 08 # goto +8         # goto <280:cond_false>
# <279:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <281:cond_end>
# <280:cond_false>
10 00    # bipush 0        # false
# <281:cond_end>
A7 00 05 # goto +5         # goto <278:cond_end>
# <277:cond_false>
10 00    # bipush 0        # false
# <278:cond_end>
14 2A F8 # aldc 11000      # s[11000] = "lib/tokenize.c0:52.12-52.48: @loop_invariant annotation failed"
CF       # assert          # assert((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # len
A1 00 06 # if_icmplt +6    # if (i < len) goto <285:and>
A7 00 25 # goto +37        # goto <283:else>
# <285:and>
15 00    # vload 0         # s
15 05    # vload 5         # i
14 2B 37 # aldc 11063      # s[11063] = "lib/tokenize.c0:51.39-51.58"
B8 00 01 # invokestatic 1  # string_charat__1(s, i, "lib/tokenize.c0:51.39-51.58")
14 2B 53 # aldc 11091      # s[11091] = "lib/tokenize.c0:51.25-51.59"
B8 00 42 # invokestatic 66 # is_whitespace(string_charat__1(s, i, "lib/tokenize.c0:51.39-51.58"), "lib/tokenize.c0:51.25-51.59")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_whitespace(string_charat__1(s, i, "lib/tokenize.c0:51.39-51.58"), "lib/tokenize.c0:51.25-51.59") == true) goto <282:then>
A7 00 0D # goto +13        # goto <283:else>
# <282:then>
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <284:endif>
# <283:else>
A7 00 06 # goto +6         # break
# <284:endif>
A7 FF AA # goto -86        # goto <273:loop>
# <275:exit>
15 05    # vload 5         # i
36 04    # vstore 4        # cur = i;
# <286:loop>
A7 00 03 # goto +3         # goto <287:body>
# <287:body>
15 04    # vload 4         # cur
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (cur <= i) goto <289:cond_true>
A7 00 17 # goto +23        # goto <290:cond_false>
# <289:cond_true>
15 05    # vload 5         # i
15 03    # vload 3         # len
A4 00 06 # if_icmple +6    # if (i <= len) goto <292:cond_true>
A7 00 08 # goto +8         # goto <293:cond_false>
# <292:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <294:cond_end>
# <293:cond_false>
10 00    # bipush 0        # false
# <294:cond_end>
A7 00 05 # goto +5         # goto <291:cond_end>
# <290:cond_false>
10 00    # bipush 0        # false
# <291:cond_end>
14 2B 6F # aldc 11119      # s[11119] = "lib/tokenize.c0:57.12-57.48: @loop_invariant annotation failed"
CF       # assert          # assert((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # len
A1 00 06 # if_icmplt +6    # if (i < len) goto <298:and>
A7 00 25 # goto +37        # goto <296:else>
# <298:and>
15 00    # vload 0         # s
15 05    # vload 5         # i
14 2B AE # aldc 11182      # s[11182] = "lib/tokenize.c0:56.40-56.59"
B8 00 01 # invokestatic 1  # string_charat__1(s, i, "lib/tokenize.c0:56.40-56.59")
14 2B CA # aldc 11210      # s[11210] = "lib/tokenize.c0:56.26-56.60"
B8 00 42 # invokestatic 66 # is_whitespace(string_charat__1(s, i, "lib/tokenize.c0:56.40-56.59"), "lib/tokenize.c0:56.26-56.60")
10 01    # bipush 1        # true
9F 00 10 # if_cmpeq +16    # if (is_whitespace(string_charat__1(s, i, "lib/tokenize.c0:56.40-56.59"), "lib/tokenize.c0:56.26-56.60") == true) goto <296:else>
A7 00 03 # goto +3         # goto <295:then>
# <295:then>
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <297:endif>
# <296:else>
A7 00 06 # goto +6         # break
# <297:endif>
A7 FF AA # goto -86        # goto <286:loop>
# <288:exit>
15 04    # vload 4         # cur
15 05    # vload 5         # i
A1 00 06 # if_icmplt +6    # if (cur < i) goto <299:then>
A7 00 1B # goto +27        # goto <300:else>
# <299:then>
15 01    # vload 1         # Q
15 00    # vload 0         # s
15 04    # vload 4         # cur
15 05    # vload 5         # i
14 2B E6 # aldc 11238      # s[11238] = "lib/tokenize.c0:59.27-59.48"
B8 00 03 # invokestatic 3  # string_sub__1(s, cur, i, "lib/tokenize.c0:59.27-59.48")
14 2C 02 # aldc 11266      # s[11266] = "lib/tokenize.c0:59.20-59.49"
B8 00 16 # invokestatic 22 # enq__1(Q, string_sub__1(s, cur, i, "lib/tokenize.c0:59.27-59.48"), "lib/tokenize.c0:59.20-59.49")
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <301:endif>
# <300:else>
# <301:endif>
15 05    # vload 5         # i
36 04    # vstore 4        # cur = i;
A7 00 06 # goto +6         # goto <272:endif>
# <271:else>
A7 00 06 # goto +6         # break
# <272:endif>
A7 FE E9 # goto -279       # goto <261:loop>
# <263:exit>
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<input_string__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 01    # vload 1         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <247:cond_true>
A7 00 08 # goto +8         # goto <248:cond_false>
# <247:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <249:cond_end>
# <248:cond_false>
10 00    # bipush 0        # false
# <249:cond_end>
14 2A 09 # aldc 10761      # s[10761] = "lib/tokenize.c0:30.6-30.25: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2A 42 # aldc 10818      # s[10818] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lib/tokenize.c0:30.6-30.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # Q
14 2A 54 # aldc 10836      # s[10836] = "lib/tokenize.c0:29.1-30.30"
B8 00 40 # invokestatic 64 # input_string(s, Q, "lib/tokenize.c0:29.1-30.30")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<is_whitespace>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 39             # code length = 57 bytes
15 00    # vload 0         # c
10 20    # bipush 32       # ' '
9F 00 1A # if_cmpeq +26    # if (c == ' ') goto <250:cond_true>
A7 00 03 # goto +3         # goto <254:or>
# <254:or>
15 00    # vload 0         # c
10 09    # bipush 9        # '\t'
9F 00 10 # if_cmpeq +16    # if (c == '\t') goto <250:cond_true>
A7 00 03 # goto +3         # goto <253:or>
# <253:or>
15 00    # vload 0         # c
10 0A    # bipush 10       # '\n'
9F 00 06 # if_cmpeq +6     # if (c == '\n') goto <250:cond_true>
A7 00 08 # goto +8         # goto <251:cond_false>
# <250:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <252:cond_end>
# <251:cond_false>
15 00    # vload 0         # c
10 0D    # bipush 13       # '\r'
9F 00 06 # if_cmpeq +6     # if (c == '\r') goto <255:cond_true>
A7 00 08 # goto +8         # goto <256:cond_false>
# <255:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <257:cond_end>
# <256:cond_false>
10 00    # bipush 0        # false
# <257:cond_end>
# <252:cond_end>
36 02    # vstore 2        # _result = ((((c == ' ') || (c == '\t')) || (c == '\n')) || (c == '\r'));
15 02    # vload 2         # _result
B0       # return          # 


#<parse_int__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 3B             # code length = 59 bytes
10 02    # bipush 2        # 2
15 01    # vload 1         # base
A4 00 06 # if_icmple +6    # if (2 <= base) goto <317:cond_true>
A7 00 17 # goto +23        # goto <318:cond_false>
# <317:cond_true>
15 01    # vload 1         # base
10 24    # bipush 36       # 36
A4 00 06 # if_icmple +6    # if (base <= 36) goto <320:cond_true>
A7 00 08 # goto +8         # goto <321:cond_false>
# <320:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <322:cond_end>
# <321:cond_false>
10 00    # bipush 0        # false
# <322:cond_end>
A7 00 05 # goto +5         # goto <319:cond_end>
# <318:cond_false>
10 00    # bipush 0        # false
# <319:cond_end>
14 2D DB # aldc 11739      # s[11739] = "/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2E 2B # aldc 11819      # s[11819] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 13 # invokenative 19 # parse_int(s, base)
36 03    # vstore 3        # _result = parse_int(s, base);
15 03    # vload 3         # _result
B0       # return          # 


#<int_tokens__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 3B             # code length = 59 bytes
10 02    # bipush 2        # 2
15 01    # vload 1         # base
A4 00 06 # if_icmple +6    # if (2 <= base) goto <323:cond_true>
A7 00 17 # goto +23        # goto <324:cond_false>
# <323:cond_true>
15 01    # vload 1         # base
10 24    # bipush 36       # 36
A4 00 06 # if_icmple +6    # if (base <= 36) goto <326:cond_true>
A7 00 08 # goto +8         # goto <327:cond_false>
# <326:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <328:cond_end>
# <327:cond_false>
10 00    # bipush 0        # false
# <328:cond_end>
A7 00 05 # goto +5         # goto <325:cond_end>
# <324:cond_false>
10 00    # bipush 0        # false
# <325:cond_end>
14 2E 3D # aldc 11837      # s[11837] = "/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2E 8D # aldc 11917      # s[11917] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 14 # invokenative 20 # int_tokens(s, base)
36 03    # vstore 3        # _result = int_tokens(s, base);
15 03    # vload 3         # _result
B0       # return          # 


#<parse_tokens__1>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 23             # code length = 35 bytes
15 00    # vload 0         # s
B7 00 15 # invokenative 21 # parse_tokens(s)
36 02    # vstore 2        # _result = parse_tokens(s);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 16 # invokenative 22 # num_tokens(s)
9F 00 06 # if_cmpeq +6     # if (\length(_result) == num_tokens(s)) goto <329:cond_true>
A7 00 08 # goto +8         # goto <330:cond_false>
# <329:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <331:cond_end>
# <330:cond_false>
10 00    # bipush 0        # false
# <331:cond_end>
14 2E 9F # aldc 11935      # s[11935] = "/afs/andrew/course/15/122/lib/parse.h0:23.6-23.48: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == num_tokens(s)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<parse_ints__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 3E             # code length = 62 bytes
15 00    # vload 0         # s
15 01    # vload 1         # base
14 2E ED # aldc 12013      # s[12013] = "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34"
B8 00 44 # invokestatic 68 # int_tokens__1(s, base, "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34")
14 2F 20 # aldc 12064      # s[12064] = "/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 2F 70 # aldc 12144      # s[12144] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertint_tokens__1(s, base, "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34") [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 17 # invokenative 23 # parse_ints(s, base)
36 03    # vstore 3        # _result = parse_ints(s, base);
15 03    # vload 3         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 16 # invokenative 22 # num_tokens(s)
9F 00 06 # if_cmpeq +6     # if (\length(_result) == num_tokens(s)) goto <332:cond_true>
A7 00 08 # goto +8         # goto <333:cond_false>
# <332:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <334:cond_end>
# <333:cond_false>
10 00    # bipush 0        # false
# <334:cond_end>
14 2F 82 # aldc 12162      # s[12162] = "/afs/andrew/course/15/122/lib/parse.h0:28.6-28.48: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == num_tokens(s)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<args_flag__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <335:cond_true>
A7 00 08 # goto +8         # goto <336:cond_false>
# <335:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <337:cond_end>
# <336:cond_false>
10 00    # bipush 0        # false
# <337:cond_end>
14 2F D0 # aldc 12240      # s[12240] = "/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 30 1D # aldc 12317      # s[12317] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 18 # invokenative 24 # args_flag(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_int__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <338:cond_true>
A7 00 08 # goto +8         # goto <339:cond_false>
# <338:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <340:cond_end>
# <339:cond_false>
10 00    # bipush 0        # false
# <340:cond_end>
14 30 2F # aldc 12335      # s[12335] = "/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 30 7E # aldc 12414      # s[12414] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 19 # invokenative 25 # args_int(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_string__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <341:cond_true>
A7 00 08 # goto +8         # goto <342:cond_false>
# <341:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <343:cond_end>
# <342:cond_false>
10 00    # bipush 0        # false
# <343:cond_end>
14 30 90 # aldc 12432      # s[12432] = "/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 30 DF # aldc 12511      # s[12511] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 1A # invokenative 26 # args_string(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_parse__1>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 32             # code length = 50 bytes
B7 00 1B # invokenative 27 # args_parse()
36 01    # vstore 1        # _result = args_parse();
15 01    # vload 1         # _result
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (_result == NULL) goto <344:cond_true>
A7 00 08 # goto +8         # goto <345:cond_false>
# <344:cond_true>
10 01    # bipush 1        # true
A7 00 1B # goto +27        # goto <346:cond_end>
# <345:cond_false>
15 01    # vload 1         # _result
62 00    # aaddf 0         # &_result->argc
2E       # imload          # _result->argc
15 01    # vload 1         # _result
62 08    # aaddf 8         # &_result->argv
2F       # amload          # _result->argv
BE       # arraylength     # \length(_result->argv)
9F 00 06 # if_cmpeq +6     # if (_result->argc == \length(_result->argv)) goto <347:cond_true>
A7 00 08 # goto +8         # goto <348:cond_false>
# <347:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <349:cond_end>
# <348:cond_false>
10 00    # bipush 0        # false
# <349:cond_end>
# <346:cond_end>
14 30 F1 # aldc 12529      # s[12529] = "/afs/andrew/course/15/122/lib/args.h0:34.6-34.73: @ensures annotation failed"
CF       # assert          # assert((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_size>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 07             # code length = 7 bytes
10 04    # bipush 4        # 4
36 01    # vstore 1        # _result = 4;
15 01    # vload 1         # _result
B0       # return          # 


#<int_size__1>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 20             # code length = 32 bytes
14 31 3E # aldc 12606      # s[12606] = "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
B8 00 4B # invokestatic 75 # int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33")
36 01    # vstore 1        # _result = int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33");
15 01    # vload 1         # _result
10 04    # bipush 4        # 4
9F 00 06 # if_cmpeq +6     # if (_result == 4) goto <350:cond_true>
A7 00 08 # goto +8         # goto <351:cond_false>
# <350:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <352:cond_end>
# <351:cond_false>
10 00    # bipush 0        # false
# <352:cond_end>
14 31 6D # aldc 12653      # s[12653] = "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
CF       # assert          # assert(_result == 4) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_max>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 08             # code length = 8 bytes
13 00 02 # ildc 2          # c[2] = 2147483647
36 01    # vstore 1        # _result = 2147483647;
15 01    # vload 1         # _result
B0       # return          # 


#<int_max__1>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 21             # code length = 33 bytes
14 31 B8 # aldc 12728      # s[12728] = "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
B8 00 4D # invokestatic 77 # int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42")
36 01    # vstore 1        # _result = int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42");
15 01    # vload 1         # _result
13 00 00 # ildc 0          # c[0] = 2147483647
9F 00 06 # if_cmpeq +6     # if (_result == 2147483647) goto <353:cond_true>
A7 00 08 # goto +8         # goto <354:cond_false>
# <353:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <355:cond_end>
# <354:cond_false>
10 00    # bipush 0        # false
# <355:cond_end>
14 31 E9 # aldc 12777      # s[12777] = "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
CF       # assert          # assert(_result == 2147483647) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_min>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 08             # code length = 8 bytes
13 00 03 # ildc 3          # c[3] = -2147483648
36 01    # vstore 1        # _result = -2147483648;
15 01    # vload 1         # _result
B0       # return          # 


#<int_min__1>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 21             # code length = 33 bytes
14 32 36 # aldc 12854      # s[12854] = "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
B8 00 4F # invokestatic 79 # int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43")
36 01    # vstore 1        # _result = int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43");
15 01    # vload 1         # _result
13 00 01 # ildc 1          # c[1] = -2147483648
9F 00 06 # if_cmpeq +6     # if (_result == -(-2147483648)) goto <356:cond_true>
A7 00 08 # goto +8         # goto <357:cond_false>
# <356:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0        # false
# <358:cond_end>
14 32 67 # aldc 12903      # s[12903] = "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
CF       # assert          # assert(_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<abs>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 52             # code length = 82 bytes
15 00    # vload 0         # x
14 36 DC # aldc 14044      # s[14044] = "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
B8 00 50 # invokestatic 80 # int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) goto <425:cond_true>
A7 00 08 # goto +8         # goto <426:cond_false>
# <425:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <427:cond_end>
# <426:cond_false>
10 00    # bipush 0        # false
# <427:cond_end>
14 37 0E # aldc 14094      # s[14094] = "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 37 5D # aldc 14173      # s[14173] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) [failure message on stack]
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <428:cond_true>
A7 00 0B # goto +11        # goto <429:cond_false>
# <428:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <430:cond_end>
# <429:cond_false>
15 00    # vload 0         # x
# <430:cond_end>
36 02    # vstore 2        # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <431:cond_true>
A7 00 08 # goto +8         # goto <432:cond_false>
# <431:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <433:cond_end>
# <432:cond_false>
10 00    # bipush 0        # false
# <433:cond_end>
14 37 6F # aldc 14191      # s[14191] = "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<abs__1>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 6D             # code length = 109 bytes
15 00    # vload 0         # x
14 32 B4 # aldc 12980      # s[12980] = "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
B8 00 50 # invokestatic 80 # int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) goto <359:cond_true>
A7 00 08 # goto +8         # goto <360:cond_false>
# <359:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <361:cond_end>
# <360:cond_false>
10 00    # bipush 0        # false
# <361:cond_end>
14 32 E6 # aldc 13030      # s[13030] = "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 33 35 # aldc 13109      # s[13109] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) [failure message on stack]
15 00    # vload 0         # x
14 33 47 # aldc 13127      # s[13127] = "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
B8 00 51 # invokestatic 81 # abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48")
36 02    # vstore 2        # _result = abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48");
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <362:cond_true>
A7 00 08 # goto +8         # goto <363:cond_false>
# <362:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <364:cond_end>
# <363:cond_false>
10 00    # bipush 0        # false
# <364:cond_end>
14 33 78 # aldc 13176      # s[13176] = "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <368:cond_true>
A7 00 0B # goto +11        # goto <369:cond_false>
# <368:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <370:cond_end>
# <369:cond_false>
15 00    # vload 0         # x
# <370:cond_end>
9F 00 06 # if_cmpeq +6     # if (_result == ((x < 0) ? -(x) : x)) goto <365:cond_true>
A7 00 08 # goto +8         # goto <366:cond_false>
# <365:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <367:cond_end>
# <366:cond_false>
10 00    # bipush 0        # false
# <367:cond_end>
14 33 C5 # aldc 13253      # s[13253] = "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
CF       # assert          # assert(_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<max>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <395:cond_true>
A7 00 08 # goto +8         # goto <396:cond_false>
# <395:cond_true>
15 00    # vload 0         # x
A7 00 05 # goto +5         # goto <397:cond_end>
# <396:cond_false>
15 01    # vload 1         # y
# <397:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? x : y);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <398:cond_true>
A7 00 08 # goto +8         # goto <399:cond_false>
# <398:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <400:cond_end>
# <399:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <401:cond_true>
A7 00 08 # goto +8         # goto <402:cond_false>
# <401:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <403:cond_end>
# <402:cond_false>
10 00    # bipush 0        # false
# <403:cond_end>
# <400:cond_end>
14 35 A8 # aldc 13736      # s[13736] = "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <404:cond_true>
A7 00 17 # goto +23        # goto <405:cond_false>
# <404:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <407:cond_true>
A7 00 08 # goto +8         # goto <408:cond_false>
# <407:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <409:cond_end>
# <408:cond_false>
10 00    # bipush 0        # false
# <409:cond_end>
A7 00 05 # goto +5         # goto <406:cond_end>
# <405:cond_false>
10 00    # bipush 0        # false
# <406:cond_end>
14 35 F5 # aldc 13813      # s[13813] = "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<max__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 34 12 # aldc 13330      # s[13330] = "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
B8 00 53 # invokestatic 83 # max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49")
36 03    # vstore 3        # _result = max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <371:cond_true>
A7 00 08 # goto +8         # goto <372:cond_false>
# <371:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <373:cond_end>
# <372:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <374:cond_true>
A7 00 08 # goto +8         # goto <375:cond_false>
# <374:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <376:cond_end>
# <375:cond_false>
10 00    # bipush 0        # false
# <376:cond_end>
# <373:cond_end>
14 34 43 # aldc 13379      # s[13379] = "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <377:cond_true>
A7 00 17 # goto +23        # goto <378:cond_false>
# <377:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <380:cond_true>
A7 00 08 # goto +8         # goto <381:cond_false>
# <380:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <382:cond_end>
# <381:cond_false>
10 00    # bipush 0        # false
# <382:cond_end>
A7 00 05 # goto +5         # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0        # false
# <379:cond_end>
14 34 90 # aldc 13456      # s[13456] = "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <410:cond_true>
A7 00 08 # goto +8         # goto <411:cond_false>
# <410:cond_true>
15 01    # vload 1         # y
A7 00 05 # goto +5         # goto <412:cond_end>
# <411:cond_false>
15 00    # vload 0         # x
# <412:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? y : x);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <413:cond_true>
A7 00 08 # goto +8         # goto <414:cond_false>
# <413:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <415:cond_end>
# <414:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <416:cond_true>
A7 00 08 # goto +8         # goto <417:cond_false>
# <416:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <418:cond_end>
# <417:cond_false>
10 00    # bipush 0        # false
# <418:cond_end>
# <415:cond_end>
14 36 42 # aldc 13890      # s[13890] = "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <419:cond_true>
A7 00 17 # goto +23        # goto <420:cond_false>
# <419:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <422:cond_true>
A7 00 08 # goto +8         # goto <423:cond_false>
# <422:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <424:cond_end>
# <423:cond_false>
10 00    # bipush 0        # false
# <424:cond_end>
A7 00 05 # goto +5         # goto <421:cond_end>
# <420:cond_false>
10 00    # bipush 0        # false
# <421:cond_end>
14 36 8F # aldc 13967      # s[13967] = "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min__1>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 34 DD # aldc 13533      # s[13533] = "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
B8 00 55 # invokestatic 85 # min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49")
36 03    # vstore 3        # _result = min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <383:cond_true>
A7 00 08 # goto +8         # goto <384:cond_false>
# <383:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <385:cond_end>
# <384:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <386:cond_true>
A7 00 08 # goto +8         # goto <387:cond_false>
# <386:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0        # false
# <388:cond_end>
# <385:cond_end>
14 35 0E # aldc 13582      # s[13582] = "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <389:cond_true>
A7 00 17 # goto +23        # goto <390:cond_false>
# <389:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <392:cond_true>
A7 00 08 # goto +8         # goto <393:cond_false>
# <392:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <394:cond_end>
# <393:cond_false>
10 00    # bipush 0        # false
# <394:cond_end>
A7 00 05 # goto +5         # goto <391:cond_end>
# <390:cond_false>
10 00    # bipush 0        # false
# <391:cond_end>
14 35 5B # aldc 13659      # s[13659] = "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<int2hex>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 AB             # code length = 171 bytes
10 02    # bipush 2        # 2
14 38 E5 # aldc 14565      # s[14565] = "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
B8 00 4C # invokestatic 76 # int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"))
36 03    # vstore 3        # digits = (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"));
15 03    # vload 3         # digits
10 01    # bipush 1        # 1
60       # iadd            # (digits + 1)
BC 01    # newarray 1      # alloc_array(char, (digits + 1))
36 04    # vstore 4        # s = alloc_array(char, (digits + 1));
15 04    # vload 4         # s
15 03    # vload 3         # digits
63       # aadds           # &s[digits]
10 00    # bipush 0        # '\000'
55       # cmstore         # s[digits] = '\0';
10 00    # bipush 0        # 0
36 05    # vstore 5        # i = 0;
# <448:loop>
A7 00 03 # goto +3         # goto <449:body>
# <449:body>
10 00    # bipush 0        # 0
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <451:cond_true>
A7 00 17 # goto +23        # goto <452:cond_false>
# <451:cond_true>
15 05    # vload 5         # i
15 03    # vload 3         # digits
A4 00 06 # if_icmple +6    # if (i <= digits) goto <454:cond_true>
A7 00 08 # goto +8         # goto <455:cond_false>
# <454:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <456:cond_end>
# <455:cond_false>
10 00    # bipush 0        # false
# <456:cond_end>
A7 00 05 # goto +5         # goto <453:cond_end>
# <452:cond_false>
10 00    # bipush 0        # false
# <453:cond_end>
14 39 17 # aldc 14615      # s[14615] = "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # digits
A1 00 06 # if_icmplt +6    # if (i < digits) goto <457:then>
A7 00 2B # goto +43        # goto <458:else>
# <457:then>
15 04    # vload 4         # s
15 03    # vload 3         # digits
15 05    # vload 5         # i
64       # isub            # (digits - i)
10 01    # bipush 1        # 1
64       # isub            # ((digits - i) - 1)
63       # aadds           # &s[((digits - i) - 1)]
15 00    # vload 0         # x
10 0F    # bipush 15       # 15
7E       # iand            # (x & 15)
14 39 6B # aldc 14699      # s[14699] = "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
B8 00 58 # invokestatic 88 # hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43")
55       # cmstore         # s[((digits - i) - 1)] = hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43");
15 00    # vload 0         # x
10 04    # bipush 4        # 4
7A       # ishr            # (x >> 4)
36 00    # vstore 0        # x = (x >> 4);
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <459:endif>
# <458:else>
A7 00 06 # goto +6         # break
# <459:endif>
A7 FF A4 # goto -92        # goto <448:loop>
# <450:exit>
15 04    # vload 4         # s
14 39 9D # aldc 14749      # s[14749] = "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
B8 00 08 # invokestatic 8  # string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34")
36 02    # vstore 2        # _result = string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34");
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 02    # bipush 2        # 2
14 39 CF # aldc 14799      # s[14799] = "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
B8 00 4C # invokestatic 76 # int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) goto <460:cond_true>
A7 00 08 # goto +8         # goto <461:cond_false>
# <460:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <462:cond_end>
# <461:cond_false>
10 00    # bipush 0        # false
# <462:cond_end>
14 3A 01 # aldc 14849      # s[14849] = "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<hexdig2char>
00 02             # number of arguments = 2
00 06             # number of local variables = 6
00 93             # code length = 147 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <434:cond_true>
A7 00 17 # goto +23        # goto <435:cond_false>
# <434:cond_true>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <437:cond_true>
A7 00 08 # goto +8         # goto <438:cond_false>
# <437:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <439:cond_end>
# <438:cond_false>
10 00    # bipush 0        # false
# <439:cond_end>
A7 00 05 # goto +5         # goto <436:cond_end>
# <435:cond_false>
10 00    # bipush 0        # false
# <436:cond_end>
14 37 BC # aldc 14268      # s[14268] = "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 38 0B # aldc 14347      # s[14347] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <443:and>
A7 00 26 # goto +38        # goto <441:else>
# <443:and>
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
A1 00 06 # if_icmplt +6    # if (d < 10) goto <440:then>
A7 00 1C # goto +28        # goto <441:else>
# <440:then>
10 30    # bipush 48       # '0'
14 38 1D # aldc 14365      # s[14365] = "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
B8 00 09 # invokestatic 9  # char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34")
15 00    # vload 0         # d
60       # iadd            # (char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d)
14 38 4F # aldc 14415      # s[14415] = "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
B8 00 0A # invokestatic 10 # char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 3A # goto +58        # goto <442:endif>
# <441:else>
10 0A    # bipush 10       # 10
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (10 <= d) goto <447:and>
A7 00 29 # goto +41        # goto <445:else>
# <447:and>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <444:then>
A7 00 1F # goto +31        # goto <445:else>
# <444:then>
10 41    # bipush 65       # 'A'
14 38 81 # aldc 14465      # s[14465] = "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
B8 00 09 # invokestatic 9  # char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34")
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
64       # isub            # (d - 10)
60       # iadd            # (char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10))
14 38 B3 # aldc 14515      # s[14515] = "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
B8 00 0A # invokestatic 10 # char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <446:endif>
# <445:else>
10 3F    # bipush 63       # '\?'
36 02    # vstore 2        # _result = '?';
15 02    # vload 2         # _result
B0       # return          # 
# <446:endif>
# <442:endif>


#<init_state>
00 01             # number of arguments = 1
00 06             # number of local variables = 6
00 35             # code length = 53 bytes
BB 10    # new 16          # alloc(struct state_header)
36 02    # vstore 2        # state = alloc(struct state_header);
15 02    # vload 2         # state
62 00    # aaddf 0         # &state->dictionary
14 3A 4E # aldc 14926      # s[14926] = "clac.c0:27.23-27.33"
B8 00 1F # invokestatic 31 # dict_new__1("clac.c0:27.23-27.33")
4F       # amstore         # state->dictionary = dict_new__1("clac.c0:27.23-27.33");
15 02    # vload 2         # state
62 08    # aaddf 8         # &state->return_stack
14 3A 62 # aldc 14946      # s[14946] = "clac.c0:28.25-28.37"
B8 00 33 # invokestatic 51 # qstack_new__1("clac.c0:28.25-28.37")
4F       # amstore         # state->return_stack = qstack_new__1("clac.c0:28.25-28.37");
15 02    # vload 2         # state
36 01    # vstore 1        # _result = state;
15 01    # vload 1         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <463:cond_true>
A7 00 08 # goto +8         # goto <464:cond_false>
# <463:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <465:cond_end>
# <464:cond_false>
10 00    # bipush 0        # false
# <465:cond_end>
14 3A 76 # aldc 14966      # s[14966] = "clac.c0:24.4-24.28: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<add_def>
00 04             # number of arguments = 4
00 06             # number of local variables = 6
00 7D             # code length = 125 bytes
14 3A A5 # aldc 15013      # s[15013] = "clac.c0:34.24-34.35"
B8 00 15 # invokestatic 21 # queue_new__1("clac.c0:34.24-34.35")
36 04    # vstore 4        # definition = queue_new__1("clac.c0:34.24-34.35");
15 01    # vload 1         # Q
14 3A B9 # aldc 15033      # s[15033] = "clac.c0:35.14-35.20"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:35.14-35.20")
36 05    # vstore 5        # t = deq__1(Q, "clac.c0:35.14-35.20");
# <466:loop>
A7 00 03 # goto +3         # goto <467:body>
# <467:body>
15 01    # vload 1         # Q
14 3A CD # aldc 15053      # s[15053] = "clac.c0:36.11-36.25"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:36.11-36.25")
10 01    # bipush 1        # true
9F 00 2E # if_cmpeq +46    # if (queue_empty__1(Q, "clac.c0:36.11-36.25") == true) goto <470:else>
A7 00 03 # goto +3         # goto <472:and>
# <472:and>
15 05    # vload 5         # t
14 3A E1 # aldc 15073      # s[15073] = ";"
B7 00 0B # invokenative 11 # string_equal(t, ";")
10 01    # bipush 1        # true
9F 00 1E # if_cmpeq +30    # if (string_equal(t, ";") == true) goto <470:else>
A7 00 03 # goto +3         # goto <469:then>
# <469:then>
15 04    # vload 4         # definition
15 05    # vload 5         # t
14 3A E3 # aldc 15075      # s[15075] = "clac.c0:37.5-37.23"
B8 00 16 # invokestatic 22 # enq__1(definition, t, "clac.c0:37.5-37.23")
57       # pop             # (ignore result)
15 01    # vload 1         # Q
14 3A F6 # aldc 15094      # s[15094] = "clac.c0:38.9-38.15"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:38.9-38.15")
36 05    # vstore 5        # t = deq__1(Q, "clac.c0:38.9-38.15");
A7 00 06 # goto +6         # goto <471:endif>
# <470:else>
A7 00 06 # goto +6         # break
# <471:endif>
A7 FF C2 # goto -62        # goto <466:loop>
# <468:exit>
15 05    # vload 5         # t
14 3B 09 # aldc 15113      # s[15113] = ";"
B7 00 0B # invokenative 11 # string_equal(t, ";")
10 01    # bipush 1        # true
9F 00 0D # if_cmpeq +13    # if (string_equal(t, ";") == true) goto <474:else>
A7 00 03 # goto +3         # goto <473:then>
# <473:then>
14 3B 0B # aldc 15115      # s[15115] = "unexpected end of input"
BF       # athrow          # error "unexpected end of input"
A7 00 03 # goto +3         # goto <475:endif>
# <474:else>
# <475:endif>
15 00    # vload 0         # ST
62 00    # aaddf 0         # &ST->dictionary
2F       # amload          # ST->dictionary
15 02    # vload 2         # name_token
15 04    # vload 4         # definition
14 3B 23 # aldc 15139      # s[15139] = "clac.c0:45.3-45.54"
B8 00 21 # invokestatic 33 # dict_insert__1(ST->dictionary, name_token, definition, "clac.c0:45.3-45.54")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<safeDiv>
00 04             # number of arguments = 4
00 06             # number of local variables = 6
00 3E             # code length = 62 bytes
15 02    # vload 2         # y
10 00    # bipush 0        # 0
9F 00 1E # if_cmpeq +30    # if (y == 0) goto <476:then>
A7 00 03 # goto +3         # goto <479:or>
# <479:or>
15 01    # vload 1         # x
14 3B 36 # aldc 15158      # s[15158] = "clac.c0:51.23-51.32"
B8 00 50 # invokestatic 80 # int_min__1("clac.c0:51.23-51.32")
9F 00 06 # if_cmpeq +6     # if (x == int_min__1("clac.c0:51.23-51.32")) goto <480:and>
A7 00 14 # goto +20        # goto <477:else>
# <480:and>
15 02    # vload 2         # y
10 FF    # bipush -1       # -1
9F 00 06 # if_cmpeq +6     # if (y == -(1)) goto <476:then>
A7 00 0A # goto +10        # goto <477:else>
# <476:then>
14 3B 4A # aldc 15178      # s[15178] = "division by 0"
BF       # athrow          # error "division by 0"
A7 00 15 # goto +21        # goto <478:endif>
# <477:else>
15 01    # vload 1         # x
15 02    # vload 2         # y
6C       # idiv            # (x / y)
36 04    # vstore 4        # answer = (x / y);
15 00    # vload 0         # S
15 04    # vload 4         # answer
14 3B 58 # aldc 15192      # s[15192] = "clac.c0:55.5-55.20"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:55.5-55.20")
57       # pop             # (ignore result)
# <478:endif>
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<safeMod>
00 04             # number of arguments = 4
00 06             # number of local variables = 6
00 3E             # code length = 62 bytes
15 02    # vload 2         # y
10 00    # bipush 0        # 0
9F 00 1E # if_cmpeq +30    # if (y == 0) goto <481:then>
A7 00 03 # goto +3         # goto <484:or>
# <484:or>
15 01    # vload 1         # x
14 3B 6B # aldc 15211      # s[15211] = "clac.c0:61.23-61.32"
B8 00 50 # invokestatic 80 # int_min__1("clac.c0:61.23-61.32")
9F 00 06 # if_cmpeq +6     # if (x == int_min__1("clac.c0:61.23-61.32")) goto <485:and>
A7 00 14 # goto +20        # goto <482:else>
# <485:and>
15 02    # vload 2         # y
10 FF    # bipush -1       # -1
9F 00 06 # if_cmpeq +6     # if (y == -(1)) goto <481:then>
A7 00 0A # goto +10        # goto <482:else>
# <481:then>
14 3B 7F # aldc 15231      # s[15231] = "division by 0"
BF       # athrow          # error "division by 0"
A7 00 15 # goto +21        # goto <483:endif>
# <482:else>
15 01    # vload 1         # x
15 02    # vload 2         # y
70       # irem            # (x % y)
36 04    # vstore 4        # answer = (x % y);
15 00    # vload 0         # S
15 04    # vload 4         # answer
14 3B 8D # aldc 15245      # s[15245] = "clac.c0:65.5-65.20"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:65.5-65.20")
57       # pop             # (ignore result)
# <483:endif>
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<pow>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 8D             # code length = 141 bytes
15 01    # vload 1         # y
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (y >= 0) goto <486:cond_true>
A7 00 08 # goto +8         # goto <487:cond_false>
# <486:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <488:cond_end>
# <487:cond_false>
10 00    # bipush 0        # false
# <488:cond_end>
14 3B A0 # aldc 15264      # s[15264] = "clac.c0:70.4-70.20: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 3B D1 # aldc 15313      # s[15313] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("clac.c0:70.4-70.20: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(y >= 0) [failure message on stack]
15 01    # vload 1         # y
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (y == 0) goto <489:then>
A7 00 0D # goto +13        # goto <490:else>
# <489:then>
10 01    # bipush 1        # 1
36 03    # vstore 3        # _result = 1;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <491:endif>
# <490:else>
# <491:endif>
10 01    # bipush 1        # 1
36 04    # vstore 4        # result = 1;
# <492:loop>
A7 00 03 # goto +3         # goto <493:body>
# <493:body>
15 01    # vload 1         # y
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (y >= 0) goto <495:cond_true>
A7 00 08 # goto +8         # goto <496:cond_false>
# <495:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <497:cond_end>
# <496:cond_false>
10 00    # bipush 0        # false
# <497:cond_end>
14 3B E3 # aldc 15331      # s[15331] = "clac.c0:75.6-75.28: @loop_invariant annotation failed"
CF       # assert          # assert(y >= 0) [failure message on stack]
15 01    # vload 1         # y
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (y > 0) goto <498:then>
A7 00 14 # goto +20        # goto <499:else>
# <498:then>
15 04    # vload 4         # result
15 00    # vload 0         # x
68       # imul            # (result * x)
36 04    # vstore 4        # result = (result * x);
15 01    # vload 1         # y
10 01    # bipush 1        # 1
64       # isub            # (y - 1)
36 01    # vstore 1        # y = (y - 1);
A7 00 06 # goto +6         # goto <500:endif>
# <499:else>
A7 00 06 # goto +6         # break
# <500:endif>
A7 FF CA # goto -54        # goto <492:loop>
# <494:exit>
15 01    # vload 1         # y
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (y == 0) goto <501:cond_true>
A7 00 08 # goto +8         # goto <502:cond_false>
# <501:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <503:cond_end>
# <502:cond_false>
10 00    # bipush 0        # false
# <503:cond_end>
14 3C 19 # aldc 15385      # s[15385] = "clac.c0:80.6-80.20: @assert annotation failed"
CF       # assert          # assert(y == 0) [failure message on stack]
15 04    # vload 4         # result
36 03    # vstore 3        # _result = result;
15 03    # vload 3         # _result
B0       # return          # 


#<pick>
00 03             # number of arguments = 3
00 06             # number of local variables = 6
00 96             # code length = 150 bytes
14 3C 47 # aldc 15431      # s[15431] = "clac.c0:86.18-86.29"
B8 00 29 # invokestatic 41 # stack_new__1("clac.c0:86.18-86.29")
36 04    # vstore 4        # temp = stack_new__1("clac.c0:86.18-86.29");
# <504:loop>
A7 00 03 # goto +3         # goto <505:body>
# <505:body>
15 01    # vload 1         # n
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (n > 0) goto <507:then>
A7 00 35 # goto +53        # goto <508:else>
# <507:then>
15 00    # vload 0         # S
14 3C 5B # aldc 15451      # s[15451] = "clac.c0:88.10-88.24"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:88.10-88.24")
10 01    # bipush 1        # true
9F 00 21 # if_cmpeq +33    # if (stack_empty__1(S, "clac.c0:88.10-88.24") == true) goto <511:else>
A7 00 03 # goto +3         # goto <510:then>
# <510:then>
15 04    # vload 4         # temp
15 00    # vload 0         # S
14 3C 6F # aldc 15471      # s[15471] = "clac.c0:89.18-89.24"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:89.18-89.24")
14 3C 83 # aldc 15491      # s[15491] = "clac.c0:89.7-89.25"
B8 00 2A # invokestatic 42 # push__1(temp, pop__1(S, "clac.c0:89.18-89.24"), "clac.c0:89.7-89.25")
57       # pop             # (ignore result)
15 01    # vload 1         # n
10 01    # bipush 1        # 1
64       # isub            # 
36 01    # vstore 1        # n -= 1;
A7 00 07 # goto +7         # goto <512:endif>
# <511:else>
14 3C 96 # aldc 15510      # s[15510] = "not enough elements on stack"
BF       # athrow          # error "not enough elements on stack"
# <512:endif>
A7 00 06 # goto +6         # goto <509:endif>
# <508:else>
A7 00 06 # goto +6         # break
# <509:endif>
A7 FF BE # goto -66        # goto <504:loop>
# <506:exit>
15 04    # vload 4         # temp
14 3C B3 # aldc 15539      # s[15539] = "clac.c0:93.16-93.25"
B8 00 2B # invokestatic 43 # pop__1(temp, "clac.c0:93.16-93.25")
36 05    # vstore 5        # result = pop__1(temp, "clac.c0:93.16-93.25");
15 04    # vload 4         # temp
15 05    # vload 5         # result
14 3C C7 # aldc 15559      # s[15559] = "clac.c0:94.3-94.21"
B8 00 2A # invokestatic 42 # push__1(temp, result, "clac.c0:94.3-94.21")
57       # pop             # (ignore result)
# <513:loop>
A7 00 03 # goto +3         # goto <514:body>
# <514:body>
15 04    # vload 4         # temp
14 3C DA # aldc 15578      # s[15578] = "clac.c0:95.11-95.28"
B8 00 28 # invokestatic 40 # stack_empty__1(temp, "clac.c0:95.11-95.28")
10 01    # bipush 1        # true
9F 00 1A # if_cmpeq +26    # if (stack_empty__1(temp, "clac.c0:95.11-95.28") == true) goto <517:else>
A7 00 03 # goto +3         # goto <516:then>
# <516:then>
15 00    # vload 0         # S
15 04    # vload 4         # temp
14 3C EE # aldc 15598      # s[15598] = "clac.c0:96.13-96.22"
B8 00 2B # invokestatic 43 # pop__1(temp, "clac.c0:96.13-96.22")
14 3D 02 # aldc 15618      # s[15618] = "clac.c0:96.5-96.23"
B8 00 2A # invokestatic 42 # push__1(S, pop__1(temp, "clac.c0:96.13-96.22"), "clac.c0:96.5-96.23")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <518:endif>
# <517:else>
A7 00 06 # goto +6         # break
# <518:endif>
A7 FF D6 # goto -42        # goto <513:loop>
# <515:exit>
15 05    # vload 5         # result
36 03    # vstore 3        # _result = result;
15 03    # vload 3         # _result
B0       # return          # 


#<eval>
00 04             # number of arguments = 4
00 0A             # number of local variables = 10
08 44             # code length = 2116 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <522:and>
A7 00 1F # goto +31        # goto <520:cond_false>
# <522:and>
15 01    # vload 1         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <519:cond_true>
A7 00 16 # goto +22        # goto <520:cond_false>
# <519:cond_true>
15 02    # vload 2         # ST
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ST != NULL) goto <523:cond_true>
A7 00 08 # goto +8         # goto <524:cond_false>
# <523:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <525:cond_end>
# <524:cond_false>
10 00    # bipush 0        # false
# <525:cond_end>
A7 00 05 # goto +5         # goto <521:cond_end>
# <520:cond_false>
10 00    # bipush 0        # false
# <521:cond_end>
14 3D 15 # aldc 15637      # s[15637] = "clac.c0:105.4-105.50: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 3D 48 # aldc 15688      # s[15688] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("clac.c0:105.4-105.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((Q != NULL) && (S != NULL)) && (ST != NULL)) [failure message on stack]
# <526:loop>
A7 00 03 # goto +3         # goto <527:body>
# <527:body>
15 00    # vload 0         # Q
14 3D 5A # aldc 15706      # s[15706] = "clac.c0:108.11-108.25"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:108.11-108.25")
10 01    # bipush 1        # true
9F 07 D9 # if_cmpeq +2009  # if (queue_empty__1(Q, "clac.c0:108.11-108.25") == true) goto <530:else>
A7 00 03 # goto +3         # goto <529:then>
# <529:then>
15 00    # vload 0         # Q
14 3D 70 # aldc 15728      # s[15728] = "clac.c0:109.18-109.24"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:109.18-109.24")
36 05    # vstore 5        # tok = deq__1(Q, "clac.c0:109.18-109.24");
15 05    # vload 5         # tok
14 3D 86 # aldc 15750      # s[15750] = "print"
B7 00 0B # invokenative 11 # string_equal(tok, "print")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "print") == true) goto <532:then>
A7 00 34 # goto +52        # goto <533:else>
# <532:then>
15 01    # vload 1         # S
14 3D 8C # aldc 15756      # s[15756] = "clac.c0:112.12-112.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:112.12-112.26")
10 01    # bipush 1        # true
9F 00 20 # if_cmpeq +32    # if (stack_empty__1(S, "clac.c0:112.12-112.26") == true) goto <536:else>
A7 00 03 # goto +3         # goto <535:then>
# <535:then>
15 01    # vload 1         # S
14 3D A2 # aldc 15778      # s[15778] = "clac.c0:113.17-113.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:113.17-113.23")
36 06    # vstore 6        # x = pop__1(S, "clac.c0:113.17-113.23");
15 06    # vload 6         # x
B7 00 1C # invokenative 28 # printint(x)
57       # pop             # (ignore result)
14 3D B8 # aldc 15800      # s[15800] = "\n"
B7 00 1D # invokenative 29 # print("\n")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <537:endif>
# <536:else>
14 3D BA # aldc 15802      # s[15802] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <537:endif>
A7 06 EC # goto +1772      # goto <534:endif>
# <533:else>
15 05    # vload 5         # tok
14 3D C9 # aldc 15817      # s[15817] = "quit"
B7 00 0B # invokenative 11 # string_equal(tok, "quit")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "quit") == true) goto <538:then>
A7 00 28 # goto +40        # goto <539:else>
# <538:then>
10 00    # bipush 0        # false
36 04    # vstore 4        # _result = false;
15 04    # vload 4         # _result
10 00    # bipush 0        # false
9F 00 06 # if_cmpeq +6     # if (_result == false) goto <541:cond_true>
A7 00 08 # goto +8         # goto <542:cond_false>
# <541:cond_true>
10 01    # bipush 1        # true
A7 00 0B # goto +11        # goto <543:cond_end>
# <542:cond_false>
15 00    # vload 0         # Q
14 3D CE # aldc 15822      # s[15822] = "clac.c0:106.32-106.46"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:106.32-106.46")
# <543:cond_end>
14 3D E4 # aldc 15844      # s[15844] = "clac.c0:106.4-106.47: @ensures annotation failed"
CF       # assert          # assert((_result == false) || queue_empty__1(Q, "clac.c0:106.32-106.46")) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 
A7 06 B7 # goto +1719      # goto <540:endif>
# <539:else>
15 05    # vload 5         # tok
14 3E 15 # aldc 15893      # s[15893] = "+"
B7 00 0B # invokenative 11 # string_equal(tok, "+")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "+") == true) goto <544:then>
A7 00 5A # goto +90        # goto <545:else>
# <544:then>
15 01    # vload 1         # S
14 3E 17 # aldc 15895      # s[15895] = "clac.c0:121.12-121.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:121.12-121.26")
10 01    # bipush 1        # true
9F 00 46 # if_cmpeq +70    # if (stack_empty__1(S, "clac.c0:121.12-121.26") == true) goto <548:else>
A7 00 03 # goto +3         # goto <547:then>
# <547:then>
15 01    # vload 1         # S
14 3E 2D # aldc 15917      # s[15917] = "clac.c0:122.17-122.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:122.17-122.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:122.17-122.23");
15 01    # vload 1         # S
14 3E 43 # aldc 15939      # s[15939] = "clac.c0:123.14-123.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:123.14-123.28")
10 01    # bipush 1        # true
9F 00 25 # if_cmpeq +37    # if (stack_empty__1(S, "clac.c0:123.14-123.28") == true) goto <551:else>
A7 00 03 # goto +3         # goto <550:then>
# <550:then>
15 01    # vload 1         # S
14 3E 59 # aldc 15961      # s[15961] = "clac.c0:124.19-124.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:124.19-124.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:124.19-124.25");
15 07    # vload 7         # x
15 06    # vload 6         # y
60       # iadd            # (x + y)
36 08    # vstore 8        # answer = (x + y);
15 01    # vload 1         # S
15 08    # vload 8         # answer
14 3E 6F # aldc 15983      # s[15983] = "clac.c0:126.11-126.26"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:126.11-126.26")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <552:endif>
# <551:else>
14 3E 85 # aldc 16005      # s[16005] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <552:endif>
A7 00 07 # goto +7         # goto <549:endif>
# <548:else>
14 3E A5 # aldc 16037      # s[16037] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <549:endif>
A7 06 50 # goto +1616      # goto <546:endif>
# <545:else>
15 05    # vload 5         # tok
14 3E B4 # aldc 16052      # s[16052] = "-"
B7 00 0B # invokenative 11 # string_equal(tok, "-")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "-") == true) goto <553:then>
A7 00 5A # goto +90        # goto <554:else>
# <553:then>
15 01    # vload 1         # S
14 3E B6 # aldc 16054      # s[16054] = "clac.c0:131.12-131.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:131.12-131.26")
10 01    # bipush 1        # true
9F 00 46 # if_cmpeq +70    # if (stack_empty__1(S, "clac.c0:131.12-131.26") == true) goto <557:else>
A7 00 03 # goto +3         # goto <556:then>
# <556:then>
15 01    # vload 1         # S
14 3E CC # aldc 16076      # s[16076] = "clac.c0:132.17-132.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:132.17-132.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:132.17-132.23");
15 01    # vload 1         # S
14 3E E2 # aldc 16098      # s[16098] = "clac.c0:133.14-133.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:133.14-133.28")
10 01    # bipush 1        # true
9F 00 25 # if_cmpeq +37    # if (stack_empty__1(S, "clac.c0:133.14-133.28") == true) goto <560:else>
A7 00 03 # goto +3         # goto <559:then>
# <559:then>
15 01    # vload 1         # S
14 3E F8 # aldc 16120      # s[16120] = "clac.c0:134.19-134.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:134.19-134.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:134.19-134.25");
15 07    # vload 7         # x
15 06    # vload 6         # y
64       # isub            # (x - y)
36 08    # vstore 8        # answer = (x - y);
15 01    # vload 1         # S
15 08    # vload 8         # answer
14 3F 0E # aldc 16142      # s[16142] = "clac.c0:136.11-136.26"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:136.11-136.26")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <561:endif>
# <560:else>
14 3F 24 # aldc 16164      # s[16164] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <561:endif>
A7 00 07 # goto +7         # goto <558:endif>
# <557:else>
14 3F 44 # aldc 16196      # s[16196] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <558:endif>
A7 05 E9 # goto +1513      # goto <555:endif>
# <554:else>
15 05    # vload 5         # tok
14 3F 53 # aldc 16211      # s[16211] = "*"
B7 00 0B # invokenative 11 # string_equal(tok, "*")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "*") == true) goto <562:then>
A7 00 5A # goto +90        # goto <563:else>
# <562:then>
15 01    # vload 1         # S
14 3F 55 # aldc 16213      # s[16213] = "clac.c0:141.12-141.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:141.12-141.26")
10 01    # bipush 1        # true
9F 00 46 # if_cmpeq +70    # if (stack_empty__1(S, "clac.c0:141.12-141.26") == true) goto <566:else>
A7 00 03 # goto +3         # goto <565:then>
# <565:then>
15 01    # vload 1         # S
14 3F 6B # aldc 16235      # s[16235] = "clac.c0:142.17-142.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:142.17-142.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:142.17-142.23");
15 01    # vload 1         # S
14 3F 81 # aldc 16257      # s[16257] = "clac.c0:143.14-143.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:143.14-143.28")
10 01    # bipush 1        # true
9F 00 25 # if_cmpeq +37    # if (stack_empty__1(S, "clac.c0:143.14-143.28") == true) goto <569:else>
A7 00 03 # goto +3         # goto <568:then>
# <568:then>
15 01    # vload 1         # S
14 3F 97 # aldc 16279      # s[16279] = "clac.c0:144.19-144.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:144.19-144.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:144.19-144.25");
15 07    # vload 7         # x
15 06    # vload 6         # y
68       # imul            # (x * y)
36 08    # vstore 8        # answer = (x * y);
15 01    # vload 1         # S
15 08    # vload 8         # answer
14 3F AD # aldc 16301      # s[16301] = "clac.c0:146.11-146.26"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:146.11-146.26")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <570:endif>
# <569:else>
14 3F C3 # aldc 16323      # s[16323] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <570:endif>
A7 00 07 # goto +7         # goto <567:endif>
# <566:else>
14 3F E3 # aldc 16355      # s[16355] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <567:endif>
A7 05 82 # goto +1410      # goto <564:endif>
# <563:else>
15 05    # vload 5         # tok
14 3F F2 # aldc 16370      # s[16370] = "/"
B7 00 0B # invokenative 11 # string_equal(tok, "/")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "/") == true) goto <571:then>
A7 00 55 # goto +85        # goto <572:else>
# <571:then>
15 01    # vload 1         # S
14 3F F4 # aldc 16372      # s[16372] = "clac.c0:151.12-151.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:151.12-151.26")
10 01    # bipush 1        # true
9F 00 41 # if_cmpeq +65    # if (stack_empty__1(S, "clac.c0:151.12-151.26") == true) goto <575:else>
A7 00 03 # goto +3         # goto <574:then>
# <574:then>
15 01    # vload 1         # S
14 40 0A # aldc 16394      # s[16394] = "clac.c0:152.17-152.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:152.17-152.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:152.17-152.23");
15 01    # vload 1         # S
14 40 20 # aldc 16416      # s[16416] = "clac.c0:153.14-153.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:153.14-153.28")
10 01    # bipush 1        # true
9F 00 20 # if_cmpeq +32    # if (stack_empty__1(S, "clac.c0:153.14-153.28") == true) goto <578:else>
A7 00 03 # goto +3         # goto <577:then>
# <577:then>
15 01    # vload 1         # S
14 40 36 # aldc 16438      # s[16438] = "clac.c0:154.19-154.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:154.19-154.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:154.19-154.25");
15 01    # vload 1         # S
15 07    # vload 7         # x
15 06    # vload 6         # y
14 40 4C # aldc 16460      # s[16460] = "clac.c0:155.11-155.27"
B8 00 5B # invokestatic 91 # safeDiv(S, x, y, "clac.c0:155.11-155.27")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <579:endif>
# <578:else>
14 40 62 # aldc 16482      # s[16482] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <579:endif>
A7 00 07 # goto +7         # goto <576:endif>
# <575:else>
14 40 82 # aldc 16514      # s[16514] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <576:endif>
A7 05 20 # goto +1312      # goto <573:endif>
# <572:else>
15 05    # vload 5         # tok
14 40 91 # aldc 16529      # s[16529] = "%"
B7 00 0B # invokenative 11 # string_equal(tok, "%")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "%") == true) goto <580:then>
A7 00 55 # goto +85        # goto <581:else>
# <580:then>
15 01    # vload 1         # S
14 40 93 # aldc 16531      # s[16531] = "clac.c0:160.12-160.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:160.12-160.26")
10 01    # bipush 1        # true
9F 00 41 # if_cmpeq +65    # if (stack_empty__1(S, "clac.c0:160.12-160.26") == true) goto <584:else>
A7 00 03 # goto +3         # goto <583:then>
# <583:then>
15 01    # vload 1         # S
14 40 A9 # aldc 16553      # s[16553] = "clac.c0:161.17-161.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:161.17-161.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:161.17-161.23");
15 01    # vload 1         # S
14 40 BF # aldc 16575      # s[16575] = "clac.c0:162.14-162.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:162.14-162.28")
10 01    # bipush 1        # true
9F 00 20 # if_cmpeq +32    # if (stack_empty__1(S, "clac.c0:162.14-162.28") == true) goto <587:else>
A7 00 03 # goto +3         # goto <586:then>
# <586:then>
15 01    # vload 1         # S
14 40 D5 # aldc 16597      # s[16597] = "clac.c0:163.19-163.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:163.19-163.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:163.19-163.25");
15 01    # vload 1         # S
15 07    # vload 7         # x
15 06    # vload 6         # y
14 40 EB # aldc 16619      # s[16619] = "clac.c0:164.11-164.27"
B8 00 5C # invokestatic 92 # safeMod(S, x, y, "clac.c0:164.11-164.27")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <588:endif>
# <587:else>
14 41 01 # aldc 16641      # s[16641] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <588:endif>
A7 00 07 # goto +7         # goto <585:endif>
# <584:else>
14 41 21 # aldc 16673      # s[16673] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <585:endif>
A7 04 BE # goto +1214      # goto <582:endif>
# <581:else>
15 05    # vload 5         # tok
14 41 30 # aldc 16688      # s[16688] = "<"
B7 00 0B # invokenative 11 # string_equal(tok, "<")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "<") == true) goto <589:then>
A7 00 6B # goto +107       # goto <590:else>
# <589:then>
15 01    # vload 1         # S
14 41 32 # aldc 16690      # s[16690] = "clac.c0:169.12-169.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:169.12-169.26")
10 01    # bipush 1        # true
9F 00 57 # if_cmpeq +87    # if (stack_empty__1(S, "clac.c0:169.12-169.26") == true) goto <593:else>
A7 00 03 # goto +3         # goto <592:then>
# <592:then>
15 01    # vload 1         # S
14 41 48 # aldc 16712      # s[16712] = "clac.c0:170.17-170.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:170.17-170.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:170.17-170.23");
15 01    # vload 1         # S
14 41 5E # aldc 16734      # s[16734] = "clac.c0:171.14-171.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:171.14-171.28")
10 01    # bipush 1        # true
9F 00 36 # if_cmpeq +54    # if (stack_empty__1(S, "clac.c0:171.14-171.28") == true) goto <596:else>
A7 00 03 # goto +3         # goto <595:then>
# <595:then>
15 01    # vload 1         # S
14 41 74 # aldc 16756      # s[16756] = "clac.c0:172.19-172.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:172.19-172.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:172.19-172.25");
15 07    # vload 7         # x
15 06    # vload 6         # y
A1 00 06 # if_icmplt +6    # if (x < y) goto <598:then>
A7 00 11 # goto +17        # goto <599:else>
# <598:then>
15 01    # vload 1         # S
10 01    # bipush 1        # 1
14 41 8A # aldc 16778      # s[16778] = "clac.c0:174.13-174.23"
B8 00 2A # invokestatic 42 # push__1(S, 1, "clac.c0:174.13-174.23")
57       # pop             # (ignore result)
A7 00 0E # goto +14        # goto <600:endif>
# <599:else>
15 01    # vload 1         # S
10 00    # bipush 0        # 0
14 41 A0 # aldc 16800      # s[16800] = "clac.c0:176.13-176.23"
B8 00 2A # invokestatic 42 # push__1(S, 0, "clac.c0:176.13-176.23")
57       # pop             # (ignore result)
# <600:endif>
A7 00 07 # goto +7         # goto <597:endif>
# <596:else>
14 41 B6 # aldc 16822      # s[16822] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <597:endif>
A7 00 07 # goto +7         # goto <594:endif>
# <593:else>
14 41 D6 # aldc 16854      # s[16854] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <594:endif>
A7 04 46 # goto +1094      # goto <591:endif>
# <590:else>
15 05    # vload 5         # tok
14 41 E5 # aldc 16869      # s[16869] = "**"
B7 00 0B # invokenative 11 # string_equal(tok, "**")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "**") == true) goto <601:then>
A7 00 70 # goto +112       # goto <602:else>
# <601:then>
15 01    # vload 1         # S
14 41 E8 # aldc 16872      # s[16872] = "clac.c0:182.12-182.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:182.12-182.26")
10 01    # bipush 1        # true
9F 00 5C # if_cmpeq +92    # if (stack_empty__1(S, "clac.c0:182.12-182.26") == true) goto <605:else>
A7 00 03 # goto +3         # goto <604:then>
# <604:then>
15 01    # vload 1         # S
14 41 FE # aldc 16894      # s[16894] = "clac.c0:183.17-183.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:183.17-183.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:183.17-183.23");
15 01    # vload 1         # S
14 42 14 # aldc 16916      # s[16916] = "clac.c0:184.14-184.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:184.14-184.28")
10 01    # bipush 1        # true
9F 00 3B # if_cmpeq +59    # if (stack_empty__1(S, "clac.c0:184.14-184.28") == true) goto <608:else>
A7 00 03 # goto +3         # goto <607:then>
# <607:then>
15 01    # vload 1         # S
14 42 2A # aldc 16938      # s[16938] = "clac.c0:185.19-185.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:185.19-185.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:185.19-185.25");
15 06    # vload 6         # y
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (y < 0) goto <610:then>
A7 00 0A # goto +10        # goto <611:else>
# <610:then>
14 42 40 # aldc 16960      # s[16960] = "negative exponents are not valid"
BF       # athrow          # error "negative exponents are not valid"
A7 00 1A # goto +26        # goto <612:endif>
# <611:else>
15 07    # vload 7         # x
15 06    # vload 6         # y
14 42 61 # aldc 16993      # s[16993] = "clac.c0:189.26-189.34"
B8 00 5D # invokestatic 93 # pow(x, y, "clac.c0:189.26-189.34")
36 08    # vstore 8        # answer = pow(x, y, "clac.c0:189.26-189.34");
15 01    # vload 1         # S
15 08    # vload 8         # answer
14 42 77 # aldc 17015      # s[17015] = "clac.c0:190.13-190.28"
B8 00 2A # invokestatic 42 # push__1(S, answer, "clac.c0:190.13-190.28")
57       # pop             # (ignore result)
# <612:endif>
A7 00 07 # goto +7         # goto <609:endif>
# <608:else>
14 42 8D # aldc 17037      # s[17037] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <609:endif>
A7 00 07 # goto +7         # goto <606:endif>
# <605:else>
14 42 AD # aldc 17069      # s[17069] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <606:endif>
A7 03 C9 # goto +969       # goto <603:endif>
# <602:else>
15 05    # vload 5         # tok
14 42 BC # aldc 17084      # s[17084] = "drop"
B7 00 0B # invokenative 11 # string_equal(tok, "drop")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "drop") == true) goto <613:then>
A7 00 27 # goto +39        # goto <614:else>
# <613:then>
15 01    # vload 1         # S
14 42 C1 # aldc 17089      # s[17089] = "clac.c0:196.12-196.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:196.12-196.26")
10 01    # bipush 1        # true
9F 00 13 # if_cmpeq +19    # if (stack_empty__1(S, "clac.c0:196.12-196.26") == true) goto <617:else>
A7 00 03 # goto +3         # goto <616:then>
# <616:then>
15 01    # vload 1         # S
14 42 D7 # aldc 17111      # s[17111] = "clac.c0:197.17-197.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:197.17-197.23")
36 06    # vstore 6        # x = pop__1(S, "clac.c0:197.17-197.23");
A7 00 07 # goto +7         # goto <618:endif>
# <617:else>
14 42 ED # aldc 17133      # s[17133] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <618:endif>
A7 03 95 # goto +917       # goto <615:endif>
# <614:else>
15 05    # vload 5         # tok
14 42 FC # aldc 17148      # s[17148] = "swap"
B7 00 0B # invokenative 11 # string_equal(tok, "swap")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "swap") == true) goto <619:then>
A7 00 5E # goto +94        # goto <620:else>
# <619:then>
15 01    # vload 1         # S
14 43 01 # aldc 17153      # s[17153] = "clac.c0:201.12-201.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:201.12-201.26")
10 01    # bipush 1        # true
9F 00 4A # if_cmpeq +74    # if (stack_empty__1(S, "clac.c0:201.12-201.26") == true) goto <623:else>
A7 00 03 # goto +3         # goto <622:then>
# <622:then>
15 01    # vload 1         # S
14 43 17 # aldc 17175      # s[17175] = "clac.c0:202.17-202.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:202.17-202.23")
36 06    # vstore 6        # y = pop__1(S, "clac.c0:202.17-202.23");
15 01    # vload 1         # S
14 43 2D # aldc 17197      # s[17197] = "clac.c0:203.14-203.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:203.14-203.28")
10 01    # bipush 1        # true
9F 00 29 # if_cmpeq +41    # if (stack_empty__1(S, "clac.c0:203.14-203.28") == true) goto <626:else>
A7 00 03 # goto +3         # goto <625:then>
# <625:then>
15 01    # vload 1         # S
14 43 43 # aldc 17219      # s[17219] = "clac.c0:204.19-204.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:204.19-204.25")
36 07    # vstore 7        # x = pop__1(S, "clac.c0:204.19-204.25");
15 01    # vload 1         # S
15 06    # vload 6         # y
14 43 59 # aldc 17241      # s[17241] = "clac.c0:205.11-205.21"
B8 00 2A # invokestatic 42 # push__1(S, y, "clac.c0:205.11-205.21")
57       # pop             # (ignore result)
15 01    # vload 1         # S
15 07    # vload 7         # x
14 43 6F # aldc 17263      # s[17263] = "clac.c0:206.11-206.21"
B8 00 2A # invokestatic 42 # push__1(S, x, "clac.c0:206.11-206.21")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <627:endif>
# <626:else>
14 43 85 # aldc 17285      # s[17285] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <627:endif>
A7 00 07 # goto +7         # goto <624:endif>
# <623:else>
14 43 A5 # aldc 17317      # s[17317] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <624:endif>
A7 03 2A # goto +810       # goto <621:endif>
# <620:else>
15 05    # vload 5         # tok
14 43 B4 # aldc 17332      # s[17332] = "rot"
B7 00 0B # invokenative 11 # string_equal(tok, "rot")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "rot") == true) goto <628:then>
A7 00 8A # goto +138       # goto <629:else>
# <628:then>
15 01    # vload 1         # S
14 43 B8 # aldc 17336      # s[17336] = "clac.c0:211.12-211.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:211.12-211.26")
10 01    # bipush 1        # true
9F 00 76 # if_cmpeq +118   # if (stack_empty__1(S, "clac.c0:211.12-211.26") == true) goto <632:else>
A7 00 03 # goto +3         # goto <631:then>
# <631:then>
15 01    # vload 1         # S
14 43 CE # aldc 17358      # s[17358] = "clac.c0:212.17-212.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:212.17-212.23")
36 06    # vstore 6        # z = pop__1(S, "clac.c0:212.17-212.23");
15 01    # vload 1         # S
14 43 E4 # aldc 17380      # s[17380] = "clac.c0:213.14-213.28"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:213.14-213.28")
10 01    # bipush 1        # true
9F 00 55 # if_cmpeq +85    # if (stack_empty__1(S, "clac.c0:213.14-213.28") == true) goto <635:else>
A7 00 03 # goto +3         # goto <634:then>
# <634:then>
15 01    # vload 1         # S
14 43 FA # aldc 17402      # s[17402] = "clac.c0:214.19-214.25"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:214.19-214.25")
36 07    # vstore 7        # y = pop__1(S, "clac.c0:214.19-214.25");
15 01    # vload 1         # S
14 44 10 # aldc 17424      # s[17424] = "clac.c0:215.16-215.30"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:215.16-215.30")
10 01    # bipush 1        # true
9F 00 34 # if_cmpeq +52    # if (stack_empty__1(S, "clac.c0:215.16-215.30") == true) goto <638:else>
A7 00 03 # goto +3         # goto <637:then>
# <637:then>
15 01    # vload 1         # S
14 44 26 # aldc 17446      # s[17446] = "clac.c0:216.21-216.27"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:216.21-216.27")
36 08    # vstore 8        # x = pop__1(S, "clac.c0:216.21-216.27");
15 01    # vload 1         # S
15 07    # vload 7         # y
14 44 3C # aldc 17468      # s[17468] = "clac.c0:217.13-217.23"
B8 00 2A # invokestatic 42 # push__1(S, y, "clac.c0:217.13-217.23")
57       # pop             # (ignore result)
15 01    # vload 1         # S
15 06    # vload 6         # z
14 44 52 # aldc 17490      # s[17490] = "clac.c0:218.13-218.23"
B8 00 2A # invokestatic 42 # push__1(S, z, "clac.c0:218.13-218.23")
57       # pop             # (ignore result)
15 01    # vload 1         # S
15 08    # vload 8         # x
14 44 68 # aldc 17512      # s[17512] = "clac.c0:219.13-219.23"
B8 00 2A # invokestatic 42 # push__1(S, x, "clac.c0:219.13-219.23")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <639:endif>
# <638:else>
14 44 7E # aldc 17534      # s[17534] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <639:endif>
A7 00 07 # goto +7         # goto <636:endif>
# <635:else>
14 44 9E # aldc 17566      # s[17566] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <636:endif>
A7 00 07 # goto +7         # goto <633:endif>
# <632:else>
14 44 BE # aldc 17598      # s[17598] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <633:endif>
A7 02 93 # goto +659       # goto <630:endif>
# <629:else>
15 05    # vload 5         # tok
14 44 CD # aldc 17613      # s[17613] = "if"
B7 00 0B # invokenative 11 # string_equal(tok, "if")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "if") == true) goto <640:then>
A7 00 97 # goto +151       # goto <641:else>
# <640:then>
15 01    # vload 1         # S
14 44 D0 # aldc 17616      # s[17616] = "clac.c0:225.12-225.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:225.12-225.26")
10 01    # bipush 1        # true
9F 00 83 # if_cmpeq +131   # if (stack_empty__1(S, "clac.c0:225.12-225.26") == true) goto <644:else>
A7 00 03 # goto +3         # goto <643:then>
# <643:then>
15 01    # vload 1         # S
14 44 E6 # aldc 17638      # s[17638] = "clac.c0:226.17-226.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:226.17-226.23")
36 06    # vstore 6        # x = pop__1(S, "clac.c0:226.17-226.23");
15 06    # vload 6         # x
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (x == 0) goto <646:then>
A7 00 69 # goto +105       # goto <647:else>
# <646:then>
15 00    # vload 0         # Q
14 44 FC # aldc 17660      # s[17660] = "clac.c0:228.17-228.31"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:228.17-228.31")
10 01    # bipush 1        # true
9F 00 55 # if_cmpeq +85    # if (queue_empty__1(Q, "clac.c0:228.17-228.31") == true) goto <650:else>
A7 00 03 # goto +3         # goto <649:then>
# <649:then>
15 00    # vload 0         # Q
14 45 12 # aldc 17682      # s[17682] = "clac.c0:229.28-229.34"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:229.28-229.34")
36 07    # vstore 7        # tok1 = deq__1(Q, "clac.c0:229.28-229.34");
15 00    # vload 0         # Q
14 45 28 # aldc 17704      # s[17704] = "clac.c0:230.19-230.33"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:230.19-230.33")
10 01    # bipush 1        # true
9F 00 34 # if_cmpeq +52    # if (queue_empty__1(Q, "clac.c0:230.19-230.33") == true) goto <653:else>
A7 00 03 # goto +3         # goto <652:then>
# <652:then>
15 00    # vload 0         # Q
14 45 3E # aldc 17726      # s[17726] = "clac.c0:231.30-231.36"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:231.30-231.36")
36 08    # vstore 8        # tok2 = deq__1(Q, "clac.c0:231.30-231.36");
15 00    # vload 0         # Q
14 45 54 # aldc 17748      # s[17748] = "clac.c0:232.21-232.35"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:232.21-232.35")
10 01    # bipush 1        # true
9F 00 13 # if_cmpeq +19    # if (queue_empty__1(Q, "clac.c0:232.21-232.35") == true) goto <656:else>
A7 00 03 # goto +3         # goto <655:then>
# <655:then>
15 00    # vload 0         # Q
14 45 6A # aldc 17770      # s[17770] = "clac.c0:233.32-233.38"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:233.32-233.38")
36 09    # vstore 9        # tok3 = deq__1(Q, "clac.c0:233.32-233.38");
A7 00 07 # goto +7         # goto <657:endif>
# <656:else>
14 45 80 # aldc 17792      # s[17792] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <657:endif>
A7 00 07 # goto +7         # goto <654:endif>
# <653:else>
14 45 A0 # aldc 17824      # s[17824] = "not enough tokens for operation"
BF       # athrow          # error "not enough tokens for operation"
# <654:endif>
A7 00 07 # goto +7         # goto <651:endif>
# <650:else>
14 45 C0 # aldc 17856      # s[17856] = "queue is empty"
BF       # athrow          # error "queue is empty"
# <651:endif>
A7 00 03 # goto +3         # goto <648:endif>
# <647:else>
# <648:endif>
A7 00 07 # goto +7         # goto <645:endif>
# <644:else>
14 45 CF # aldc 17871      # s[17871] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <645:endif>
A7 01 EF # goto +495       # goto <642:endif>
# <641:else>
15 05    # vload 5         # tok
14 45 DE # aldc 17886      # s[17886] = "pick"
B7 00 0B # invokenative 11 # string_equal(tok, "pick")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "pick") == true) goto <658:then>
A7 00 4F # goto +79        # goto <659:else>
# <658:then>
15 01    # vload 1         # S
14 45 E3 # aldc 17891      # s[17891] = "clac.c0:241.12-241.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:241.12-241.26")
10 01    # bipush 1        # true
9F 00 3B # if_cmpeq +59    # if (stack_empty__1(S, "clac.c0:241.12-241.26") == true) goto <662:else>
A7 00 03 # goto +3         # goto <661:then>
# <661:then>
15 01    # vload 1         # S
14 45 F9 # aldc 17913      # s[17913] = "clac.c0:242.17-242.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:242.17-242.23")
36 06    # vstore 6        # n = pop__1(S, "clac.c0:242.17-242.23");
15 06    # vload 6         # n
10 00    # bipush 0        # 0
A4 00 06 # if_icmple +6    # if (n <= 0) goto <664:then>
A7 00 0A # goto +10        # goto <665:else>
# <664:then>
14 46 0F # aldc 17935      # s[17935] = "only strictly positive integers"
BF       # athrow          # error "only strictly positive integers"
A7 00 1A # goto +26        # goto <666:endif>
# <665:else>
15 01    # vload 1         # S
15 06    # vload 6         # n
14 46 2F # aldc 17967      # s[17967] = "clac.c0:246.21-246.31"
B8 00 5E # invokestatic 94 # pick(S, n, "clac.c0:246.21-246.31")
36 07    # vstore 7        # nth = pick(S, n, "clac.c0:246.21-246.31");
15 01    # vload 1         # S
15 07    # vload 7         # nth
14 46 45 # aldc 17989      # s[17989] = "clac.c0:247.11-247.23"
B8 00 2A # invokestatic 42 # push__1(S, nth, "clac.c0:247.11-247.23")
57       # pop             # (ignore result)
# <666:endif>
A7 00 07 # goto +7         # goto <663:endif>
# <662:else>
14 46 5B # aldc 18011      # s[18011] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <663:endif>
A7 01 93 # goto +403       # goto <660:endif>
# <659:else>
15 05    # vload 5         # tok
14 46 6A # aldc 18026      # s[18026] = "skip"
B7 00 0B # invokenative 11 # string_equal(tok, "skip")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, "skip") == true) goto <667:then>
A7 00 76 # goto +118       # goto <668:else>
# <667:then>
15 01    # vload 1         # S
14 46 6F # aldc 18031      # s[18031] = "clac.c0:252.12-252.26"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac.c0:252.12-252.26")
10 01    # bipush 1        # true
9F 00 62 # if_cmpeq +98    # if (stack_empty__1(S, "clac.c0:252.12-252.26") == true) goto <671:else>
A7 00 03 # goto +3         # goto <670:then>
# <670:then>
15 01    # vload 1         # S
14 46 85 # aldc 18053      # s[18053] = "clac.c0:253.17-253.23"
B8 00 2B # invokestatic 43 # pop__1(S, "clac.c0:253.17-253.23")
36 06    # vstore 6        # n = pop__1(S, "clac.c0:253.17-253.23");
15 06    # vload 6         # n
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (n < 0) goto <673:then>
A7 00 0A # goto +10        # goto <674:else>
# <673:then>
14 46 9B # aldc 18075      # s[18075] = "negative values are invalid"
BF       # athrow          # error "negative values are invalid"
A7 00 41 # goto +65        # goto <675:endif>
# <674:else>
# <676:loop>
A7 00 03 # goto +3         # goto <677:body>
# <677:body>
15 06    # vload 6         # n
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (n > 0) goto <679:then>
A7 00 2E # goto +46        # goto <680:else>
# <679:then>
15 00    # vload 0         # Q
14 46 B7 # aldc 18103      # s[18103] = "clac.c0:258.18-258.32"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:258.18-258.32")
10 01    # bipush 1        # true
9F 00 1A # if_cmpeq +26    # if (queue_empty__1(Q, "clac.c0:258.18-258.32") == true) goto <683:else>
A7 00 03 # goto +3         # goto <682:then>
# <682:then>
15 00    # vload 0         # Q
14 46 CD # aldc 18125      # s[18125] = "clac.c0:259.30-259.36"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:259.30-259.36")
36 07    # vstore 7        # token = deq__1(Q, "clac.c0:259.30-259.36");
15 06    # vload 6         # n
10 01    # bipush 1        # 1
64       # isub            # 
36 06    # vstore 6        # n -= 1;
A7 00 07 # goto +7         # goto <684:endif>
# <683:else>
14 46 E3 # aldc 18147      # s[18147] = "unexpected end of input"
BF       # athrow          # error "unexpected end of input"
# <684:endif>
A7 00 06 # goto +6         # goto <681:endif>
# <680:else>
A7 00 06 # goto +6         # break
# <681:endif>
A7 FF C5 # goto -59        # goto <676:loop>
# <678:exit>
# <675:endif>
A7 00 07 # goto +7         # goto <672:endif>
# <671:else>
14 46 FB # aldc 18171      # s[18171] = "stack is empty"
BF       # athrow          # error "stack is empty"
# <672:endif>
A7 01 10 # goto +272       # goto <669:endif>
# <668:else>
15 05    # vload 5         # tok
14 47 0A # aldc 18186      # s[18186] = ":"
B7 00 0B # invokenative 11 # string_equal(tok, ":")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal(tok, ":") == true) goto <685:then>
A7 00 34 # goto +52        # goto <686:else>
# <685:then>
15 00    # vload 0         # Q
14 47 0C # aldc 18188      # s[18188] = "clac.c0:269.12-269.26"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:269.12-269.26")
10 01    # bipush 1        # true
9F 00 20 # if_cmpeq +32    # if (queue_empty__1(Q, "clac.c0:269.12-269.26") == true) goto <689:else>
A7 00 03 # goto +3         # goto <688:then>
# <688:then>
15 00    # vload 0         # Q
14 47 22 # aldc 18210      # s[18210] = "clac.c0:270.29-270.35"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:270.29-270.35")
36 06    # vstore 6        # name_token = deq__1(Q, "clac.c0:270.29-270.35");
15 02    # vload 2         # ST
15 00    # vload 0         # Q
15 06    # vload 6         # name_token
14 47 38 # aldc 18232      # s[18232] = "clac.c0:271.9-271.35"
B8 00 5A # invokestatic 90 # add_def(ST, Q, name_token, "clac.c0:271.9-271.35")
57       # pop             # (ignore result)
A7 00 07 # goto +7         # goto <690:endif>
# <689:else>
14 47 4D # aldc 18253      # s[18253] = "unexpected end of input"
BF       # athrow          # error "unexpected end of input"
# <690:endif>
A7 00 CF # goto +207       # goto <687:endif>
# <686:else>
15 02    # vload 2         # ST
62 00    # aaddf 0         # &ST->dictionary
2F       # amload          # ST->dictionary
15 05    # vload 5         # tok
14 47 65 # aldc 18277      # s[18277] = "clac.c0:274.16-274.48"
B8 00 20 # invokestatic 32 # dict_lookup__1(ST->dictionary, tok, "clac.c0:274.16-274.48")
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (dict_lookup__1(ST->dictionary, tok, "clac.c0:274.16-274.48") != NULL) goto <691:then>
A7 00 8B # goto +139       # goto <692:else>
# <691:then>
14 47 7B # aldc 18299      # s[18299] = "clac.c0:275.24-275.35"
B8 00 15 # invokestatic 21 # queue_new__1("clac.c0:275.24-275.35")
36 06    # vstore 6        # stackq = queue_new__1("clac.c0:275.24-275.35");
# <694:loop>
A7 00 03 # goto +3         # goto <695:body>
# <695:body>
15 00    # vload 0         # Q
14 47 91 # aldc 18321      # s[18321] = "clac.c0:276.15-276.29"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:276.15-276.29")
10 01    # bipush 1        # true
9F 00 1A # if_cmpeq +26    # if (queue_empty__1(Q, "clac.c0:276.15-276.29") == true) goto <698:else>
A7 00 03 # goto +3         # goto <697:then>
# <697:then>
15 06    # vload 6         # stackq
15 00    # vload 0         # Q
14 47 A7 # aldc 18343      # s[18343] = "clac.c0:277.21-277.27"
B8 00 17 # invokestatic 23 # deq__1(Q, "clac.c0:277.21-277.27")
14 47 BD # aldc 18365      # s[18365] = "clac.c0:277.9-277.28"
B8 00 16 # invokestatic 22 # enq__1(stackq, deq__1(Q, "clac.c0:277.21-277.27"), "clac.c0:277.9-277.28")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <699:endif>
# <698:else>
A7 00 06 # goto +6         # break
# <699:endif>
A7 FF D6 # goto -42        # goto <694:loop>
# <696:exit>
15 02    # vload 2         # ST
62 08    # aaddf 8         # &ST->return_stack
2F       # amload          # ST->return_stack
15 06    # vload 6         # stackq
14 47 D2 # aldc 18386      # s[18386] = "clac.c0:279.7-279.38"
B8 00 34 # invokestatic 52 # qpush__1(ST->return_stack, stackq, "clac.c0:279.7-279.38")
57       # pop             # (ignore result)
15 02    # vload 2         # ST
62 00    # aaddf 0         # &ST->dictionary
2F       # amload          # ST->dictionary
15 05    # vload 5         # tok
14 47 E7 # aldc 18407      # s[18407] = "clac.c0:280.44-280.76"
B8 00 20 # invokestatic 32 # dict_lookup__1(ST->dictionary, tok, "clac.c0:280.44-280.76")
14 47 FD # aldc 18429      # s[18429] = "clac.c0:280.23-280.77"
B8 00 18 # invokestatic 24 # queue_read_only_copy__1(dict_lookup__1(ST->dictionary, tok, "clac.c0:280.44-280.76"), "clac.c0:280.23-280.77")
36 07    # vstore 7        # defin = queue_read_only_copy__1(dict_lookup__1(ST->dictionary, tok, "clac.c0:280.44-280.76"), "clac.c0:280.23-280.77");
# <700:loop>
A7 00 03 # goto +3         # goto <701:body>
# <701:body>
15 07    # vload 7         # defin
14 48 13 # aldc 18451      # s[18451] = "clac.c0:281.15-281.33"
B8 00 13 # invokestatic 19 # queue_empty__1(defin, "clac.c0:281.15-281.33")
10 01    # bipush 1        # true
9F 00 1A # if_cmpeq +26    # if (queue_empty__1(defin, "clac.c0:281.15-281.33") == true) goto <704:else>
A7 00 03 # goto +3         # goto <703:then>
# <703:then>
15 00    # vload 0         # Q
15 07    # vload 7         # defin
14 48 29 # aldc 18473      # s[18473] = "clac.c0:282.16-282.26"
B8 00 17 # invokestatic 23 # deq__1(defin, "clac.c0:282.16-282.26")
14 48 3F # aldc 18495      # s[18495] = "clac.c0:282.9-282.27"
B8 00 16 # invokestatic 22 # enq__1(Q, deq__1(defin, "clac.c0:282.16-282.26"), "clac.c0:282.9-282.27")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <705:endif>
# <704:else>
A7 00 06 # goto +6         # break
# <705:endif>
A7 FF D6 # goto -42        # goto <700:loop>
# <702:exit>
A7 00 33 # goto +51        # goto <693:endif>
# <692:else>
15 05    # vload 5         # tok
10 0A    # bipush 10       # 10
14 48 54 # aldc 18516      # s[18516] = "clac.c0:287.16-287.34"
B8 00 43 # invokestatic 67 # parse_int__1(tok, 10, "clac.c0:287.16-287.34")
36 06    # vstore 6        # p = parse_int__1(tok, 10, "clac.c0:287.16-287.34");
15 06    # vload 6         # p
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (p == NULL) goto <706:then>
A7 00 12 # goto +18        # goto <707:else>
# <706:then>
14 48 6A # aldc 18538      # s[18538] = "undefined token "
15 05    # vload 5         # tok
14 48 7B # aldc 18555      # s[18555] = "clac.c0:290.15-290.51"
B8 00 02 # invokestatic 2  # string_join__1("undefined token ", tok, "clac.c0:290.15-290.51")
BF       # athrow          # error string_join__1("undefined token ", tok, "clac.c0:290.15-290.51")
A7 00 03 # goto +3         # goto <708:endif>
# <707:else>
# <708:endif>
15 01    # vload 1         # S
15 06    # vload 6         # p
2E       # imload          # *(p)
14 48 91 # aldc 18577      # s[18577] = "clac.c0:292.7-292.18"
B8 00 2A # invokestatic 42 # push__1(S, *(p), "clac.c0:292.7-292.18")
57       # pop             # (ignore result)
# <693:endif>
# <687:endif>
# <669:endif>
# <660:endif>
# <642:endif>
# <630:endif>
# <621:endif>
# <615:endif>
# <603:endif>
# <591:endif>
# <582:endif>
# <573:endif>
# <564:endif>
# <555:endif>
# <546:endif>
# <540:endif>
# <534:endif>
15 00    # vload 0         # Q
14 48 A6 # aldc 18598      # s[18598] = "clac.c0:295.9-295.23"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:295.9-295.23")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (queue_empty__1(Q, "clac.c0:295.9-295.23") == true) goto <712:and>
A7 00 8F # goto +143       # goto <710:else>
# <712:and>
15 02    # vload 2         # ST
62 08    # aaddf 8         # &ST->return_stack
2F       # amload          # ST->return_stack
14 48 BB # aldc 18619      # s[18619] = "clac.c0:295.28-295.58"
B8 00 32 # invokestatic 50 # qstack_empty__1(ST->return_stack, "clac.c0:295.28-295.58")
10 01    # bipush 1        # true
9F 00 7F # if_cmpeq +127   # if (qstack_empty__1(ST->return_stack, "clac.c0:295.28-295.58") == true) goto <710:else>
A7 00 03 # goto +3         # goto <709:then>
# <709:then>
15 02    # vload 2         # ST
62 08    # aaddf 8         # &ST->return_stack
2F       # amload          # ST->return_stack
14 48 D1 # aldc 18641      # s[18641] = "clac.c0:296.22-296.44"
B8 00 35 # invokestatic 53 # qpop__1(ST->return_stack, "clac.c0:296.22-296.44")
36 06    # vstore 6        # temp = qpop__1(ST->return_stack, "clac.c0:296.22-296.44");
# <713:loop>
A7 00 03 # goto +3         # goto <714:body>
# <714:body>
15 06    # vload 6         # temp
14 48 E7 # aldc 18663      # s[18663] = "clac.c0:297.14-297.31"
B8 00 13 # invokestatic 19 # queue_empty__1(temp, "clac.c0:297.14-297.31")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (queue_empty__1(temp, "clac.c0:297.14-297.31") == true) goto <719:and>
A7 00 26 # goto +38        # goto <717:else>
# <719:and>
15 02    # vload 2         # ST
62 08    # aaddf 8         # &ST->return_stack
2F       # amload          # ST->return_stack
14 48 FD # aldc 18685      # s[18685] = "clac.c0:297.36-297.66"
B8 00 32 # invokestatic 50 # qstack_empty__1(ST->return_stack, "clac.c0:297.36-297.66")
10 01    # bipush 1        # true
9F 00 16 # if_cmpeq +22    # if (qstack_empty__1(ST->return_stack, "clac.c0:297.36-297.66") == true) goto <717:else>
A7 00 03 # goto +3         # goto <716:then>
# <716:then>
15 02    # vload 2         # ST
62 08    # aaddf 8         # &ST->return_stack
2F       # amload          # ST->return_stack
14 49 13 # aldc 18707      # s[18707] = "clac.c0:298.16-298.38"
B8 00 35 # invokestatic 53 # qpop__1(ST->return_stack, "clac.c0:298.16-298.38")
36 06    # vstore 6        # temp = qpop__1(ST->return_stack, "clac.c0:298.16-298.38");
A7 00 06 # goto +6         # goto <718:endif>
# <717:else>
A7 00 06 # goto +6         # break
# <718:endif>
A7 FF C7 # goto -57        # goto <713:loop>
# <715:exit>
# <720:loop>
A7 00 03 # goto +3         # goto <721:body>
# <721:body>
15 06    # vload 6         # temp
14 49 29 # aldc 18729      # s[18729] = "clac.c0:300.15-300.32"
B8 00 13 # invokestatic 19 # queue_empty__1(temp, "clac.c0:300.15-300.32")
10 01    # bipush 1        # true
9F 00 1A # if_cmpeq +26    # if (queue_empty__1(temp, "clac.c0:300.15-300.32") == true) goto <724:else>
A7 00 03 # goto +3         # goto <723:then>
# <723:then>
15 00    # vload 0         # Q
15 06    # vload 6         # temp
14 49 3F # aldc 18751      # s[18751] = "clac.c0:301.16-301.25"
B8 00 17 # invokestatic 23 # deq__1(temp, "clac.c0:301.16-301.25")
14 49 55 # aldc 18773      # s[18773] = "clac.c0:301.9-301.26"
B8 00 16 # invokestatic 22 # enq__1(Q, deq__1(temp, "clac.c0:301.16-301.25"), "clac.c0:301.9-301.26")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <725:endif>
# <724:else>
A7 00 06 # goto +6         # break
# <725:endif>
A7 FF D6 # goto -42        # goto <720:loop>
# <722:exit>
A7 00 03 # goto +3         # goto <711:endif>
# <710:else>
# <711:endif>
A7 00 06 # goto +6         # goto <531:endif>
# <530:else>
A7 00 06 # goto +6         # break
# <531:endif>
A7 F8 17 # goto -2025      # goto <526:loop>
# <528:exit>
10 01    # bipush 1        # true
36 04    # vstore 4        # _result = true;
15 04    # vload 4         # _result
10 00    # bipush 0        # false
9F 00 06 # if_cmpeq +6     # if (_result == false) goto <726:cond_true>
A7 00 08 # goto +8         # goto <727:cond_false>
# <726:cond_true>
10 01    # bipush 1        # true
A7 00 0B # goto +11        # goto <728:cond_end>
# <727:cond_false>
15 00    # vload 0         # Q
14 49 6A # aldc 18794      # s[18794] = "clac.c0:106.32-106.46"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac.c0:106.32-106.46")
# <728:cond_end>
14 49 80 # aldc 18816      # s[18816] = "clac.c0:106.4-106.47: @ensures annotation failed"
CF       # assert          # assert((_result == false) || queue_empty__1(Q, "clac.c0:106.32-106.46")) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<print_top>
00 02             # number of arguments = 2
00 0A             # number of local variables = 10
00 D8             # code length = 216 bytes
15 00    # vload 0         # S
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (S != NULL) goto <729:cond_true>
A7 00 08 # goto +8         # goto <730:cond_false>
# <729:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <731:cond_end>
# <730:cond_false>
10 00    # bipush 0        # false
# <731:cond_end>
14 49 B1 # aldc 18865      # s[18865] = "clac-main.c0:13.4-13.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 49 E7 # aldc 18919      # s[18919] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("clac-main.c0:13.4-13.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(S != NULL) [failure message on stack]
15 00    # vload 0         # S
14 49 F9 # aldc 18937      # s[18937] = "clac-main.c0:15.7-15.21"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac-main.c0:15.7-15.21")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (stack_empty__1(S, "clac-main.c0:15.7-15.21") == true) goto <732:then>
A7 00 10 # goto +16        # goto <733:else>
# <732:then>
14 4A 11 # aldc 18961      # s[18961] = "Stack is now empty"
B7 00 1E # invokenative 30 # println("Stack is now empty")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 03 # goto +3         # goto <734:endif>
# <733:else>
# <734:endif>
14 4A 24 # aldc 18980      # s[18980] = "Stack is now ["
B7 00 1D # invokenative 29 # print("Stack is now [")
57       # pop             # (ignore result)
15 00    # vload 0         # S
14 4A 33 # aldc 18995      # s[18995] = "clac-main.c0:21.13-21.19"
B8 00 2B # invokestatic 43 # pop__1(S, "clac-main.c0:21.13-21.19")
36 02    # vstore 2        # top = pop__1(S, "clac-main.c0:21.13-21.19");
15 00    # vload 0         # S
14 4A 4C # aldc 19020      # s[19020] = "clac-main.c0:22.7-22.21"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac-main.c0:22.7-22.21")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (stack_empty__1(S, "clac-main.c0:22.7-22.21") == true) goto <735:then>
A7 00 21 # goto +33        # goto <736:else>
# <735:then>
15 02    # vload 2         # top
B7 00 1C # invokenative 28 # printint(top)
57       # pop             # (ignore result)
14 4A 64 # aldc 19044      # s[19044] = "]"
B7 00 1E # invokenative 30 # println("]")
57       # pop             # (ignore result)
15 00    # vload 0         # S
15 02    # vload 2         # top
14 4A 66 # aldc 19046      # s[19046] = "clac-main.c0:24.5-24.17"
B8 00 2A # invokestatic 42 # push__1(S, top, "clac-main.c0:24.5-24.17")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 03 # goto +3         # goto <737:endif>
# <736:else>
# <737:endif>
15 00    # vload 0         # S
14 4A 7E # aldc 19070      # s[19070] = "clac-main.c0:28.14-28.20"
B8 00 2B # invokestatic 43 # pop__1(S, "clac-main.c0:28.14-28.20")
36 03    # vstore 3        # next = pop__1(S, "clac-main.c0:28.14-28.20");
15 00    # vload 0         # S
14 4A 97 # aldc 19095      # s[19095] = "clac-main.c0:29.9-29.23"
B8 00 28 # invokestatic 40 # stack_empty__1(S, "clac-main.c0:29.9-29.23")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (stack_empty__1(S, "clac-main.c0:29.9-29.23") == true) goto <738:cond_true>
A7 00 09 # goto +9         # goto <739:cond_false>
# <738:cond_true>
14 4A AF # aldc 19119      # s[19119] = ""
A7 00 06 # goto +6         # goto <740:cond_end>
# <739:cond_false>
14 4A B0 # aldc 19120      # s[19120] = "..,"
# <740:cond_end>
B7 00 1D # invokenative 29 # print((stack_empty__1(S, "clac-main.c0:29.9-29.23") ? "" : "..,"))
57       # pop             # (ignore result)
15 03    # vload 3         # next
B7 00 1C # invokenative 28 # printint(next)
57       # pop             # (ignore result)
14 4A B4 # aldc 19124      # s[19124] = ","
B7 00 1D # invokenative 29 # print(",")
57       # pop             # (ignore result)
15 02    # vload 2         # top
B7 00 1C # invokenative 28 # printint(top)
57       # pop             # (ignore result)
14 4A B6 # aldc 19126      # s[19126] = "]"
B7 00 1E # invokenative 30 # println("]")
57       # pop             # (ignore result)
15 00    # vload 0         # S
15 03    # vload 3         # next
14 4A B8 # aldc 19128      # s[19128] = "clac-main.c0:31.3-31.16"
B8 00 2A # invokestatic 42 # push__1(S, next, "clac-main.c0:31.3-31.16")
57       # pop             # (ignore result)
15 00    # vload 0         # S
15 02    # vload 2         # top
14 4A D0 # aldc 19152      # s[19152] = "clac-main.c0:31.18-31.30"
B8 00 2A # invokestatic 42 # push__1(S, top, "clac-main.c0:31.18-31.30")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<top_level>
00 02             # number of arguments = 2
00 0A             # number of local variables = 10
00 C7             # code length = 199 bytes
15 00    # vload 0         # Q
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (Q != NULL) goto <741:cond_true>
A7 00 08 # goto +8         # goto <742:cond_false>
# <741:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <743:cond_end>
# <742:cond_false>
10 00    # bipush 0        # false
# <743:cond_end>
14 4A E9 # aldc 19177      # s[19177] = "clac-main.c0:36.4-36.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 4B 1F # aldc 19231      # s[19231] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("clac-main.c0:36.4-36.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(Q != NULL) [failure message on stack]
14 4B 31 # aldc 19249      # s[19249] = "clac-main.c0:39.15-39.26"
B8 00 29 # invokestatic 41 # stack_new__1("clac-main.c0:39.15-39.26")
36 02    # vstore 2        # S = stack_new__1("clac-main.c0:39.15-39.26");
14 4B 4A # aldc 19274      # s[19274] = "clac-main.c0:40.16-40.28"
B8 00 59 # invokestatic 89 # init_state("clac-main.c0:40.16-40.28")
36 03    # vstore 3        # ST = init_state("clac-main.c0:40.16-40.28");
10 01    # bipush 1        # true
36 04    # vstore 4        # cont = true;
14 4B 63 # aldc 19299      # s[19299] = "Clac top level\n"
B7 00 1D # invokenative 29 # print("Clac top level\n")
57       # pop             # (ignore result)
# <744:loop>
A7 00 03 # goto +3         # goto <745:body>
# <745:body>
15 04    # vload 4         # cont
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (cont == true) goto <747:then>
A7 00 70 # goto +112       # goto <748:else>
# <747:then>
15 00    # vload 0         # Q
14 4B 73 # aldc 19315      # s[19315] = "clac-main.c0:46.9-46.23"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac-main.c0:46.9-46.23")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (queue_empty__1(Q, "clac-main.c0:46.9-46.23") == true) goto <750:then>
A7 00 2B # goto +43        # goto <751:else>
# <750:then>
B7 00 0C # invokenative 12 # eof()
10 01    # bipush 1        # true
9F 00 1D # if_cmpeq +29    # if (eof() == true) goto <754:else>
A7 00 03 # goto +3         # goto <753:then>
# <753:then>
14 4B 8B # aldc 19339      # s[19339] = "clac>> "
B7 00 1D # invokenative 29 # print("clac>> ")
57       # pop             # (ignore result)
B7 00 1F # invokenative 31 # flush()
57       # pop             # (ignore result)
15 00    # vload 0         # Q
14 4B 93 # aldc 19347      # s[19347] = "clac-main.c0:50.9-50.22"
B8 00 3D # invokestatic 61 # input_line__1(Q, "clac-main.c0:50.9-50.22")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <755:endif>
# <754:else>
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <755:endif>
A7 00 03 # goto +3         # goto <752:endif>
# <751:else>
# <752:endif>
15 00    # vload 0         # Q
15 02    # vload 2         # S
15 03    # vload 3         # ST
14 4B AB # aldc 19371      # s[19371] = "clac-main.c0:56.12-56.26"
B8 00 5F # invokestatic 95 # eval(Q, S, ST, "clac-main.c0:56.12-56.26")
36 04    # vstore 4        # cont = eval(Q, S, ST, "clac-main.c0:56.12-56.26");
15 04    # vload 4         # cont
10 01    # bipush 1        # true
9F 00 0B # if_cmpeq +11    # if (cont == true) goto <757:cond_false>
A7 00 03 # goto +3         # goto <756:cond_true>
# <756:cond_true>
10 01    # bipush 1        # true
A7 00 0B # goto +11        # goto <758:cond_end>
# <757:cond_false>
15 00    # vload 0         # Q
14 4B C4 # aldc 19396      # s[19396] = "clac-main.c0:57.24-57.38"
B8 00 13 # invokestatic 19 # queue_empty__1(Q, "clac-main.c0:57.24-57.38")
# <758:cond_end>
14 4B DD # aldc 19421      # s[19421] = "clac-main.c0:57.8-57.39: @assert annotation failed"
CF       # assert          # assert(!(cont) || queue_empty__1(Q, "clac-main.c0:57.24-57.38")) [failure message on stack]
15 02    # vload 2         # S
14 4C 10 # aldc 19472      # s[19472] = "clac-main.c0:58.5-58.17"
B8 00 60 # invokestatic 96 # print_top(S, "clac-main.c0:58.5-58.17")
57       # pop             # (ignore result)
A7 00 06 # goto +6         # goto <749:endif>
# <748:else>
A7 00 06 # goto +6         # break
# <749:endif>
A7 FF 83 # goto -125       # goto <744:loop>
# <746:exit>
14 4C 28 # aldc 19496      # s[19496] = "Bye!\n"
B7 00 1D # invokenative 29 # print("Bye!\n")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 

00 20             # native count
# native pool
00 01 00 65       # string_length
00 02 00 64       # string_join
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5E       # string_compare
00 01 00 62       # string_fromchar
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 02 00 5F       # string_equal
00 00 00 04       # eof
00 00 00 0B       # readline
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline
00 02 00 58       # parse_int
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 01 00 56       # num_tokens
00 02 00 59       # parse_ints
00 02 00 00       # args_flag
00 02 00 01       # args_int
00 02 00 03       # args_string
00 00 00 02       # args_parse
00 01 00 09       # printint
00 01 00 06       # print
00 01 00 0A       # println
00 00 00 05       # flush

